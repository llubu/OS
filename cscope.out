cscope 15 $HOME/src/OS               0000384252
	@crt/crt1.c

1 
	~<°dlib.h
>

3 
	$_°¨t
() {

4 
¨gc
 = 1;

5 * 
¨gv
[10];

6 * 
ívp
[10];

7 
ªs
;

8 
ªs
 = 
	`maö
(
¨gc
, 
¨gv
, 
ívp
);

9 
	`exô
(
ªs
);

10 
	}
}

	@include/common.h

2 #i‚de‡
_COMMON_H


3 
	#_COMMON_H


	)

7 
ölöe
 
	$outb
(
p‹t
, 
vÆ
)

9 
__asm
 volatile("outb %0, %1"

10 : : "a"(
vÆ
), "Nd"(
p‹t
) );

11 
	}
}

13 
ölöe
 
	$öb
(
p‹t
)

15 
ªt
;

16 
__asm
 volatile( "inb %1, %0"

17 : "˜"(
ªt
Ë: "Nd"(
p‹t
) );

18  
ªt
;

19 
	}
}

	@include/defs.h

1 #i‚de‡
_DEFS_H


2 
	#_DEFS_H


	)

4 
	#NULL
 0

	)

6 
	t__uöt64_t
;

7 
__uöt64_t
 
	tuöt64_t
;

8 
	t__uöt32_t
;

9 
__uöt32_t
 
	tuöt32_t
;

10 
	t__öt32_t
;

11 
__öt32_t
 
	töt32_t
;

12 
	t__uöt16_t
;

13 
__uöt16_t
 
	tuöt16_t
;

	@include/libc/dir.h

1 
	~<defs.h
>

2 
	~<°dio.h
>

3 
	~<sysˇŒ.h
>

4 
	~<sys/gdt.h
>

5 
	~<sys/idt.h
>

6 
	~<sys/i§.h
>

7 
	~<sys/úq.h
>

8 
	~<sys/pmem_m™agî.h
>

9 
	~<sys/kîn_∑ge_èbÀ.h
>

10 
	~<sys/èrfs.h
>

11 
	~<sys/dúít.h
>

12 
	~<sys/°rög.h
>

13 
	~<sys/î∫o.h
>

14 
	~<sys/v_mem_m™agî.h
>

15 
	~<libc/mÆloc.h
>

17 
dúít
* 
u_ªaddú
(
DIR
* 
dúe˘‹y
);

18 
DIR
* 
u_›ídú
(* 
°r
);

19 
uöt64_t
 
u_˛o£dú
(
DIR
* 
dúe˘‹y
);

20 
uöt64_t
 
›í
(* 
°r
);

21 
uöt64_t
 
˛o£
(uöt64_à
fd
);

22 
uöt64_t
 
ªad
(uöt64_à
fd
,uöt64_à
num
, * 
°r
 );

	@include/libc/malloc.h

1 #i‚de‡
_MALLOC_H


2 
	#_MALLOC_H


	)

4 
	~<defs.h
>

6 *
mÆloc
(
uöt64_t
 
no_byãs
);

7 
uöt64_t
 
f‹k
();

8 
execve
(*
fûíame
);

9 
yõld
();

10 
ps
();

	@include/shell.h

1 #i‚de‡
_SHELL_H


2 
	#_SHELL_H


	)

4 *
PATH
;

	@include/stdarg.h

1 #i‚de‡
_STDARG_H


2 
	#_STDARG_H


	)

4 
	#va_°¨t
(
v
,
l
Ë
	`__buûtö_va_°¨t
(v,l)

	)

5 
	#va_¨g
(
v
,
l
Ë
	`__buûtö_va_¨g
(v,l)

	)

6 
	#va_íd
(
v
Ë
	`__buûtö_va_íd
(v)

	)

7 
	#va_c›y
(
d
,
s
Ë
	`__buûtö_va_c›y
(d,s)

	)

8 
__buûtö_va_li°
 
	tva_li°
;

	@include/stdio.h

1 #i‚de‡
_STDIO_H


2 
	#_STDIO_H


	)

4 
	~<defs.h
>

6 
¥ötf
(c⁄° *
f‹m©
, ...);

7 
sˇnf
(c⁄° *
f‹m©
, 
uöt64_t
 
±
);

9 
putch
();

10 
ôﬂ
(
uöt64_t
 
num
, *
bu
);

11 
˛ór_s¸ìn
();

12 
put°r
(* 
°r
);

15 
uöt64_t
 
sys_putöt
(
a
);

25 
uöt64_t
 
u_¥ötf
(c⁄° *
f‹m©
, ...);

26 
uöt64_t
 
u_sˇnf
(c⁄° *
f‹m©
, uöt64_à
±r
);

27 
uöt64_t
 
°dî
(c⁄° * 
fmt
, ...) ;

28 
wrôe
(
fd
, vﬁ©ûê* 
°r
, 
n
);

37 
uöt64_t
 
video
;

	@include/stdlib.h

1 #i‚de‡
_STDLIB_H


2 
	#_STDLIB_H


	)

4 
maö
(
¨gc
, * 
¨gv
[], * 
ívp
[]);

5 
exô
(
°©us
);

	@include/sys/dirent.h

1 #i‚de‡
DIRENT_H


2 
	#DIRENT_H


	)

4 
	~<sys/èrfs.h
>

5 
	~<defs.h
>

6 
	#NAMEMAX
 256

	)

17 
	#_A_NORMAL
 0x00

	)

18 
	#_A_RDONLY
 0x01

	)

19 
	#_A_HIDDEN
 0x02

	)

20 
	#_A_SYSTEM
 0x04

	)

21 
	#_A_SUBDIR
 0x10

	)

22 
	#_A_ARCH
 0x20

	)

25 
	sdúít
 {

26 
	md_«me
[
NAMEMAX
];

27 
uöt64_t
 
	moff£t
;

28 } 
	tdúít
;

32 
	sDIR
 {

33 
	mdú«me
[
NAMEMAX
];

34 
dúít
 
	mcuºít
;

35 
	mdúít_fûÀd
;

36 } 
	tDIR
;

39 
	sFûe
 {

40 
	m∑th
[256];

41 
uöt64_t
 
	moff£t
;

42 
dúít
 
	m∑ª¡
;

45 
li°
();

46 
födNext
(
dúít
* 
cuºít
);

47 
DIR
 * 
›ídú
(c⁄° *
dú«me
);

48 
dúít
* 
ªaddú
(
DIR
* 
dú
);

49 
födfú°
(* 
dú«me
, 
•ec
 , 
dúít
* 
d©a
 );

50 
˛o£dú
 (
DIR
 *
dúp
);

51 
uöt64_t
 
›í_fûe
(* 
fûíame
);

52 
uöt64_t
 
˛o£_fûe
(uöt64_à
fd
);

53 
uöt64_t
 
ªad_fûe
(uöt64_à
fd
,uöt64_à
num
, * 
buf„r
);

	@include/sys/errno.h

1 #i‚de‡
ERRNO_H


2 
	#ERRNO_H


	)

5 
	#EDOM
 1

	)

6 
	#ERANGE
 2

	)

8 
î∫o
;

10 
	#E2BIG
 3

	)

11 
	#EACCES
 4

	)

12 
	#EAGAIN
 5

	)

13 
	#EBADF
 6

	)

14 
	#EBUSY
 7

	)

15 
	#ECHILD
 8

	)

16 
	#EDEADLK
 9

	)

17 
	#EEXIST
 10

	)

18 
	#EFAULT
 11

	)

19 
	#EFBIG
 12

	)

20 
	#EINTR
 13

	)

21 
	#EINVAL
 14

	)

22 
	#EIO
 15

	)

23 
	#EISDIR
 16

	)

24 
	#EMFILE
 17

	)

25 
	#EMLINK
 18

	)

26 
	#ENAMETOOLONG
 19

	)

27 
	#ENFILE
 20

	)

28 
	#ENODEV
 21

	)

29 
	#ENOENT
 22

	)

30 
	#ENOEXEC
 23

	)

31 
	#ENOLCK
 24

	)

32 
	#ENOMEM
 25

	)

33 
	#ENOSPC
 26

	)

34 
	#ENOSYS
 27

	)

35 
	#ENOTDIR
 28

	)

36 
	#ENOTEMPTY
 29

	)

37 
	#ENOTTY
 30

	)

38 
	#ENXIO
 31

	)

39 
	#EPERM
 32

	)

40 
	#EPIPE
 33

	)

41 
	#EROFS
 34

	)

42 
	#ESPIPE
 35

	)

43 
	#ESRCH
 36

	)

44 
	#EXDEV
 37

	)

	@include/sys/execve.h

1 #i‚de‡
_DO_EXECVE


2 
	#_DO_EXECVE


	)

4 
do_execve
(*
fûíame
);

	@include/sys/gdt.h

1 #i‚de‡
_GDT_H


2 
	#_GDT_H


	)

4 
	~<defs.h
>

6 
	stss_t
 {

7 
uöt32_t
 
	mª£rved
;

8 
uöt64_t
 
	mr•0
;

9 
uöt32_t
 
	munu£d
[11];

10 }
__©åibuã__
((
∑cked
));

11 
tss_t
 
tss
;

15 
	#GDT_CS
 (0x00180000000000Ë

	)

16 
	#GDT_DS
 (0x00100000000000Ë

	)

18 
	#C
 (0x00040000000000Ë

	)

19 
	#DPL0
 (0x00000000000000Ë

	)

20 
	#DPL1
 (0x00200000000000Ë

	)

21 
	#DPL2
 (0x00400000000000Ë

	)

22 
	#DPL3
 (0x00600000000000Ë

	)

23 
	#P
 (0x00800000000000Ë

	)

24 
	#L
 (0x20000000000000Ë

	)

25 
	#D
 (0x40000000000000Ë

	)

26 
	#W
 (0x00020000000000Ë

	)

28 
uöt64_t
 
gdt
[];

30 
ªlﬂd_gdt
();

31 
£tup_tss
();

	@include/sys/idt.h

1 #i‚de‡
_IDT_H


2 
	#_IDT_H


	)

4 
	~<defs.h
>

8 
	#IDT_IST
 (0x0000Ë

	)

9 
	#IDT_RESERVED
 (0x0000Ë

	)

10 
	#IDT_TYPE
 (0x0E00Ë

	)

11 
	#IDT_ZERO
 (0x0000Ë

	)

12 
	#IDT_DPL0
 (0x0000Ë

	)

13 
	#IDT_DPL1
 (0x2000Ë

	)

14 
	#IDT_DPL2
 (0x4000Ë

	)

15 
	#IDT_DPL3
 (0x6000Ë

	)

16 
	#IDT_P
 (0x8000Ë

	)

18 
ªlﬂd_idt
();

	@include/sys/irq.h

1 
	~"i§.h
"

2 
	~<sys/èsk_swôch.h
>

3 
	#PIC_EOI
 0x20

	)

4 
	#PIC1
 0x20

	)

5 
	#PIC2
 0xA0

	)

7 
öô_pic
();

9 
úq_h™dÀr_0
(
GREG
 
ªgs
);

10 
PIC_£ndEOI
(
úq
);

11 
öô_timî
();

12 
¥öâime
(
hour
, 
möuã
, 
£c⁄ds
);

13 vﬁ©ûê
kbuf
[128];

14 vﬁ©ûê
kbuf_ödex
;

15 vﬁ©ûê
√wlöe
;

16 vﬁ©ûê
uöt64_t
 
£c
 ;

	@include/sys/isr.h

1 #i‚de‡
_ISR_H


2 
	#_ISR_H


	)

4 
	sªgi°îs


6 
uöt64_t
 
	mr15
, 
	mr14
, 
	mr13
, 
	mr12
, 
	mr11
, 
	mr10
, 
	mr9
, 
	mr8
, 
	mrbp
, 
	mrdi
, 
	mrsi
, 
	mrdx
, 
	mrcx
, 
	mrbx
, 
	møx
;

7 
	mîr_code
;

10 } 
	tªgi°îs_t
;

13 
	sªgis


15 
uöt64_t
 
	mr15
;

16 
uöt64_t
 
	mr14
;

17 
uöt64_t
 
	mr13
;

18 
uöt64_t
 
	mr12
;

19 
uöt64_t
 
	mr11
;

20 
uöt64_t
 
	mr10
;

21 
uöt64_t
 
	mr9
;

22 
uöt64_t
 
	mr8
;

24 
uöt64_t
 
	mrbp
;

25 
uöt64_t
 
	mrdi
;

26 
uöt64_t
 
	mrsi
;

27 
uöt64_t
 
	mrdx
;

28 
uöt64_t
 
	mrcx
;

29 
uöt64_t
 
	mrbx
;

30 
uöt64_t
 
	møx
;

33 
ªgis
 
	t°ªg
;

	@include/sys/kern_page_table.h

1 #i‚de‡
_KERN_PAGE_TABLE


2 
	#_KERN_PAGE_TABLE


	)

4 
kîn_±
(*
v_kîn
, 
uöt64_t
 
pba£
, uöt64_à
p‰ì
);

5 
uöt64_t
 
c⁄°ru˘_addªss
(uöt64_à
add1
, 
b1
, 
b2
, 
b3
);

6 
£lf_ª‰í˚
(
uöt64_t
 
v_add
);

	@include/sys/pmem_manager.h

1 #i‚de‡
_PMEM_MANAGER


2 
	#_PMEM_MANAGER


	)

4 
	s∑ge


6 
uöt64_t
 
	m∑ge_ba£
;

7 
∑ge
 *
	m√xt
;

8 }
	tPage
;

10 
	ssm≠_t


12 
uöt64_t
 
	mba£
, 
	mÀngth
;

13 
uöt32_t
 
	mty≥
;

14 }
__©åibuã__
((
∑cked
)Ë*
	gsm≠
;

16 
Page
 *
hód
;

17 
uöt64_t
 
vm_ˇ°
;

18 
uöt64_t
 
p_‰ì
;

19 
‰ì_∑ge_li°
(
sm≠_t
 *
•
, *
physba£
, *
phy‰ì
);

20 * 
gë_∑ge
();

21 
‰ì_∑ge
(* 
±
);

	@include/sys/process_que.h

1 #i‚de‡
_PROCESS_QUE_


2 
	#_PROCESS_QUE_


	)

5 
lookötoQ
(
PLIST
 *
li°
, 
uöt64_t
 
id
);

6 
lookötoQChûd
(
PLIST
 *
li°
, 
uöt64_t
 
id
);

7 
PCB
 *
ªmove‰omQ
(
PLIST
 *
li°
, 
uöt64_t
 
pid
);

9 
do_exô
(
°©us
);

10 
uöt64_t
 
do_waôpid
(uöt64_à
pid
);

11 
do_waô
();

12 
do_Ps
();

	@include/sys/string.h

1 #i‚de‡
STRING_H


2 
	#STRING_H


	)

4 
°rcmp
(c⁄° *
s1
, c⁄° *
s2
);

5 * 
°r˝y
(*
de°ö©i⁄
, c⁄° *
sour˚
);

6 * 
°∫˝y
(*
de°ö©i⁄
, c⁄° *
sour˚
, 
n
);

7 *
°rchr
(c⁄° *
s
, 
c
);

8 
œ°IndexOf
 (c⁄° * 
ba£
, c⁄° * 
°r
);

9 
°∫cmp
(c⁄° *
s1
, c⁄° *
s2
, 
n
);

10 
ödexOf_shi·
(c⁄° * 
ba£
, c⁄° * 
°r
, 
°¨tIndex
);

11 
°æí
(c⁄° *
°r
);

12 
°¨ts_wôh
(c⁄° * 
ba£
, c⁄° *
¥efix
);

13 *
sub°rög
(* 
de°
 , c⁄° *
s
, 
°¨tIndex
, 
ídIndex
);

	@include/sys/syscall.h

1 #i‚de‡
_SYSCALL_H


2 
	#_SYSCALL_H


	)

4 
	~<defs.h
>

5 
uöt64_t
 
sys_putöt
(
a
);

6 
uöt64_t
 
sys_putch¨
(
a
);

7 
uöt64_t
 
sys_puts
(* 
a
);

8 
uöt64_t
 
sysˇŒs
[32];

	@include/sys/tarfs.h

1 #i‚de‡
_TARFS_H


2 
	#_TARFS_H


	)

3 
	#BLOCKSIZE
 512

	)

4 
	~<sys/èsk_m™agemít.h
>

5 
	~<sys/v_mem_m™agî.h
>

6 
	~<sys/dúít.h
>

8 
_bö¨y_èrfs_°¨t
;

9 
_bö¨y_èrfs_íd
;

10 
fd_u£d
;

11 
size_to_öt
(* 
size
);

12 
	sposix_hódî_u°¨
 {

13 
	m«me
[100];

14 
	mmode
[8];

15 
	muid
[8];

16 
	mgid
[8];

17 
	msize
[12];

18 
	mmtime
[12];

19 
	mchecksum
[8];

20 
	mty≥Êag
[1];

21 
	mlök«me
[100];

22 
	mmagic
[6];

23 
	mvîsi⁄
[2];

24 
	mu«me
[32];

25 
	mg«me
[32];

26 
	mdevmaj‹
[8];

27 
	mdevmö‹
[8];

28 
	m¥efix
[155];

29 
	m∑d
[12];

31 
	sñf_hódî


33 
	me_idít
[16];

34 
	me_ty≥
[2];

35 
	me_machöe
[2];

36 
	me_vîsi⁄
[4];

37 
uöt64_t
 
	me_íåy
;

38 
	me_phoff
[8];

39 
	me_shoff
[8];

40 
	me_Êags
[4];

41 
	me_ehsize
[2];

42 
	me_phítsize
[2];

43 
	me_phnum
[2];

44 
	me_shítsize
[2];

45 
	me_shnum
[2];

46 
	me_sh°∫dx
[2];

49 
	sphódî


51 
	mp_ty≥
[4];

52 
	mp_Êags
[4];

53 
uöt64_t
 
	mp_off£t
;

54 
uöt64_t
 
	mp_vaddr
;

55 
	mp_∑ddr
[8];

56 
uöt64_t
 
	mp_fûesz
;

57 
uöt64_t
 
	mp_memsz
;

58 
	mp_Æign
[8];

61 
	sfûe_des¸ùt‹
{

62 
	mnumbî
;

63 
Fûe
* 
	mÂ
;

64 
uöt64_t
 
	m£ek
;

66 
fûe_des¸ùt‹
 
	tFDT
;

70 
FDT
 
fd_èbÀ
[150];

71 
ªad_èrfs
(
PCB
* 
èsk
, * 
«me
);

72 
VMA
* 
ªad_phódî
(* 
addr
, 
ñf_hódî
* 
ñf_ba£
);

73 
öô_fdèbÀ
();

	@include/sys/task_management.h

1 #i‚de‡
_TASK_MANAGEMENT_H


2 
	#_TASK_MANAGEMENT_H


	)

4 
	~<defs.h
>

5 
	#MAXPID
 32

6 

	)

10 
	svma_t


12 
uöt64_t
 
	m°¨t_add
;

13 
uöt64_t
 
	míd_add
;

14 
vma_t
 *
	m√xt
;

17 
vma_t
 
	tVMA
;

20 
	spcb_t


22 
uöt64_t
 
	mpid
;

23 
uöt64_t
 
	mµid
;

24 
uöt64_t
 
	mödex
;

25 
VMA
 *
	mmm_°
;

26 
uöt64_t
 
	m¸3
;

27 
uöt64_t
 *
	mu_°ack
;

28 
uöt64_t
 
	mr•
;

29 
uöt64_t
 
	mrù
;

30 
uöt64_t
 
	mlﬂd_time
;

31 
	m«me
[64];

32 
uöt64_t
 
	m¶ìp_öô
;

33 
uöt64_t
 
	m¶ìp_tm
;

34 
uöt64_t
 
	mkî√l_°ack
[256];

37 
pcb_t
 
	tPCB
;

39 
	s¥o_±


41 
¥o_±
 *
	m√xt
;

42 
¥o_±
 *
	m¥ev
;

43 
¥o_±
 *
	mèû
;

44 
uöt32_t
 
	mcou¡
;

45 
PCB
 *
	mpcb_li
;

48 
¥o_±
 
	tPLIST
;

50 
PLIST
 *
ÆlPro
;

51 
PLIST
 *
waôQ
;

52 
PLIST
 *
ru«bÀQ
;

54 
PCB
 *
	gru¬ög
;

55 
PCB
 *
	gidÀ
;

56 
PCB
 *
	gswôchTo
;

58 
öô_èsk
();

59 
uöt32_t
 
gë_Newpid
();

60 
uöt32_t
 
gë_pid
();

61 
PCB
 *
¸óã_pcb
();

62 
VMA
 *
¸óã_vma
(
uöt64_t
 
°¨t
, uöt64_à
size
);

64 
uöt32_t
 
gë_pid
();

65 
uöt64_t
 
doF‹k
();

67 
add_toQ
(
PLIST
 *
li°
, 
PCB
 *
pc
);

68 
PCB
 *
gë_√xtPro˚ss
(
PLIST
 *
li°
);

70 
c›yUST
(
uöt64_t
 *
§c
, 
PCB
 *
p
);

71 
c›yOnWrôePageTabÀs
();

72 
uöt64_t
 
£lfRef
(uöt64_à
p4
, uöt64_à
p3
, uöt64_à
p2
, uöt64_à
p1
);

73 
dñëePageTabÀs
();

	@include/sys/task_switch.h

1 #i‚de‡
_TASK_SWITCH


2 
	#_TASK_SWITCH


	)

4 
	~<sys/èsk_m™agemít.h
>

7 
scheduÀ1
();

9 
	sglobRegs


11 
uöt64_t
 
	mr15
;

12 
uöt64_t
 
	mr14
;

13 
uöt64_t
 
	mr13
;

14 
uöt64_t
 
	mr12
;

15 
uöt64_t
 
	mr11
;

16 
uöt64_t
 
	mr10
;

17 
uöt64_t
 
	mr9
;

18 
uöt64_t
 
	mr8
;

20 
uöt64_t
 
	mrbp
;

21 
uöt64_t
 
	mrdi
;

22 
uöt64_t
 
	mrsi
;

23 
uöt64_t
 
	mrdx
;

24 
uöt64_t
 
	mrcx
;

25 
uöt64_t
 
	mrbx
;

26 
uöt64_t
 
	møx
;

27 
uöt64_t
 
	meù
;

28 
uöt64_t
 
	mcs
;

29 
uöt64_t
 
	meÊags
;

30 
uöt64_t
 
	me•
;

31 
uöt64_t
 
	mss
;

34 
globRegs
 
	tGREG
;

	@include/sys/util.h

1 #i‚de‡
_UTIL_H


2 
	#_UTIL_H


	)

4 
	~<defs.h
>

6 
˛ór_buf
(
uöt64_t
 *
±
, uöt64_à
size
);

	@include/sys/v_mem_manager.h

1 #i‚de‡
_V_MEM_MANAGER


2 
	#_V_MEM_MANAGER


	)

4 
	~<sys/èsk_m™agemít.h
>

6 
	#MAX_KERN
 0xFFFFFFFFFFFFFFFF

	)

7 
	#BASE
 0x200000

	)

8 
	#UBASE
 0xFFFFFFFF800F8000

9 
	#UTOP
 0x100000

10 
	#PAGE_SIZE
 4096

	)

12 
uöt64_t
 
	g›‰ì
;

13 
uöt64_t
 
cur_PK
;

14 
uöt64_t
 
cur_VK
;

15 
uöt64_t
 
uSèck_T›
;

17 *
k_mÆloc
(
uöt64_t
 
no
);

18 *
p_mÆloc
(
uöt64_t
 
no
);

21 
uöt32_t
 
m_m≠
(
uöt64_t
 
°¨t
, uöt64_à
sour˚
, uöt64_à
f_size
, uöt64_à
m_size
);

24 
uöt64_t
 
m≠_∑geTabÀ
(
PCB
 *);

27 
uöt64_t
 *
¥o˚ss_°ack
();

30 
˛⁄e
();

32 
öô_VM
(
uöt64_t
 
p‰ì
);

33 
‰ì
(
uöt64_t
);

34 
öô_shñl
();

37 
	s±ab


39 
uöt64_t
 
	mp
[512];

42 
±ab
 
	tPTAB
;

43 
PTAB
 *
p›o
;

44 
uöt64_t
 
±ov_m≠
(uöt64_à
vadd
);

	@include/syscall.h

1 #i‚de‡
_SYSCALL_H


2 
	#_SYSCALL_H


	)

4 
	~<defs.h
>

6 
	#SYSCALL_PROTO
(
n
Ë
__ölöe
 
uöt64_t
 
__sysˇŒ
##
	)
n

7 
	#SYSCALL_PUTINT
 1

	)

8 
	#SYSCALL_PUTS
 2

	)

9 
	#SYSCALL_FORK
 3

	)

10 
	#SYSCALL_MALLOC
 4

	)

11 
	#SYSCALL_READ
 5

	)

12 
	#SYSCALL_SCHD
 6

	)

13 
	#SYSCALL_EXECVE
 7

	)

14 
	#SYSCALL_EXIT
 8

	)

15 
	#SYSCALL_WAITPID
 9

	)

16 
	#SYSCALL_WAIT
 10

	)

17 
	#SYSCALL_READDIR
 11

	)

18 
	#SYSCALL_OPENDIR
 12

	)

19 
	#SYSCALL_CLOSEDIR
 13

	)

20 
	#SYSCALL_STDERR
 14

	)

21 
	#SYSCALL_OPEN
 15

	)

22 
	#SYSCALL_CLOSE
 16

	)

23 
	#SYSCALL_PS
 17

	)

24 
	#SYSCALL_GETPID
 18

	)

27 
	$SYSCALL_PROTO
(0)(
uöt64_t
 
n
)

29 
uöt64_t
 
ªt
;

30 
__asm
 volatile( "movq %1,%%rax\n\t"

33 :"Ù"(
ªt
):"r"(
n
):"rax","memory");

34  
ªt
;

35 
	}
}

37 
	$SYSCALL_PROTO
(1)(
uöt64_t
 
n
, uöt64_à
a1
)

39 
uöt64_t
 
ªt
;

40 
__asm
 volatile( "movq %1,%%rax\n\t"

44 :"Ù"(
ªt
):"r"(
n
),"r"(
a1
):"rax","rbx","memory");

45  
ªt
;

46 
	}
}

48 
	$SYSCALL_PROTO
(2)(
uöt64_t
 
n
, uöt64_à
a1
, uöt64_à
a2
)

50 
uöt64_t
 
ªt
;

51 
__asm
 volatile( "movq %1,%%rax\n\t"

56 :"Ù"(
ªt
):"r"(
n
),"r"(
a1
),"r"(
a2
):"rax","rbx","rcx","memory");

57  
ªt
;

58 
	}
}

60 
	$SYSCALL_PROTO
(3)(
uöt64_t
 
n
, uöt64_à
a1
, uöt64_à
a2
, uöt64_à
a3
)

62 
uöt64_t
 
ªt
;

63 
__asm
 volatile( "movq %1,%%rax\n\t"

69 :"Ù"(
ªt
):"r"(
n
),"r"(
a1
),"r"(
a2
),"r"(
a3
):"rax","rbx","rcx","rdx","memory");

70  
ªt
;

72 
	}
}

74 
	$SYSCALL_PROTO
(4)(
uöt64_t
 
n
, uöt64_à
a1
, uöt64_à
a2
, uöt64_à
a3
, uöt64_à
a4
) {

76 
	}
}

	@ld/ld.c

	@libc/dir.c

1 
	~<libc/dú.h
>

3 
dúít
* 
	$u_ªaddú
(
DIR
* 
dúe˘‹y
)

5 
uöt64_t
 
ªt
;

6 
dúít
* 
dú
 = (dúít*)
	`mÆloc
((dirent));

7 
ªt
 = 
	`__sysˇŒ2
(
SYSCALL_READDIR
,(
uöt64_t
)
dúe˘‹y
,(uöt64_t)
dú
);

8 if(
ªt
 == 0)

9  
NULL
;

10  
dú
;

11 
	}
}

13 
DIR
* 
	$u_›ídú
(* 
°r
)

15 
uöt64_t
 
ªt
;

16 
DIR
* 
dúe˘‹y
 = (DIR *)
	`mÆloc
((DIR));

17 
ªt
 = 
	`__sysˇŒ2
(
SYSCALL_OPENDIR
,(
uöt64_t
)
°r
,(uöt64_t)
dúe˘‹y
);

18 if(
ªt
 == 0)

19  
NULL
;

21  
dúe˘‹y
;

22 
	}
}

24 
uöt64_t
 
	$u_˛o£dú
(
DIR
* 
dúe˘‹y
)

26 
uöt64_t
 
ªt
;

27 
ªt
 = 
	`__sysˇŒ1
(
SYSCALL_CLOSEDIR
,(
uöt64_t
)
dúe˘‹y
);

28 if(
ªt
 == 0)

29  
NULL
;

31  
ªt
;

32 
	}
}

33 
uöt64_t
 
	$›í
(* 
°r
)

35 
uöt64_t
 
ªt
;

36 
ªt
 = 
	`__sysˇŒ1
(
SYSCALL_OPEN
,(
uöt64_t
)
°r
);

38  
ªt
;

39 
	}
}

40 
uöt64_t
 
	$˛o£
(
uöt64_t
 
°r
)

42 
uöt64_t
 
ªt
;

43 
ªt
 = 
	`__sysˇŒ1
(
SYSCALL_CLOSE
,(
uöt64_t
)
°r
);

45  
ªt
;

46 
	}
}

47 
uöt64_t
 
	$ªad
(
uöt64_t
 
fd
,uöt64_à
num
, * 
°r
 )

49 
uöt64_t
 
ªt
;

50 
ªt
 = 
	`__sysˇŒ3
(
SYSCALL_READ
,
fd
,
num
,(
uöt64_t
)
°r
);

52  
ªt
;

53 
	}
}

	@libc/execve.c

6 
	~<sysˇŒ.h
>

9 
	$execve
(*
fûíame
)

13 
	`__sysˇŒ1
(
SYSCALL_EXECVE
, (
uöt64_t
Ë
fûíame
);

17 
	}
}

	@libc/lib.c

1 
	~<°dio.h
>

2 
	~<libc/mÆloc.h
>

3 
	~<sysˇŒ.h
>

5 
	$ps
()

7 
	`__sysˇŒ0
(
SYSCALL_PS
);

8 
	}
}

10 
uöt32_t
 
	$gëpid
()

12 
uöt32_t
 
ªt
 = 0;

13 
ªt
 = 
	`__sysˇŒ0
(
SYSCALL_GETPID
);

14  
ªt
;

15 
	}
}

17 
	$exô
(
°©us
)

19 
	`__sysˇŒ1
(
SYSCALL_EXIT
,(
uöt64_t
Ë
°©us
);

20 
	}
}

	@libc/malloc.c

1 
	~<°dio.h
>

2 
	~<libc/mÆloc.h
>

3 
	~<sys/v_mem_m™agî.h
>

4 
	~<sysˇŒ.h
>

12 *
	g±_mÆ
 = 
NULL
;

14 
uöt64_t
 
	gsize_À·
 = 0;

17 *
	$mÆloc
(
uöt64_t
 
no_byãs
)

19 *
tmp
 = 
NULL
;

20 
uöt32_t
 
div
 = 0;

21 
uöt32_t
 
nu
 = 0, 
föÆ
 = 0;

23 i‡(!
no_byãs
)

26  
NULL
;

29 i‡(
±_mÆ
 && (
no_byãs
 < 
size_À·
))

31 
tmp
 = 
±_mÆ
;

32 
size_À·
 -
no_byãs
;

33 
±_mÆ
 +
no_byãs
;

35  ((*Ë
tmp
);

41 
div
 = (
no_byãs
 / 4096);

42 
nu
 = (
no_byãs
 % 4096);

44 i‡(
div
)

46 
föÆ
 = (
div
 * 4096);

49 i‡(
nu
)

51 
föÆ
 += 4096;

56 i‡((
tmp
 = (*Ë
	`__sysˇŒ1
(
SYSCALL_MALLOC
,
föÆ
)Ë=
NULL
)

58 
	`u_¥ötf
("\n Cantállocalte user space memory");

59  
NULL
;

62 
size_À·
 = (
föÆ
 - 
no_byãs
);

64 
±_mÆ
 = (
tmp
 + 
no_byãs
);

66  ((*Ë
tmp
);

67 
	}
}

73 
uöt64_t
 
	$f‹k
()

75 
uöt64_t
 
ªt
;

76 
ªt
 = 
	`__sysˇŒ0
(
SYSCALL_FORK
);

77  
ªt
;

78 
	}
}

	@libc/printf.c

1 
	~<°d¨g.h
>

2 
	~<°dio.h
>

3 
	~<sysˇŒ.h
>

4 
	~<defs.h
>

5 
	~<libc/mÆloc.h
>

8 
	$u£r_putöt
(
vÆue
, * 
buf„r
, 
tŸÆ
)

10 
±r
[30]={'\0'};

11 
rc
[30]={'\0'};

12 
ödex
 = 0;

13 
√g
 = 0;

14 
j
 = 0;

15 
i
 =0;

16 
vÆs
[10] = "0123456789";

17 i‡–
vÆue
 < 0 )

19 
vÆue
*=-1;

20 
√g
 = 1;

25 
±r
[
ödex
] = 
vÆs
[
vÆue
%10];

26 
vÆue
 /= 10;

27 
ödex
++;

28 }  
vÆue
 );

29 if(
√g
)

30 
±r
[
ödex
]='-';

32 
ödex
--;

33  
ödex
 >= 0 )

35 
rc
[
j
]=
±r
[
ödex
];

36 
j
++;

37 
ödex
--;

39 
i
 = 0 ; i < 
j
 ; i++)

41 
buf„r
[
tŸÆ
+
i
] = 
rc
[i];

44  
i
;

45 
	}
}

47 
	$u£r_l⁄g2hex
(
vÆue
, * 
buf„r
, 
tŸÆ
)

49 
±r
[40]={'a'};

50 
rc
[40]={'a'};

51 
i
 =0;

52 
ödex
 =0, 
j
= 0;

55 
ãmp
 = 
vÆue
 & 0x0f;

56 if(
ãmp
 < 10)

57 
±r
[
ödex
] = 
ãmp
 + '0';

59 
±r
[
ödex
] = (
ãmp
) - 10 + 'A';

60 
vÆue
 = value >> 4;

61 
ödex
++;

63 }  
vÆue
 );

65 
±r
[
ödex
] = 'x';

66 
ödex
++;

67 
±r
[
ödex
] = '0';

68  
ödex
 >= 0 )

70 
rc
[
j
]=
±r
[
ödex
];

71 
j
++;

72 
ödex
--;

74 
i
 = 0 ; i < 
j
 ; i++)

76 
buf„r
[
tŸÆ
+
i
] = 
rc
[i];

79  
i
;

80 
	}
}

82 
	$u£r_pué⁄g
(
vÆue
, * 
buf„r
, 
tŸÆ
)

84 
±r
[30]={'a'};

85 
rc
[30]={'a'};

86 
ödex
 = 0;

87 
√g
 = 0;

88 
j
 = 0, 
i
 = 0;

89 
vÆs
[10] = "0123456789";

90 i‡–
vÆue
 < 0 )

92 
vÆue
*=-1;

93 
√g
 = 1;

98 
±r
[
ödex
] = 
vÆs
[
vÆue
%10];

99 
vÆue
 /= 10;

100 
ödex
++;

101 }  
vÆue
 );

102 if(
√g
)

103 
±r
[
ödex
]='-';

105 
ödex
--;

106  
ödex
 >= 0 )

108 
rc
[
j
]=
±r
[
ödex
];

109 
j
++;

110 
ödex
--;

112 
i
 = 0 ; i < 
j
 ; i++)

114 
buf„r
[
tŸÆ
 + 
i
] = 
rc
[i];

117  
i
;

118 
	}
}

121 
	$u£r_öt2hex
(
vÆue
, * 
buf„r
, 
tŸÆ
)

123 
±r
[32]={'a'} ;

124 
rc
[32]={'a'};

125 
ödex
 =0, 
j
= 0;

126 
i
 =0;

129 
ãmp
 = 
vÆue
 & 0x0f;

130 if(
ãmp
 < 10)

131 
±r
[
ödex
] = 
ãmp
 + '0';

133 
±r
[
ödex
] = (
ãmp
) - 10 + 'A';

134 
vÆue
 = value >> 4;

135 
ödex
++;

137 }  
vÆue
 );

139 
±r
[
ödex
] = 'x';

140 
ödex
++;

141 
±r
[
ödex
] = '0';

142  
ödex
 >= 0 )

144 
rc
[
j
]=
±r
[
ödex
];

145 
j
++;

146 
ödex
--;

148 
i
 = 0 ; i < 
j
 ; i++)

150 
buf„r
[
tŸÆ
+
i
] = 
rc
[i];

154  
i
;

155 
	}
}

157 
	$u£r_puts
(* 
°r
,* 
buf„r
, 
tŸÆ
)

159 
i
=0;

160 
°r
[
i
] != '\0')

162 
buf„r
[
i
+
tŸÆ
]=
°r
[i];

163 
i
++;

166  
i
;

167 
	}
}

168 
	$u£r_putch¨
(
a
, * 
buf„r
 , 
tŸÆ
)

170 
buf„r
[0+
tŸÆ
]=
a
;

172 
	}
}

173 
uöt64_t
 
	$°dî
(c⁄° * 
fmt
, ...)

175 
va_li°
 
∑ømëîs
;

176 
buf„r
[100] = {'\0'};

177 
uöt64_t
 
ªt
 = 0;

178 
tŸÆ
=0;

179 c⁄° * 
°r
 = 
fmt
;

180 
	`va_°¨t
(
∑ømëîs
, 
fmt
);

181 
°r
 = 
fmt
;

182 *
°r
 != '\0')

184 if(*
°r
 != '%')

186 
buf„r
[
tŸÆ
] = *
°r
;

187 
°r
++;

188 
tŸÆ
++;

192 
°r
++;

193  *
°r
 )

195 'c': 
tŸÆ
+=
	`u£r_putch¨
(
	`va_¨g
(
∑ømëîs
, ), 
buf„r
,total);

198 'd': 
tŸÆ
+=
	`u£r_putöt
(
	`va_¨g
(
∑ømëîs
, ),
buf„r
,total);

201 's': 
tŸÆ
+=
	`u£r_puts
(
	`va_¨g
(
∑ømëîs
, *), 
buf„r
,total);

204 'x': 
tŸÆ
+=
	`u£r_öt2hex
(
	`va_¨g
(
∑ømëîs
, ), 
buf„r
,total);

207 'l': if(*(++
°r
)=='d')

209 
tŸÆ
+=
	`u£r_pué⁄g
(
	`va_¨g
(
∑ømëîs
, ), 
buf„r
,total);

213 'p': 
tŸÆ
+=
	`u£r_l⁄g2hex
(
	`va_¨g
(
∑ømëîs
, ), 
buf„r
,total);

216 '%': 
tŸÆ
+=
	`u£r_putch¨
('%', 
buf„r
,total);

219 
°r
++;

221 
	`va_íd
(
∑ømëîs
);

222 
buf„r
[
tŸÆ
] = '\0';

223 
tŸÆ
++;

224 
ªt
=
	`__sysˇŒ3
(
SYSCALL_STDERR
,(
uöt64_t
)
buf„r
,
tŸÆ
,2);

225  
ªt
;

226 
	}
}

228 
uöt64_t
 
	$u_¥ötf
(c⁄° * 
fmt
, ...)

230 
va_li°
 
∑ømëîs
;

231 
buf„r
[100] = {'\0'};

232 
uöt64_t
 
ªt
 = 0;

233 
tŸÆ
=0;

234 c⁄° * 
°r
 = 
fmt
;

235 
	`va_°¨t
(
∑ømëîs
, 
fmt
);

236 
°r
 = 
fmt
;

237 *
°r
 != '\0')

239 if(*
°r
 != '%')

241 
buf„r
[
tŸÆ
] = *
°r
;

242 
°r
++;

243 
tŸÆ
++;

247 
°r
++;

248  *
°r
 )

250 'c': 
tŸÆ
+=
	`u£r_putch¨
(
	`va_¨g
(
∑ømëîs
, ), 
buf„r
,total);

253 'd': 
tŸÆ
+=
	`u£r_putöt
(
	`va_¨g
(
∑ømëîs
, ),
buf„r
,total);

256 's': 
tŸÆ
+=
	`u£r_puts
(
	`va_¨g
(
∑ømëîs
, *), 
buf„r
,total);

259 'x': 
tŸÆ
+=
	`u£r_öt2hex
(
	`va_¨g
(
∑ømëîs
, ), 
buf„r
,total);

262 'l': if(*(++
°r
)=='d')

264 
tŸÆ
+=
	`u£r_pué⁄g
(
	`va_¨g
(
∑ømëîs
, ), 
buf„r
,total);

268 'p': 
tŸÆ
+=
	`u£r_l⁄g2hex
(
	`va_¨g
(
∑ømëîs
, ), 
buf„r
,total);

271 '%': 
tŸÆ
+=
	`u£r_putch¨
('%', 
buf„r
,total);

274 
°r
++;

276 
	`va_íd
(
∑ømëîs
);

277 
buf„r
[
tŸÆ
] = '\0';

278 
tŸÆ
++;

279 
ªt
=
	`__sysˇŒ2
(
SYSCALL_PUTS
,(
uöt64_t
)
buf„r
,
tŸÆ
);

280  
ªt
;

281 
	}
}

	@libc/putint.c

1 
	~<°dio.h
>

4 
uöt64_t
 
	$sys_putöt
(
a
)

6 
__asm__
 vﬁ©ûe("öà$80;"::"a"((
uöt64_t
)
a
), "b" ((uint64_t)1));

8 
	}
}

	@libc/u_scanf.c

1 
	~<°d¨g.h
>

2 
	~<°dio.h
>

3 
	~<sysˇŒ.h
>

4 
	~<defs.h
>

5 
	~<libc/mÆloc.h
>

7 
	gbuf
[128];

9 
	$gë_öt
(* 
±r
 )

11 
i
 = 0;

12 
ªt
 = 0;

13 
buf
[
i
] != '\0')

15 if–
buf
[
i
]<='9' && buf[i] >= '0' )

17 
ªt
 =(
buf
[
i
]-'0')+(ret*10);

18 
i
++;

25 *
±r
=
ªt
;

27 
	}
}

29 
	$gë_hex
(
uöt64_t
* 
±r
 )

31 
i
 = 0;

32 
ªt
 = 0;

33 
buf
[
i
] != '\0')

35 if–
buf
[
i
]<='9' && buf[i] >= '0' )

36 
ªt
 =(
buf
[
i
]-'0')+(ret*16);

39 if–
buf
[
i
]<='F' && buf[i] >= 'A' )

40 
ªt
 =(
buf
[
i
]-'A'+10)+(ret*16);

42 if–
buf
[
i
]<='f' && buf[i] >= 'a' )

43 
ªt
 =(
buf
[
i
]-'a'+10)+(ret*16);

49 
i
++;

51 *
±r
=
ªt
;

53 
	}
}

55 
uöt64_t
 
	$u_sˇnf
(c⁄° * 
f‹m©
, 
uöt64_t
 
±r
)

57 
uöt64_t
 
ªt
 = 0;

61 
ªt
=
	`__sysˇŒ3
(
SYSCALL_READ
,0,(
uöt64_t
)
f‹m©
,(uöt64_t)
buf
);

62 if(
ªt
 != 0)

66 if(
f‹m©
[0] == '%' && format[1]=='d')

67 
ªt
 = 
	`gë_öt
((*)
±r
);

68 if(
f‹m©
[0] == '%' && format[1]=='x')

69 
ªt
 = 
	`gë_hex
((
uöt64_t
*)
±r
);

70 if(
f‹m©
[0] == '%' && format[1]=='s')

72 * 
°r
 = (*)
±r
;

73 
i
=0;

74 
buf
[
i
] != '\0')

76 
°r
[
i
] =
buf
[i];

77 
i
++;

79 
ªt
 = 1;

82  
ªt
;

83 
	}
}

	@libc/yield.c

1 
	~<libc/mÆloc.h
>

2 
	~<°dio.h
>

3 
	~<sysˇŒ.h
>

13 
	$yõld
()

15 
	`u_¥ötf
("\n IN YIELD");

16 
	`__sysˇŒ0
(
SYSCALL_SCHD
);

18 
	}
}

	@sys/dir.c

7 
	~<°dio.h
>

8 
	~<defs.h
>

9 
	~<°dlib.h
>

10 
	~<sys/èrfs.h
>

11 
	~<sys/°rög.h
>

12 
	~<sys/î∫o.h
>

13 
	~<sys/èrfs.h
>

14 
	~<sys/dúít.h
>

15 
	~<sys/pmem_m™agî.h
>

16 
	~<sys/v_mem_m™agî.h
>

17 
	~<sys/kîn_∑ge_èbÀ.h
>

19 
	#BLOCKSIZE
 512

	)

22 *
°rchr
(c⁄° *
s
, 
c
);

23 
°rcmp
(c⁄° *
s1
, c⁄° *
s2
);

24 * 
°r˝y
(*
s1
, c⁄° *
s2
);

25 * 
°∫˝y
(*
s1
, c⁄° *
s2
, 
n
);

26 
gëSize
(*
p
);

27 
öôdú
 (
DIR
 *
p
);

28 c⁄° *
_gëdú«me
 (c⁄° 
dúít
 *
dp
);

29 
_£tdú«me
 (
DIR
 *
dúp
);

30 
födfú°
(* 
dú«me
, 
•ec
 , 
dúít
* 
d©a
 );

31 
DIR
 * 
›ídú
(c⁄° *
dú«me
);

34 
_bö¨y_èrfs_°¨t
;

35 
	gî∫o
;

63 
DIR
 * 
	$›ídú
(c⁄° *
dú«me
)

65 
DIR
 *
dúp
;

66 if(
dú«me
 !
NULL
){

67 
dúp
 = (
DIR
*)
	`k_mÆloc
((DIR));

68 i‡(
dúp
 !
NULL
) {

69 *
p
;

70 
	`°∫˝y
 (
dúp
->
dú«me
, dú«me, 
NAMEMAX
);

71 
p
 = 
	`°rchr
 (
dúp
->
dú«me
, '\0');

72 i‡(
dúp
->
dú«me
 < 
p
 &&

73 *(
p
 - 1) != '\\' && *(p - 1) != '/' && *(p - 1) != ':')

75 
	`°r˝y
 (
p
++, "/");

79 i‡(
	`öôdú
 (
dúp
) == 0) {

82 
î∫o
 = 
ENOENT
;

83  
NULL
;

87  
dúp
;

89 
î∫o
 = 
ENOTDIR
;

90  
NULL
;

91 
	}
}

139 
dúít
 * 
	$ªaddú
 (
DIR
 *
dúp
)

141 i‡(
dúp
 =
NULL
) {

142 
î∫o
 = 
EBADF
;

143  
NULL
;

145 i‡(
dúp
->
dúít_fûÀd
 != 0) {

156 
dúp
->
dúít_fûÀd
 = 0;

157 } i‡(
	`födNext
(&
dúp
->
cuºít
) != 0) {

160  
NULL
;

163  &
dúp
->
cuºít
;

164 
	}
}

186 
	$˛o£dú
 (
DIR
 *
dúp
)

188 
ªtcode
 = 0;

190 i‡(
dúp
 =
NULL
) {

191 
î∫o
 = 
EBADF
;

196  
ªtcode
;

197 
	}
}

221 
	$ªwöddú
 (
DIR
 *
dúp
)

224 i‡(
dúp
 =
NULL
) {

225 
î∫o
 = 
EBADF
;

230 i‡(
	`öôdú
 (
dúp
) == 0) {

235 
	}
}

242 
	$öôdú
 (
DIR
 *
dúp
)

244 
dúp
->
dúít_fûÀd
 = 0;

246 i‡(
	`födfú°
 (
dúp
->
dú«me
, 
_A_SUBDIR
 | 
_A_RDONLY
 | 
_A_ARCH
 | 
_A_SYSTEM
 | 
_A_HIDDEN
, &dúp->
cuºít
) != 0)

253 
dúp
->
dúít_fûÀd
 = 1;

255 
	}
}

261 c⁄° * 
	$_gëdú«me
 (c⁄° 
dúít
 *
dp
)

263  
dp
 -> 
d_«me
;

264 
	}
}

267 
	$di•œyíåy
(
posix_hódî_u°¨
* 
íåy
){

268 
	`¥ötf
("\¬amê- %s, size-%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s",
íåy
 ->
«me
,É¡ry->
size
,É¡ry-> 
mode
 ,É¡ry-> 
uid
,É¡ry-> 
gid
,É¡ry-> 
mtime
,É¡ry-> 
checksum
,É¡ry-> 
ty≥Êag
,É¡ry-> 
lök«me
,É¡ry-> 
magic
,É¡ry-> 
vîsi⁄
,É¡ry-> 
u«me
,É¡ry-> 
g«me
,É¡ry-> 
devmaj‹
,É¡ry-> 
devmö‹
 ,É¡ry-> 
¥efix
 ,É¡ry-> 
∑d
);

269 
	}
}

272 
	$födNext
(
dúít
* 
cuºít
)

274 
posix_hódî_u°¨
* 
íåy
 = (posix_hódî_u°¨*)&
_bö¨y_èrfs_°¨t
 + 
cuºít
->
off£t
;

275 if(
íåy
 !
NULL
){

276 
∑ddög
 =0; 
off£t
 = 
cuºít
 -> offset;

277 
ãmp°r
[
NAMEMAX
], 
dú«me
[NAMEMAX]; 
ödex
;

278 
	`°∫˝y
(
ãmp°r
,
íåy
->
«me
,
	`°æí
(entry->name));

279 if(
	`°rcmp
(
íåy
->
ty≥Êag
,"5") == 0 || strcmp(entry->typeflag,"0") == 0){

280 
	`°∫˝y
(
ãmp°r
,
íåy
->
«me
,
	`°æí
(entry->name)-1);

281 
ãmp°r
[
	`°æí
(
íåy
->
«me
)-1] = 0;

282 
ödex
 = 
	`œ°IndexOf
 (
ãmp°r
, "/");

283 if(
ödex
 =-1 || index =
	`°æí
(
íåy
->
«me
)-1)

284 
dú«me
[0] = '\0';

286 
	`sub°rög
(
dú«me
 ,
íåy
->
«me
 , 0, 
ödex
);

290 
size
 = 
	`size_to_öt
(
íåy
->size);

292 
íåy
 = (
posix_hódî_u°¨
 *)((*Î¡ry + (posix_hódî_u°¨Ë+ 
size
 );

293 
off£t
 +1 + (
size
/
BLOCKSIZE
);

294 if(
size
 > 0){

295 
∑ddög
 = 
BLOCKSIZE
 - 
size
%BLOCKSIZE;

297 if((*)&
_bö¨y_èrfs_íd
 - (*)
íåy
 >
BLOCKSIZE
 && 
∑ddög
 > 0)

299 
íåy
 = (
posix_hódî_u°¨
 *)((*Î¡ry + 
∑ddög
);

300 
off£t
++;

304 if(
	`°¨ts_wôh
–
íåy
-> 
«me
,
dú«me
Ë&& 
	`°rcmp
”¡ry->
ty≥Êag
,"5") == 0)

306 if(
	`ödexOf_shi·
(
íåy
-> 
«me
, "/", 
	`°æí
(
dú«me
)+1) == strlen(entry->name)-1){

308 
cuºít
 -> 
off£t
 = offset;

309 
	`°∫˝y
(
cuºít
 -> 
d_«me
, 
íåy
->
«me
, 
NAMEMAX
-1);

314 if(
	`°¨ts_wôh
–
íåy
-> 
«me
,
dú«me
Ë&& 
	`°rcmp
”¡ry->
ty≥Êag
,"0") == 0 ){

315 if((
	`ödexOf_shi·
(
íåy
-> 
«me
, "/", 
	`°æí
(
dú«me
)+1))==-1){

316 
cuºít
 -> 
off£t
 = offset;

317 
	`°∫˝y
(
cuºít
 -> 
d_«me
, 
íåy
->
«me
, 
NAMEMAX
-1);

322 }(
uöt64_t
)
íåy
 < (uöt64_t)&
_bö¨y_èrfs_íd
);

324 
î∫o
 = 
ENOENT
;

325  
î∫o
;

326 
	}
}

331 
	$födfú°
(* 
dú«me
, 
•ec
 , 
dúít
* 
d©a
 )

333 
posix_hódî_u°¨
 * 
íåy
 = (posix_hódî_u°¨ *)&
_bö¨y_èrfs_°¨t
;

336 if(
íåy
 !
NULL
){

337 
∑ddög
 =0, 
off£t
 = 0;

338  (
uöt64_t
)
íåy
 < (uöt64_t)&
_bö¨y_èrfs_íd
){

339 
size
 = 
	`size_to_öt
(
íåy
->size);

340 if(
	`°¨ts_wôh
(
íåy
-> 
«me
,
dú«me
Ë&& 
	`°rcmp
”¡ry->
ty≥Êag
,"5") == 0)

342 if(
	`ödexOf_shi·
(
íåy
-> 
«me
, "/", 
	`°æí
(
dú«me
)+1) == strlen(entry->name)-1){

344 
	`°∫˝y
(
d©a
 -> 
d_«me
,
íåy
 -> 
«me
,
NAMEMAX
-1);

345 
d©a
 -> 
off£t
 = offset;

346 
	`¥ötf
("found - %s",
d©a
->
d_«me
);

350 if(
	`°¨ts_wôh
–
íåy
-> 
«me
,
dú«me
Ë&& 
	`°rcmp
”¡ry->
ty≥Êag
,"0") == 0 ){

351 
	`¥ötf
("\ngettingÅhe file\n");

352 if((
	`ödexOf_shi·
(
íåy
-> 
«me
, "/", 
	`°æí
(
dú«me
)+1))==-1){

353 
	`°∫˝y
(
d©a
 -> 
d_«me
,
íåy
 -> 
«me
,
NAMEMAX
-1);

354 
d©a
 -> 
off£t
 = offset;

355 
	`¥ötf
("found - %s",
d©a
->
d_«me
);

360 
íåy
 = (
posix_hódî_u°¨
 *)((*Î¡ry + (posix_hódî_u°¨Ë+ 
size
 );

361 
off£t
 +1 + (
size
/
BLOCKSIZE
);

362 if(
size
 > 0){

363 
∑ddög
 = 
BLOCKSIZE
 - 
size
%BLOCKSIZE;

364 
	`¥ötf
("vÆuê- %d &Öaddög - %d",(*)&
_bö¨y_èrfs_íd
 - (*)
íåy
, 
∑ddög
);

365 if((*)&
_bö¨y_èrfs_íd
 - (*)
íåy
 >
BLOCKSIZE
 && 
∑ddög
 > 0)

367 
íåy
 = (
posix_hódî_u°¨
 *)((*Î¡ry + 
∑ddög
);

368 
off£t
 += 1;

370 
	`¥ötf
(" ,addªss:%p",
íåy
);

374 
î∫o
 = 
ENOENT
;

375  
î∫o
;

376 
	}
}

379 
	$li°
()

381 
posix_hódî_u°¨
 * 
íåy
 = (posix_hódî_u°¨*)(&
_bö¨y_èrfs_°¨t
);

383 
	`¥ötf
("èrf†ö [2q%p:%p]\n", &
_bö¨y_èrfs_°¨t
, &
_bö¨y_èrfs_íd
);

384 
∑ddög
 =0;

387 (
uöt64_t
)
íåy
 < (uöt64_t)&
_bö¨y_èrfs_íd
)

389 
size
 =
	`size_to_öt
(
íåy
->size);

393 if(
	`°rcmp
(
íåy
->
ty≥Êag
,"5") == 0){

395 
	`¥ötf
(" \¿Dúe˘‹y -- %s, size-%s,Åy≥ %†",
íåy
 ->
«me
,É¡ry->
size
,É¡ry-> 
ty≥Êag
);

397 }if(
	`°rcmp
(
íåy
->
ty≥Êag
,"0")==0){

399 
	`¥ötf
(" \¿fûê-- %s, size-%s,Åy≥ %†",
íåy
 ->
«me
,É¡ry->
size
,É¡ry-> 
ty≥Êag
);

400 }if(
íåy
->
ty≥Êag
 =
NULL
){

401 
	`¥ötf
("ÅypeflagÇull");

403 
	`¥ötf
("É¡ryáddªs†: %∞,íåy->ty≥Êag %s,Çamê%s",
íåy
,íåy->
ty≥Êag
,íåy->
«me
);

406 
íåy
 = (
posix_hódî_u°¨
 *)((*Î¡ry + (posix_hódî_u°¨Ë+ 
size
 );

407 if(
size
 > 0){

408 
∑ddög
 = 
BLOCKSIZE
 - 
size
%BLOCKSIZE;

410 if((*)&
_bö¨y_èrfs_íd
 - (*)
íåy
 >=
BLOCKSIZE
)

412 
íåy
 = (
posix_hódî_u°¨
 *)((*Î¡ry + 
∑ddög
);

420 
	}
}

	@sys/execve.c

1 
	~<sys/utû.h
>

2 
	~<sys/execve.h
>

3 
	~<°dio.h
>

4 
	~<sys/gdt.h
>

5 
	~<sys/èsk_m™agemít.h
>

6 
	~<sys/èrfs.h
>

7 
	~<sys/°rög.h
>

9 
_£t_k_±abÀ_¸3
(
uöt64_t
);

15 
	$do_execve
(*
‚
)

17 
PCB
 *
¥o
;

18 
¥o
 = 
ru¬ög
;

19 *
fûíame
;

21 
fûíame
 = (*)(
	`k_mÆloc
((()*32)));

22 
	`°r˝y
(
fûíame
, 
‚
);

25 
	`dñëePageTabÀs
();

26 
	`_£t_k_±abÀ_¸3
(
¥o
->
¸3
);

28 
	`ªad_èrfs
(
¥o
, 
fûíame
);

29 i‡((
¥o
->
u_°ack
 = 
	`¥o˚ss_°ack
()Ë=
NULL
)

36 
¥o
->
r•
 = (
uöt64_t
)’ro->
u_°ack
);

38 
tss
.
r•0
 = (
uöt64_t
Ë&(
¥o
->
kî√l_°ack
[255]);

40 
__asm
 vﬁ©ûe("\
 $0x23;\
 %0;\
 $0x200;\
 $0x1B;\
 %1"::"g"(
¥o
->
u_°ack
),"g"’ro->
rù
):"memory");

46 
__asm
 volatile("\
;\
");

50 
	}
}

	@sys/gdt.c

1 
	~<sys/gdt.h
>

5 
	#MAX_GDT
 32

	)

7 
	ssys_£gmít_des¸ùt‹
 {

8 
uöt64_t
 
	msd_lﬁimô
:16;

9 
uöt64_t
 
	msd_loba£
:24;

10 
uöt64_t
 
	msd_ty≥
:5;

11 
uöt64_t
 
	msd_d∂
:2;

12 
uöt64_t
 
	msd_p
:1;

13 
uöt64_t
 
	msd_hûimô
:4;

14 
uöt64_t
 
	msd_xx1
:3;

15 
uöt64_t
 
	msd_gøn
:1;

16 
uöt64_t
 
	msd_hiba£
:40;

17 
uöt64_t
 
	msd_xx2
:8;

18 
uöt64_t
 
	msd_zîo
:5;

19 
uöt64_t
 
	msd_xx3
:19;

20 }
__©åibuã__
((
∑cked
));

22 
uöt64_t
 
	ggdt
[
MAX_GDT
] = {

24 
GDT_CS
 | 
P
 | 
DPL0
 | 
L
,

25 
GDT_DS
 | 
P
 | 
W
 | 
DPL0
,

26 
GDT_CS
 | 
P
 | 
DPL3
 | 
L
,

27 
GDT_DS
 | 
P
 | 
W
 | 
DPL3
,

31 
	sgdå_t
 {

32 
uöt16_t
 
	msize
;

33 
uöt64_t
 
	maddr
;

34 }
__©åibuã__
((
∑cked
));

36 
gdå_t
 
	ggdå
 = {

37 (
gdt
),

38 (
uöt64_t
)
gdt
,

41 
_x86_64_asm_lgdt
(
gdå_t
* 
gdå
, 
uöt64_t
 
cs_idx
, uöt64_à
ds_idx
);

43 
	$ªlﬂd_gdt
() {

44 
	`_x86_64_asm_lgdt
(&
gdå
, 8, 16);

45 
	}
}

47 
	$£tup_tss
() {

48 
sys_£gmít_des¸ùt‹
* 
sd
 = (sys_£gmít_des¸ùt‹*)&
gdt
[5];

49 
sd
->
sd_lﬁimô
 = (
tss_t
)-1;

50 
sd
->
sd_loba£
 = ((
uöt64_t
)&
tss
);

51 
sd
->
sd_ty≥
 = 9;

52 
sd
->
sd_d∂
 = 0;

53 
sd
->
sd_p
 = 1;

54 
sd
->
sd_hûimô
 = 0;

55 
sd
->
sd_gøn
 = 0;

56 
sd
->
sd_hiba£
 = ((
uöt64_t
)&
tss
) >> 24;

57 
	}
}

	@sys/idt.c

1 
	~<sys/idt.h
>

2 
	~<sys/úq.h
>

4 
	#MAX_IDT
 (256u)

	)

6 
	sidt_íåy


8 
uöt16_t
 
	moff£t1
;

9 
uöt16_t
 
	mèrgë_£À˘‹
;

10 
uöt16_t
 
	mÊags
;

11 
uöt16_t
 
	moff£t2
;

12 
uöt32_t
 
	moff£t3
;

13 
uöt32_t
 
	mª£rved
;

14 }
__©åibuã__
((
∑cked
));

16 
idt_íåy
 
	$gë_íåy
(
uöt64_t
 
èrgë
)

18 
idt_íåy
 
ªt
;

19 
ªt
.
off£t1
 = (
èrgë
 & 0xfffful);

20 
ªt
.
Êags
 = (
IDT_IST
 | 
IDT_RESERVED
 | 
IDT_TYPE


21 | 
IDT_ZERO
 | 
IDT_DPL0
| 
IDT_P
);

22 
ªt
.
èrgë_£À˘‹
 = 8;

23 
ªt
.
ª£rved
 = 0;

24 
ªt
.
off£t2
 = (((
èrgë
) >> 16) & 0xfffful);

25 
ªt
.
off£t3
 = (((
èrgë
) >> 32) & 0xfffffffful);

26  
ªt
;

27 
	}
}

29 
idt_íåy
 
	$gë_u£r_íåy
(
uöt64_t
 
èrgë
)

31 
idt_íåy
 
ªt
;

33 
ªt
.
off£t1
 = (
èrgë
 & 0xfffful);

34 
ªt
.
Êags
 = (
IDT_IST
 | 
IDT_RESERVED
 | 
IDT_TYPE


35 | 
IDT_ZERO
 | 
IDT_DPL3
| 
IDT_P
);

36 
ªt
.
èrgë_£À˘‹
 = 8;

37 
ªt
.
ª£rved
 = 0;

38 
ªt
.
off£t2
 = (((
èrgë
) >> 16) & 0xfffful);

39 
ªt
.
off£t3
 = (((
èrgë
) >> 32) & 0xfffffffful);

40  
ªt
;

41 
	}
}

43 
idt_íåy
 
	gidt
[
MAX_IDT
];

45 
	sidå_t


47 
uöt16_t
 
	msize
;

48 
uöt64_t
 
	maddr
;

49 }
__©åibuã__
((
∑cked
));

51 
idå_t
 
	gidå
 =

53 (
idt
),

54 (
uöt64_t
)
idt


57 
_i§_000
();

58 
_i§_013
();

59 
_i§_014
();

60 
_úq_032
();

61 
_úq_033
();

62 
_i§_080
();

64 
_x86_64_asm_lidt
(
idå_t
* 
idå
);

66 
	$ªlﬂd_idt
() {

68 
	`öô_pic
();

69 
	`öô_timî
();

70 
idt
[0] = 
	`gë_íåy
((
uöt64_t
)&
_i§_000
);

71 
idt
[13] = 
	`gë_íåy
((
uöt64_t
)&
_i§_013
);

72 
idt
[14] = 
	`gë_íåy
((
uöt64_t
)&
_i§_014
);

73 
idt
[32] = 
	`gë_íåy
((
uöt64_t
)&
_úq_032
);

74 
idt
[33] = 
	`gë_íåy
((
uöt64_t
)&
_úq_033
);

75 
idt
[80] = 
	`gë_u£r_íåy
((
uöt64_t
)&
_i§_080
);

76 
	`_x86_64_asm_lidt
(&
idå
);

77 
	}
}

	@sys/irq.c

1 
	~<°dio.h
>

2 
	~<comm⁄.h
>

4 
	~<sys/idt.h
>

5 
	~<sys/i§.h
>

6 
	~<sys/úq.h
>

7 
	~<sys/èsk_swôch.h
>

9 
_£t_k_±abÀ_¸3
(
uöt64_t
);

10 
	g£c⁄d
;

11 
	gmöuã
;

12 
	ghour
;

13 
	gday
;

14 
	gm⁄th
;

15 
	gyór
;

16 vﬁ©ûê
	gkbuf
[128] = {0};

17 vﬁ©ûê
	gkbuf_ödex
=-1;

18 vﬁ©ûê
	g√wlöe
 = 0;

20 
uöt64_t
 
	gtick
 = 0;

21 vﬁ©ûê
uöt64_t
 
	g£c
 = 0;

22 
ªad_πc
();

25 
	mcmos_addªss
 = 0x70,

26 
	mcmos_d©a
 = 0x71

30 
	$gë_upd©e_ö_¥ogªss_Êag
() {

31 
	`outb
(
cmos_addªss
, 0x0A);

32  (
	`öb
(
cmos_d©a
) & 0x80);

33 
	}
}

36 
	$gë_RTC_ªgi°î
(
ªg
) {

37 
	`outb
(
cmos_addªss
, 
ªg
);

38  
	`öb
(
cmos_d©a
);

39 
	}
}

41 
	gkeybﬂrd_m≠
[128] =

84 
	gkeybﬂrd_m≠_shi·
[128] =

129 
	$PIC_£ndEOI
(
úq
)

131 if(
úq
 >= 8)

133 
	`outb
(
PIC2
,
PIC_EOI
);

135 
	`outb
(
PIC1
,
PIC_EOI
);

136 
	}
}

140 
	$öô_pic
()

142 
	`¥ötf
("PIC INIT \n");

143 
	`outb
(0x20, 0x11);

144 
	`outb
(0xA0, 0x11);

145 
	`outb
(0x21, 0x20);

146 
	`outb
(0xA1, 0x28);

147 
	`outb
(0x21, 0x04);

148 
	`outb
(0xA1, 0x02);

149 
	`outb
(0x21, 0x01);

150 
	`outb
(0xA1, 0x01);

151 
	`outb
(0x21, 0x0);

152 
	`outb
(0xA1, 0x0);

153 
	}
}

155 
	$öô_timî
()

157 
uöt16_t
 
div
;

158 
low
, 
high
;

161 
div
 = 59659;

163 
	`outb
(0x43, 0x36);

164 
low
 = ()(
div
 & 0xFF);

165 
high
 = ()–(
div
>>8) & 0xFF );

167 
	`outb
(0x40, 
low
);

168 
	`outb
(0x40, 
high
);

169 
	}
}

173 vﬁ©ûê
uöt32_t
 
	gschd_ON
 ;

175 
	$úq_h™dÀr_0
(
GREG
 
ªgs
)

178 
tick
++;

180 i‡(
tick
 % 20 == 0)

182 
	`ªad_πc
();

183 
£c
++;

184 if(
tick
% 200 == 0)

186 
schd_ON
 = 1;

189 
	`outb
(0x20, 0x20);

191 if(
schd_ON
 && 
ru¬ög
 !
NULL
)

193 
schd_ON
 = 0;

195 
	`scheduÀ1
();

197 
	}
}

203 
	gshi·_ON
 = 0;

205 
	$úq_h™dÀr_1
(
ªgi°îs_t
 
ªgs
)

207 
sˇncode
;

208 
°©us
;

210 
°©us
 = 
	`öb
(0x64);

211 
sˇncode
 = 
°©us
;

214 
sˇncode
 = 
	`öb
(0x60);

216 i‡(
sˇncode
 & 0x80)

218 if(
sˇncode
 == 0x2A)

220 
shi·_ON
 = 0;

225 if(
sˇncode
 == 0x2A)

227 
shi·_ON
 = 1;

232 if(
shi·_ON
)

235 
	`putch
(
keybﬂrd_m≠_shi·
[
sˇncode
]);

237 
kbuf_ödex
++;

238 
kbuf
[
kbuf_ödex
] = 
keybﬂrd_m≠_shi·
[
sˇncode
];

239 
kbuf_ödex
 = kbuf_index%128;

240 if(
kbuf
[
kbuf_ödex
] == '\n')

242 
√wlöe
 = 1;

244 
shi·_ON
 = 0;

248 
	`putch
(
keybﬂrd_m≠
[
sˇncode
]);

249 
kbuf_ödex
++;

250 
kbuf
[
kbuf_ödex
] = 
keybﬂrd_m≠
[
sˇncode
];

251 
kbuf_ödex
 = kbuf_index%128;

252 if(
kbuf
[
kbuf_ödex
] == '\n')

253 
√wlöe
 = 1;

257 
	`outb
(0xA0, 0x20);

258 
	`outb
(0x20, 0x20);

259 
	}
}

264 
	$ªad_πc
() {

265 
œ°_£c⁄d
;

266 
œ°_möuã
;

267 
œ°_hour
;

268 
œ°_day
;

269 
œ°_m⁄th
;

270 
œ°_yór
;

271 
ªgi°îB
;

276 
	`gë_upd©e_ö_¥ogªss_Êag
());

277 
£c⁄d
 = 
	`gë_RTC_ªgi°î
(0x00);

278 
möuã
 = 
	`gë_RTC_ªgi°î
(0x02);

279 
hour
 = 
	`gë_RTC_ªgi°î
(0x04);

280 
day
 = 
	`gë_RTC_ªgi°î
(0x07);

281 
m⁄th
 = 
	`gë_RTC_ªgi°î
(0x08);

282 
yór
 = 
	`gë_RTC_ªgi°î
(0x09);

285 
œ°_£c⁄d
 = 
£c⁄d
;

286 
œ°_möuã
 = 
möuã
;

287 
œ°_hour
 = 
hour
;

288 
œ°_day
 = 
day
;

289 
œ°_m⁄th
 = 
m⁄th
;

290 
œ°_yór
 = 
yór
;

292 
	`gë_upd©e_ö_¥ogªss_Êag
());

293 
£c⁄d
 = 
	`gë_RTC_ªgi°î
(0x00);

294 
möuã
 = 
	`gë_RTC_ªgi°î
(0x02);

295 
hour
 = 
	`gë_RTC_ªgi°î
(0x04);

296 
day
 = 
	`gë_RTC_ªgi°î
(0x07);

297 
m⁄th
 = 
	`gë_RTC_ªgi°î
(0x08);

298 
yór
 = 
	`gë_RTC_ªgi°î
(0x09);

300  (
œ°_£c⁄d
 !
£c⁄d
Ë|| (
œ°_möuã
 !
möuã
Ë|| (
œ°_hour
 !
hour
) ||

301 (
œ°_day
 !
day
Ë|| (
œ°_m⁄th
 !
m⁄th
Ë|| (
œ°_yór
 !
yór
) );

303 
ªgi°îB
 = 
	`gë_RTC_ªgi°î
(0x0B);

307 i‡(!(
ªgi°îB
 & 0x04)) {

308 
£c⁄d
 = (second & 0x0F) + ((second / 16) * 10);

309 
möuã
 = (minute & 0x0F) + ((minute / 16) * 10);

310 
hour
 = ( (hour & 0x0F) + (((hour & 0x70) / 16) * 10) ) | (hour & 0x80);

311 
day
 = (day & 0x0F) + ((day / 16) * 10);

312 
m⁄th
 = (month & 0x0F) + ((month / 16) * 10);

313 
yór
 = (year & 0x0F) + ((year / 16) * 10);

316 
	`¥öâime
(
hour
,
möuã
,
£c⁄d
);

317 
	}
}

318 
	$¥öâime
(
hour
, 
möuã
, 
£c⁄ds
)

320 
cﬁ‹
 = 0x07;

321 vﬁ©ûê*
doô
 = (vﬁ©ûê*)(
video
 + 0x00F90);

323 if(
hour
 >= 4)

324 
hour
 = (hour)-4;

326 
hour
 = hour + 20;

328 
a
 = (
hour
/10) + '0';

329 *(
doô
++Ë
a
;

330 *
doô
++ = 
cﬁ‹
;

331 
a
 = (
hour
%10)+'0';

332 *(
doô
++Ë
a
;

333 *
doô
++ = 
cﬁ‹
;

335 
a
 = ':';

336 *(
doô
++Ë
a
;

337 *
doô
++ = 
cﬁ‹
;

339 
a
 = (
möuã
/10)+'0';

340 *(
doô
++Ë
a
;

341 *
doô
++ = 
cﬁ‹
;

342 
a
 = (
möuã
%10)+'0';

343 *(
doô
++Ë
a
;

344 *
doô
++ = 
cﬁ‹
;

346 
a
 = ':';

347 *(
doô
++Ë
a
;

348 *
doô
++ = 
cﬁ‹
;

350 
a
 = (
£c⁄ds
/10)+'0';

351 *(
doô
++Ë
a
;

352 *
doô
++ = 
cﬁ‹
;

353 
a
 = (
£c⁄ds
%10)+'0';

354 *(
doô
++Ë
a
;

355 *
doô
++ = 
cﬁ‹
;

356 
	}
}

	@sys/isr.c

1 
	~<sys/idt.h
>

2 
	~<sys/i§.h
>

3 
	~<°dio.h
>

4 
	~<sys/kîn_∑ge_èbÀ.h
>

5 
	~<sys/èsk_m™agemít.h
>

6 
	~<sys/v_mem_m™agî.h
>

7 
	~<sys/execve.h
>

8 
	~<sys/èsk_swôch.h
>

9 
	~<sys/dúít.h
>

10 
	~<sys/°rög.h
>

11 
	~<sys/execve.h
>

12 
	~<sys/¥o˚ss_que.h
>

15 
	#COW
 0x0008000000000000

16 
	`_£t_k_±abÀ_¸3
(
uöt64_t
);

	)

18 
	$i§_h™dÀr_0
(
ªgi°îs_t
 
ªgs
)

20 
	`¥ötf
("\nDivide by zero FAULT");

21 
	`¥ötf
("I¡îru± Numbî = %d %d\n", 0x0, 
ªgs
.
îr_code
);

23 
	}
}

25 
	$i§_h™dÀr_13
(
ªgi°îs_t
 
ªgs
)

27 
	`¥ötf
("Exception: General Protection Fault\n");

28 
uöt64_t
 
¸2
;

29 
__asm
 volatile(

31 :"=g"(
¸2
)

37 
	}
}

39 
	$i§_h™dÀr_14
(
ªgi°îs_t
 
ªgs
)

41 
ª
 = 0;

43 
uöt64_t
 
¸2
, 
ccow
 = 0, 
µíåy
 = 0;

44 
__asm
 volatile(

46 :"=g"(
¸2
)

52 i‡(0 =
¸2
)

54 
	`¥ötf
("\¿SEG FAULT :TryögÅÿac˚s†addªs†0x0:%d", 
¸2
);

57 
ª
 = (
ªgs
.
îr_code
 & 7);

58 i‡(
ª
 == 7)

60 
µíåy
 = ((
uöt64_t
Ë
	`±ov_m≠
((uöt64_t)
¸2
));

61 i‡(0 =
µíåy
)

63 
	`¥ötf
("\n VA DO NOT EXIST");

65 
ccow
 = ((((
uöt64_t
)
µíåy
Ë& 
COW
) >> 51);

66 
	`¥ötf
("\¿ccow:%d:µíåy%x",
ccow
, 
µíåy
);

67 i‡(
ccow
)

69 
	`c›yOnWrôePageTabÀs
();

70 
	`_£t_k_±abÀ_¸3
(
ru¬ög
->
¸3
);

73 i‡((0 =
ª
) || (2 ==Ñe) || (4 ==Ñe) || (6 ==Ñe))

75 
	`£lf_ª‰í˚
(
¸2
);

79 
	}
}

83 
uöt64_t
 
	$i§_h™dÀr_80
(
GREG
 *
ªgs
)

85 
uöt64_t
 
ªt
 = 0, 
°r
 = 0, 
fd
 = 0, 
num
 = 0,
exô_°©us
;

86 
uöt64_t
 
num_byãs
 = 0, 
fûíame
 = 0, 
id
 = 0;

87 
uöt64_t
 
f
 = -1;

88 
n
 = 
ªgs
->
øx
,
v¨
;

89 
DIR
 *
dúe˘‹y_°ru˘
;

90 
DIR
 *
dúe˘‹y_öô
;

91 
dúít
 *
dú
;

92 
dúít
 *
dú_öô
;

93 
uöt64_t
 
addr
;

95 
n
){

97 
v¨
 =()
ªgs
->
rbx
;

98 
	`¥ötf
("%d",
v¨
);

101 
addr
 = 
ªgs
->
rbx
;

102 
num
 = 
ªgs
->
rcx
;

103 
ªt
 = 
	`wrôe
(1,(*)
addr
,
num
);

104 
ªgs
->
øx
 = 
ªt
;

107 
f
 = 
	`doF‹k
();

108 
ªgs
->
øx
 = 
f
;

111 
num_byãs
 = 
ªgs
->
rbx
;

112 
addr
 =(
uöt64_t
)
	`p_mÆloc
(
num_byãs
);

113 
ªgs
->
øx
 = 
addr
;

116 
addr
 = 
ªgs
->
rdx
;

117 
°r
 = 
ªgs
->
rcx
;

118 
fd
 = 
ªgs
->
rbx
;

119 if(
fd
 ==0)

121 
ªt
 =(
uöt64_t
)
	`sˇnf
((*)
°r
,
addr
);

125 
ªt
 =(
uöt64_t
)
	`ªad_fûe
(
fd
,
°r
,(*)
addr
);

127 
ªgs
->
øx
 = 
ªt
;

130 
	`scheduÀ1
();

133 
fûíame
 = 
ªgs
->
rbx
;

134 
	`do_execve
((*)
fûíame
);

140 
exô_°©us
 = 
ªgs
->
rbx
;

141 
	`do_exô
(
exô_°©us
);

144 
id
 = 
ªgs
->
rbx
;

145 
ªt
 = 
	`do_waôpid
(
id
);

146 
ªgs
->
øx
 = 
ªt
;

149 
ªt
 = 
	`do_waô
();

150 
ªgs
->
øx
 = 
ªt
;

153 
dúe˘‹y_öô
 =(
DIR
*)
ªgs
->
rbx
;

154 
dú
 =(
dúít
*Ë
ªgs
->
rcx
;

155 
dú_öô
 = (
dúít
*)
	`k_mÆloc
((dirent));

156 
dú_öô
 = 
	`ªaddú
((
DIR
*)
dúe˘‹y_öô
);

158 if(
dú_öô
!=
NULL
)

160 
ªgs
->
øx
 = 1;

161 
	`°r˝y
(
dú
->
d_«me
,
dú_öô
->d_name);

162 
dú
->
off£t
 = 
dú_öô
->offset;

166 
ªgs
->
øx
 = 0;

169 if(
dú
!=
NULL
)

171 
ªgs
->
øx
 = (
uöt64_t
)
dú
;

175 
ªgs
->
øx
 = 0;

179 
°r
 = 
ªgs
->
rbx
;

180 
dúe˘‹y_öô
 = (
DIR
*)
ªgs
->
rcx
;

181 
dúe˘‹y_°ru˘
 = 
	`›ídú
((*)
°r
);

182 if(
dúe˘‹y_°ru˘
!=
NULL
)

184 
ªgs
->
øx
 = 1;

185 
	`°r˝y
(
dúe˘‹y_öô
->
dú«me
,
dúe˘‹y_°ru˘
->dirname);

186 
dúe˘‹y_öô
->
cuºít
 = 
dúe˘‹y_°ru˘
->current;

187 
dúe˘‹y_öô
->
dúít_fûÀd
 = 
dúe˘‹y_°ru˘
->dirent_filled;

192 
ªgs
->
øx
 = 0;

197 
dúe˘‹y_öô
 = (
DIR
*)
ªgs
->
rbx
;

198 
ªt
 = 
	`˛o£dú
(
dúe˘‹y_öô
);

199 
ªgs
->
øx
 = 
ªt
;

203 
addr
 = 
ªgs
->
rbx
;

204 
num
 = 
ªgs
->
rcx
;

205 
fd
=2;

206 
ªt
 = 
	`wrôe
(
fd
,(*)
addr
,
num
);

207 
ªgs
->
øx
 = 
ªt
;

210 
°r
 = 
ªgs
->
rbx
;

211 
ªt
 = 
	`›í_fûe
((*)
°r
);

212 
ªgs
->
øx
 = 
ªt
;

215 
fd
 = 
ªgs
->
rbx
;

216 
ªt
 = 
	`˛o£_fûe
(
fd
);

217 
ªgs
->
øx
 = 
ªt
;

220 
	`do_Ps
();

223 
ªt
 = 
	`gë_pid
();

224 
ªgs
->
øx
 = 
ªt
;

228  
ªt
;

230 
	}
}

	@sys/kern_page_table.c

6 
	~<°dio.h
>

7 
	~<defs.h
>

9 
	~<sys/pmem_m™agî.h
>

11 
_£t_k_±abÀ_¸3
(
uöt64_t
);

14 
	$kîn_±
(*
v_kîn
, 
uöt64_t
 
pba£
, uöt64_à
p‰ì
)

18 
uöt64_t
* 
p1
;

19 
uöt64_t
* 
p2
;

20 
uöt64_t
* 
p3
;

21 
uöt64_t
* 
p4
;

23 
p1_va
, 
p2_va
, 
p3_va
, 
p4_va
, 
j
;

24 
uöt64_t
 
vadd
 = (uöt64_t)
v_kîn
;

25 
uöt64_t
 
kva
 = (uöt64_t)
v_kîn
;

27 
p1
 = (
uöt64_t
*)
	`gë_∑ge
();

28 
p2
 = (
uöt64_t
*)
	`gë_∑ge
();

29 
p3
 = (
uöt64_t
*)
	`gë_∑ge
();

30 
p4
 = (
uöt64_t
*)
	`gë_∑ge
();

32 
p1_va
 = (
vadd
 << 16) >> (9 + 9 + 9 + 12 + 16);

33 
p2_va
 = (
vadd
 << (16 +9)) >> (9 + 9 + 12 + 16 + 9);

34 
p3_va
 = (
vadd
 << (16 + 9 + 9)) >> (9 + 12 + 16 + 9 + 9);

35 
p4_va
 = (
vadd
 << (16 + 9 + 9 + 9)) >> (12 + 16 + 9 + 9 + 9);

38 (*(
p1
 + 
p1_va
)Ë((((
uöt64_t
)
p2
)) | 7);

39 (*(
p2
 + 
p2_va
)Ë((((
uöt64_t
)
p3
) ) | 7);

40 (*(
p3
 + 
p3_va
)Ë((((
uöt64_t
)
p4
) ) | 7);

43 (*(
p1
+510)Ë((
uöt64_t
)p1 | 7);

50 
j
 = 0;

51 
kva
 = 
pba£
; kv®<((
uöt64_t
)
p‰ì
); kva += 4096)

54 (*(
p4
 + 
p4_va
 + 
j
)Ë(((
uöt64_t
)
kva
 & 0xFFFFFFFFFF000) | 3);

55 
j
++;

58 (*(
p4
 + 
p4_va
 + 
j
)Ë(((
uöt64_t
)0xB8000 & 0xFFFFFFFFFF000) | 3);

61 (
video
Ë(0xffffffff80000000 | 
kva
);

65 
vm_ˇ°
 = 0xffffffff80000000;

67 
	`_£t_k_±abÀ_¸3
((
uöt64_t
)
p1
);

69 
	`¥ötf
("\nKî√»Pagög d⁄e: video:%x", 
video
);

70 
	}
}

72 
uöt64_t
 
	$c⁄°ru˘_addªss
(
uöt64_t
 
add1
, 
b1
, 
b2
, 
b3
)

74 
add1
 = (((◊dd1 >> 
b1
Ë<< 9Ë| 
b2
Ë<< 
b3
);

75  
add1
;

76 
	}
}

78 
	$£lf_ª‰í˚
(
uöt64_t
 
v_a
)

82 
p1_va
, 
p2_va
, 
p3_va
, 
p4_va
;

83 
uöt64_t
 
add
 = 0xFFFF000000000000;

85 
uöt64_t
* 
p1
 = 
NULL
;

86 
uöt64_t
* 
p2
 = 
NULL
;

87 
uöt64_t
* 
p3
 = 
NULL
;

88 
uöt64_t
* 
p4
 = 
NULL
;

89 
uöt64_t
* 
p5
 = 
NULL
;

90 
uöt64_t
 
v_ad
;

92 
v_ad
 = 
v_a
;

93 
p1_va
 = (
v_ad
 << 16) >> (9 + 9 + 9 + 12 + 16);

94 
p2_va
 = (
v_ad
 << (16 +9)) >> (9 + 9 + 12 + 16 + 9);

95 
p3_va
 = (
v_ad
 << (16 + 9 + 9)) >> (9 + 12 + 16 + 9 + 9);

96 
p4_va
 = (
v_ad
 << (16 + 9 + 9 + 9)) >> (12 + 16 + 9 + 9 + 9);

101 
add
 = (((add >> 48) << 9 | 0x1FE) << 39);

102 
add
 = (((add >> 39) << 9 | 0x1FE) << 30);

103 
add
 = (((add >> 30) << 9 | 0x1FE) << 21);

104 
add
 = (((add >> 21) << 9 | 0x1FE) << 12);

105 
p1
 = (
uöt64_t
*)
add
;

106 
p2
 = (
uöt64_t
*)
p1
[
p1_va
];

108 i‡(!
p2
)

110 
p2
 = (
uöt64_t
 *Ë
	`gë_∑ge
();

111 
p1
[
p1_va
] = ((((
uöt64_t
)
p2
) & 0xFFFFFFFFFF000) | 7);

114 
add
 = 0xFFFF000000000000;

115 
add
 = (((add >> 48) << 9 | 0x1FE) << 39);

116 
add
 = (((add >> 39) << 9 | 0x1FE) << 30);

117 
add
 = (((add >> 30) << 9 | 0x1FE) << 21);

118 
add
 = ((◊dd >> 21Ë<< 9 | 
p1_va
) << 12);

119 
p2
 = (
uöt64_t
*)
add
;

120 
p3
 = (
uöt64_t
*)
p2
[
p2_va
];

122 if(!
p3
)

124 
p3
 = (
uöt64_t
 *Ë
	`gë_∑ge
();

125 
p2
[
p2_va
] = ((((
uöt64_t
Ë
p3
) & 0xFFFFFFFFFF000) | 7);

128 
add
 = 0xFFFF000000000000;

129 
add
 = (((add >> 48) << 9 | 0x1FE) << 39);

130 
add
 = (((add >> 39) << 9 | 0x1FE) << 30);

131 
add
 = ((◊dd >> 30Ë<< 9 | 
p1_va
) << 21);

132 
add
 = ((◊dd >> 21Ë<< 9 | 
p2_va
) << 12);

133 
p3
 = (
uöt64_t
*)
add
;

134 
p4
 = (
uöt64_t
*)
p3
[
p3_va
];

136 if(!
p4
)

138 
p4
 = (
uöt64_t
 *Ë
	`gë_∑ge
();

139 
p3
[
p3_va
] = ((((
uöt64_t
Ë
p4
) & 0xFFFFFFFFFF000) | 7);

142 
add
 = 0xFFFF000000000000;

143 
add
 = (((add >> 48) << 9 | 0x1FE) << 39);

144 
add
 = ((◊dd >> 39Ë<< 9 | 
p1_va
) << 30);

145 
add
 = ((◊dd >> 30Ë<< 9 | 
p2_va
) << 21);

146 
add
 = ((◊dd >> 21Ë<< 9 | 
p3_va
) << 12);

147 
p4
 = (
uöt64_t
*)
add
;

148 
p5
 = (
uöt64_t
*)
p4
[
p4_va
];

149 if(!
p5
)

151 
p5
 = (
uöt64_t
 *)
	`gë_∑ge
();

152 
p4
[
p4_va
] = ((((
uöt64_t
Ë
p5
) & 0xFFFFFFFFFF000) | 7);

154 
	}
}

	@sys/main.c

1 
	~<defs.h
>

2 
	~<°dio.h
>

3 
	~<sys/pmem_m™agî.h
>

4 
	~<sys/kîn_∑ge_èbÀ.h
>

5 
	~<sys/gdt.h
>

6 
	~<sys/èrfs.h
>

9 
	~<sys/idt.h
>

10 
	~<sys/v_mem_m™agî.h
>

11 
	~<sys/èrfs.h
>

14 
	#INITIAL_STACK_SIZE
 4096

	)

15 
	g°ack
[
INITIAL_STACK_SIZE
];

16 
uöt32_t
* 
	glﬂdî_°ack
;

17 
kînmem
, 
physba£
;

18 
tss_t
 
	gtss
;

21 
	$°¨t
(
uöt32_t
* 
moduÀp
, * 
physba£
, * 
phys‰ì
)

23 
	`˛ór_s¸ìn
();

26 
moduÀp
[0] != 0x9001) modulep += modulep[1]+2;

27 
sm≠
 = (
sm≠_t
*)(
moduÀp
+2); smap < (smap_t*)((*)modulep+modulep[1]+2*4); ++smap) {

28 i‡(
sm≠
->
ty≥
 =1 && sm≠->
Àngth
 != 0) {

30 
	`‰ì_∑ge_li°
(
sm≠
, 
physba£
, 
phys‰ì
);

35 
phys‰ì
 += 1048576;

43 
	`kîn_±
((*Ë&
kînmem
, (
uöt64_t
)
physba£
, (uöt64_t)
phys‰ì
);

44 
	`öô_VM
((
uöt64_t
Ë
phys‰ì
);

45 
	`öô_èsk
();

46 
	`öô_fdèbÀ
();

47 
	`˛ór_s¸ìn
();

48 
	`öô_shñl
();

65 
	}
}

67 
	$boŸ
()

71 
	`__asm__
(

74 :"=g"(
lﬂdî_°ack
)

75 :"r"(&
°ack
[
INITIAL_STACK_SIZE
])

77 
__asm
 volatile("cli");

78 
	`ªlﬂd_gdt
();

80 
	`ªlﬂd_idt
();

82 
	`£tup_tss
();

83 
__asm
 volatile("sti");

84 
	`°¨t
(

85 (
uöt32_t
*)((*)(
uöt64_t
)
lﬂdî_°ack
[3] + (uöt64_t)&
kînmem
 - (uöt64_t)&
physba£
),

86 &
physba£
,

87 (*)(
uöt64_t
)
lﬂdî_°ack
[4]

95 
	}
}

	@sys/pmem_manager.c

1 
	~<defs.h
>

2 
	~<°dio.h
>

4 
	~<sys/pmem_m™agî.h
>

6 
	#PAGE_SIZE
 (4096u)

	)

8 
Page
* 
	ghód
 = 
NULL
;

9 
Page
* 
	gèû
 = 
NULL
;

10 
Page
* 
	gck

NULL
;

12 
uöt64_t
 
	gi
 = 0;

13 
uöt64_t
 
	gvm_ˇ°
 = 0;

15 
	$zîo_∑ge
(
uöt64_t
 
∑
)

17 
uöt64_t
* 
tmp
 = (uöt64_t*)
∑
;

18 
uöt32_t
 
i
 = 0;

20 
i
 < 512)

22 *
tmp
 = 0;

23 
tmp
++;

24 ++
i
;

26 
	}
}

28 
	$‰ì_∑ge_li°
(
sm≠_t
* 
•
, * 
physba£
, * 
phys‰ì
)

30 
uöt64_t
 
sm
;

31 
uöt64_t
* 
kîn_‰ì
 = (uöt64_t*)
phys‰ì
;

32 
Page
* 
tmp
 = 
NULL
;

34 i‡(
•
->
ba£
 == 0x0)

37 i‡(!
hód
)

40 
hód
 = (
Page
*)
kîn_‰ì
;

42 
èû
 = 
hód
;

44 
hód
->
∑ge_ba£
 = 
NULL
;

45 
hód
->
√xt
 = 
NULL
;

48 
i
 = 0;

50 
sm
 = 
•
->
ba£
; sm < (•->ba£ + sp->
Àngth
); sm +
PAGE_SIZE
)

52 i‡(1 =
i
)

53 
ck
 = 
hód
;

54 i‡(((
sm
 >(
uöt64_t
)
physba£
) && (sm <=

55 ((
uöt64_t
)
phys‰ì
 + (1024 * 1024))))

56 || ((
sm
 >= 0xB8000) && (sm <= 0xBC096))

57 || (
sm
 < (
uöt64_t
)
physba£
))

63 
i
++;

66 
kîn_‰ì
 += 2;

67 
tmp
 = (
Page
*)
kîn_‰ì
;

68 
tmp
->
∑ge_ba£
 = 
sm
;

69 
	`zîo_∑ge
(
sm
);

70 
tmp
->
√xt
 = 
hód
;

71 
hód
 = 
tmp
;

74 
	`¥ötf
("\¿Kîn_Fªe:%x:HEAD%x:Next%x:sm%x:i%d:\n%x", 
kîn_‰ì
,

75 
hód
, hód->
√xt
, 
sm
, 
i
, 
phys‰ì
+(i*16));

76 
	`¥ötf
("\nFú°FªePAge:%x:ckNext:%x", 
ck
, ck->
∑ge_ba£
);

77 
	}
}

79 * 
	$gë_∑ge
()

81 
Page
* 
vm_tmp
 = 
NULL
;

82 
Page
* 
èû_tmp
 = 
NULL
;

83 * 
±
 = 
NULL
;

87 
vm_tmp
 = (
Page
*)((
uöt64_t
)
hód
 | 
vm_ˇ°
);

88 
èû_tmp
 = (
Page
*)((
uöt64_t
)
èû
 | 
vm_ˇ°
);

90 i‡(
èû_tmp
 =
vm_tmp
)

92 
	`¥ötf
("\n OUT OF PHYSICAL MEMORY!!!");

98 
±
 = (*)
vm_tmp
->
∑ge_ba£
;

99 
hód
 = 
vm_tmp
->
√xt
;

100  
±
;

101 
	}
}

103 
	$‰ì_∑ge
(* 
±
)

105 
Page
* 
tmp
 = 
NULL
;

106 
tmp
->
∑ge_ba£
 = (
uöt64_t
)
±
;

107 
tmp
->
√xt
 = 
hód
;

108 
hód
 = 
tmp
;

109 
	}
}

	@sys/printf.c

7 
	~<°d¨g.h
>

8 
	~<defs.h
>

9 
	~<comm⁄.h
>

10 
	~<°dio.h
>

12 
	#BUFLEN
 1024

	)

14 
	gbuf
[
BUFLEN
];

15 
	gcﬁ‹
 = 0x07;

16 
	gx_axis
 = 0, 
	gy_axis
 = 0;

17 
uöt64_t
 
	gvideo
 = 0xB8000;

19 
s¸ﬁl
();

20 
upd©e_curs‹
();

21 
putch
();

22 
ªvî£
(*
buf
, 
Àn
);

23 
d2hex
(*
buf
, 
uöt64_t
 
num
);

25 
	$¥ötf
(c⁄° *
f‹m©
, ...)

27 
va_li°
 
¨gs
;

28 
±
, 
ch
;

29 *
hex°r
 = "0x";

30 *
°r
 = 
NULL
;

31 
i
 = 0, 
cou¡î
 = 0;

32 
uöt64_t
 
num
;

34 
	`va_°¨t
(
¨gs
, 
f‹m©
);

35 
±
 = *
f‹m©
;

37 
±
 = *
f‹m©
;Öà!'\0'; 
i
++,Öt = *(format + i))

39 i‡(
±
 != '%')

41 
	`putch
(
±
);

42 
cou¡î
++;

45 i‡(
±
 == '%') {

46 ++
i
;

47 
±
 = *(
f‹m©
 + 
i
);

48 
±
)

51 
ch
 = ()
	`va_¨g
(
¨gs
, );

52 
	`putch
(
ch
);

53 
cou¡î
++;

57 
num
 = (
uöt64_t
)
	`va_¨g
(
¨gs
, );

58 
	`ôﬂ
(
num
, 
buf
);

59 
cou¡î
 +
	`put°r
(
buf
);

63 
°r
 = (*)
	`va_¨g
(
¨gs
, *);

64 
cou¡î
 +
	`put°r
(
°r
);

68 
num
 = (
uöt64_t
)
	`va_¨g
(
¨gs
, );

69 
	`d2hex
(
buf
, 
num
);

70 
	`put°r
(
hex°r
);

71 
cou¡î
 +
	`put°r
(
buf
);

72 
cou¡î
 += 2;

75 
num
 = (
uöt64_t
)
	`va_¨g
(
¨gs
, );

76 
	`d2hex
(
buf
, 
num
);

77 
	`put°r
(
hex°r
);

78 
cou¡î
 += 2;

79 
cou¡î
 +
	`put°r
(
buf
);

87 
	`va_íd
(
¨gs
);

88  
cou¡î
;

89 
	}
}

92 
	$putch
(
ch
)

94 
uöt64_t
 
cur
 = ((
y_axis
 * 80Ë+ 
x_axis
)*2 + 
video
;

95 *
doô
 = (*)
cur
;

97 i‡(
ch
 == '\n')

99 
x_axis
 = 0;

100 
y_axis
++;

103 i‡(
y_axis
 >= 25)

105 
	`s¸ﬁl
();

107 
	`upd©e_curs‹
();

111 i‡(
ch
 == '\t')

113 i‡((
x_axis
 + 4) < 79)

115 
x_axis
 += 4;

118 
x_axis
 = 0;

119 
y_axis
++;

123 i‡(
x_axis
 < 79)

125 
x_axis
++;

128 
x_axis
 = 0;

129 
y_axis
++;

133 i‡(
y_axis
 >= 25)

135 
	`s¸ﬁl
();

138 
cur
 = ((
y_axis
 * 80Ë+ 
x_axis
)* 2 + 
video
;

139 
doô
 = (*)
cur
;

141 *
doô
++ = 
ch
;

142 *
doô
++ = 
cﬁ‹
;

143 
	`upd©e_curs‹
();

145 
	}
}

149 
	$put°r
(*
°
)

151 
cou¡
 = 0;

152 *
°
 != '\0')

154 
	`putch
(*
°
);

155 
°
++;

156 
cou¡
++;

158  
cou¡
;

159 
	}
}

163 
	$ôﬂ
(
uöt64_t
 
num
, * 
bu
)

165 
i
 = 0;

166 i‡(
num
 < 0)

169 
bu
[0] = '-';

170 
i
++;

172 i‡(
num
 == 0)

174 
bu
[0] = '0';

176 
num
 > 0)

178 
bu
[
i
++] = '0' + 
num
 % 10;

179 
num
 /= 10;

182 
buf
[
i
] = '\0';

183 
	`ªvî£
(
buf
, 
i
);

184 
	}
}

188 
	$ªvî£
(* 
buf
, 
Àn
)

190 
tmp
;

191 
i
 = 0, 
j
 = 
Àn
 - 1;

193  
buf
[
i
] !'\0' && i < 
j
)

195 i‡(
buf
[
i
] == '-')

197 
i
++;

202 
tmp
 = 
buf
[
i
];

203 
buf
[
i
] = buf[
j
];

204 
buf
[
j
] = 
tmp
;

205 
i
++;

206 
j
--;

208 
	}
}

211 
	$d2hex
(*
buf
, 
uöt64_t
 
num
)

213 c⁄° *
hex
 = "0123456789ABCDEF";

214 
i
 = 0;

215 
num
 > 0)

217 
buf
[
i
++] = 
hex
[(
num
 & 0xF)];

218 
num
 >>= 4;

220 
buf
[
i
] = '\0';

221 
	`ªvî£
(
buf
, 
i
);

222 
	}
}

225 
	$˛ór_s¸ìn
()

227 
i
;

228 
Àn_vid
 = (25*80);

229 * 
doô
 = (*Ë
video
;

230  
i
 = 0; i < 
Àn_vid
; i++)

232 *
doô
++ = ' ';

233 *
doô
++ = 
cﬁ‹
;

235 
x_axis
 = 0, 
y_axis
 = 0;

236 
	`upd©e_curs‹
();

237 
	}
}

239 
	$wrôe
(
fd
,vﬁ©ûê* 
°r
, 
n
)

241 
i
 = 0;

242 if(
fd
 == 1 || fd==2)

244 
i
 =0 ; i < 
n
 && 
°r
[i] != '\0' ; i++)

246 
	`putch
(
°r
[
i
]);

249 
	`upd©e_curs‹
();

250  
i
+1;

251 
	}
}

255 
	$upd©e_curs‹
()

257 
curs‹
 = (
y_axis
 * 80Ë+ 
x_axis
;

258 
	`outb
(0x3D4, 0x0F);

259 
	`outb
(0x3D5, ()(
curs‹
 & 0xFF));

260 
	`outb
(0x3D4, 0x0E);

261 
	`outb
(0x3D5, ()((
curs‹
>>8) & 0xFF));

262 
	}
}

264 
	$s¸ﬁl
()

266 
i
 = 0;

267 vﬁ©ûê*
doô
 = (vﬁ©ûê*)
video
;

269 
i
 = 80; i < (25 * 80); i++)

271 *(
doô
) = *(doit + 160);

272 
doô
++;

273 *
doô
 = 
cﬁ‹
;

274 *
doô
++;

277 
i
 = 0; i < 80; i++)

279 *(
doô
) = ' ';

280 
doô
++;

281 *
doô
 = 
cﬁ‹
;

282 *
doô
++;

285 
x_axis
 = 0;

286 
y_axis
 = 24;

288 
	}
}

	@sys/process_que.c

1 
	~<°dio.h
>

2 
	~<sys/èsk_m™agemít.h
>

3 
	~<sys/v_mem_m™agî.h
>

4 
	~<sys/èsk_swôch.h
>

5 
	~<sys/úq.h
>

12 
PCB
 *
	$ªmove‰omQ
(
PLIST
 *
li°
, 
uöt64_t
 
pid
)

14 
PLIST
 *
tmp
 = 
NULL
;

15 
PLIST
 *
¥v
 = 
NULL
;

17 
¥v
 = 
li°
;

18 i‡(
li°
->
√xt
)

20 
tmp
 = 
li°
->
√xt
;

23 
tmp
)

25 i‡(
tmp
->
pcb_li
->
pid
 ==Öid)

27 
¥v
->
√xt
 = 
tmp
->next;

28  (
tmp
->
pcb_li
);

30 
tmp
 =Åmp->
√xt
;

31 
¥v
 = 
tmp
;

33  
NULL
;

34 
	}
}

43 
	$lookötoQ
(
PLIST
 *
li°
, 
uöt64_t
 
id
)

45 
PLIST
 *
tmp
 = 
NULL
;

46 
ªt
 = -1;

47 
tmp
 = 
li°
;

49 
tmp
->
√xt
)

51 i‡(
tmp
->
pcb_li
->
pid
 =
id
)

53  
id
;

57  
ªt
;

58 
	}
}

66 
	$lookötoQChûd
(
PLIST
 *
li°
, 
uöt64_t
 
id
)

68 
PLIST
 *
tmp
 = 
NULL
;

69 
ªt
 = -1;

70 
tmp
 = 
li°
;

72 
tmp
->
√xt
)

74 i‡(
tmp
->
pcb_li
->
µid
 =
id
)

76 
ªt
 = 0;

80  
ªt
;

81 
	}
}

89 
	$do_exô
(
°©us
)

91 
PCB
 *
tmp
 = 
NULL
;

92 
uöt64_t
 
pid
 = -1;

94 i‡((
pid
 = 
	`lookötoQ
(
ru«bÀQ
, 
ru¬ög
->
µid
)))

96 
tmp
 = 
	`ªmove‰omQ
(
waôQ
, 
pid
);

97 i‡(
NULL
 =
tmp
)

99 
	`¥ötf
("\n Error givenÖrocessÇot found");

102 
	`add_toQ
(
ru«bÀQ
, 
tmp
);

104 
	`scheduÀ1
();

106 
	}
}

113 
	$do_waôpid
(
uöt64_t
 
pid
)

115 i‡(0 =(
	`lookötoQ
(
ru«bÀQ
, 
pid
)))

118 
	`add_toQ
(
waôQ
, 
ru¬ög
);

119 
	`scheduÀ1
();

126 
	}
}

133 
	$do_waô
()

135 i‡(0 =(
	`lookötoQChûd
(
ru«bÀQ
, 
ru¬ög
->
pid
)))

138 
	`add_toQ
(
waôQ
, 
ru¬ög
);

139 
	`scheduÀ1
();

146 
	}
}

154 
	$do_Ps
()

156 
PLIST
 *
tmp
 = 
NULL
;

158 
tmp
 = 
ru«bÀQ
;

159 
	`¥ötf
("\nps OUTPUT:\nRunable");

160 
	`¥ötf
("\nPID\tTime\tName");

162 
tmp
->
√xt
)

164 
	`¥ötf
("%d,\t,%d,\t%s", 
tmp
->
pcb_li
->
pid
,Åmp->pcb_li->
lﬂd_time
,Åmp->pcb_li->
«me
);

167 
tmp
 = 
waôQ
;

168 
	`¥ötf
("\nps OUTPUT:\nWaiting");

169 
	`¥ötf
("\nPID\tTime\tName");

171 
tmp
->
√xt
)

174 
	`¥ötf
("%d,\t,%d,\t%s", 
tmp
->
pcb_li
->
pid
,Åmp->pcb_li->
lﬂd_time
,Åmp->pcb_li->
«me
);

177 
	}
}

	@sys/scanf.c

1 
	~<°d¨g.h
>

2 
	~<°dio.h
>

3 
	~<defs.h
>

4 
	~<sys/úq.h
>

6 
	$sˇnf
(c⁄° *
f‹m©
, 
uöt64_t
 
±r
)

8 
i
=0;

9 if(
√wlöe
 == 0)

16 * 
°r
 = (*)
±r
;

17 
kbuf
[
i
]!='\n')

19 
°r
[
i
]=
kbuf
[i];

21 
i
++;

23 
°r
[
i
]='\0';

24 
i
++;

25 
ödex
 = 
i
;

26 
i
 = i; i < 
kbuf_ödex
; i++)

28 
kbuf
[
i
-
ödex
] = kbuf[i];

31 
kbuf_ödex
 = kbuf_ödex-
ödex
;

32 
√wlöe
 = 0;

37 
	}
}

	@sys/string.c

1 
	~<sys/°rög.h
>

2 
	~<defs.h
>

4 
	$°rcmp
(c⁄° *
s1
,c⁄° *
s2
)

6 *
s1
 =*
s2
++) {

7 i‡(*
s1
++ == 0){

11  (*(*Ë
s1
 - *(*Ë--
s2
);

12 
	}
}

14 * 
	$°r˝y
(*
de°ö©i⁄
, c⁄° *
sour˚
) {

16 *
ªt
 = 
de°ö©i⁄
;

17 (*
de°ö©i⁄
++ = *
sour˚
++))

19  
ªt
;

21 
	}
}

23 *
	$°∫˝y
(*
de°
, c⁄° *
§c
, 
n
)

25 *
ªt
 = 
de°
;

27 i‡(!
n
--)

28  
ªt
;

29 } (*
de°
++ = *
§c
++));

30 
n
--)

31 *
de°
++ = 0;

32  
ªt
;

33 
	}
}

35 *
	$°rchr
(c⁄° *
s
, 
c
)

37 *
s
 !()
c
)

38 i‡(!*
s
++)

40  (*)
s
;

41 
	}
}

43 
	$°æí
(c⁄° *
°r
)

45 c⁄° *
s
;

47 
s
 = 
°r
; *s; ++s)

49  (
s
 - 
°r
);

50 
	}
}

53 
	$°∫cmp
(c⁄° *
s1
, c⁄° *
s2
, 
n
)

55 
uc1
, 
uc2
;

57 i‡(
n
 == 0)

60 
n
-- > 0 && *
s1
 =*
s2
) {

63 i‡(
n
 =0 || *
s1
 == '\0')

65 
s1
++;

66 
s2
++;

68 
uc1
 = (*(*Ë
s1
);

69 
uc2
 = (*(*Ë
s2
);

70  ((
uc1
 < 
uc2
) ? -1 : (uc1 > uc2));

71 
	}
}

74 *
	$°r°r
(c⁄° *
hay°ack
, c⁄° *
√edÀ
)

76 
√edÀÀn
;

78 i‡(*
√edÀ
 == '\0')

79  (*Ë
hay°ack
;

80 
√edÀÀn
 = 
	`°æí
(
√edÀ
);

81 ; (
hay°ack
 = 
	`°rchr
(hay°ack, *
√edÀ
)Ë!
NULL
; haystack++)

82 i‡(
	`°∫cmp
(
hay°ack
, 
√edÀ
, 
√edÀÀn
) == 0)

83  (*Ë
hay°ack
;

84  
NULL
;

85 
	}
}

87 
	$°¨ts_wôh
(c⁄° * 
ba£
, c⁄° *
¥efix
)

89 *
¥efix
)

91 if(*
¥efix
++ !*
ba£
++)

95 
	}
}

97 
	$ödexOf
 (c⁄° * 
ba£
, c⁄° * 
°r
) {

98  
	`ödexOf_shi·
(
ba£
, 
°r
, 0);

99 
	}
}

101 
	$ödexOf_shi·
(c⁄° * 
ba£
, c⁄° * 
°r
, 
°¨tIndex
) {

102 
ªsu…
;

103 
ba£Àn
 = 
	`°æí
(
ba£
);

105 i‡(
	`°æí
(
°r
Ë> 
ba£Àn
 || 
°¨tIndex
 > baselen) {

106 
ªsu…
 = -1;

108 i‡(
°¨tIndex
 < 0 ) {

109 
°¨tIndex
 = 0;

111 * 
pos
 = 
	`°r°r
(
ba£
+
°¨tIndex
, 
°r
);

112 i‡(
pos
 =
NULL
) {

113 
ªsu…
 = -1;

115 
ªsu…
 = 
pos
 - 
ba£
;

118  
ªsu…
;

119 
	}
}

121 
	$œ°IndexOf
 (c⁄° * 
ba£
, c⁄° * 
°r
) {

122 
ªsu…
;

124 i‡(
	`°æí
(
°r
Ë> såÀn(
ba£
)) {

125 
ªsu…
 = -1;

127 
°¨t
 = 0;

128 
ídöô
 = 
	`°æí
(
ba£
Ë- såÀn(
°r
);

129 
íd
 = 
ídöô
;

130 
ídtmp
 = 
ídöô
;

131 
°¨t
 !
íd
) {

132 
°¨t
 = 
	`ödexOf_shi·
(
ba£
, 
°r
, start);

133 
íd
 = 
	`ödexOf_shi·
(
ba£
, 
°r
,Énd);

136 i‡(
°¨t
 == -1) {

137 
íd
 = -1;

138 } i‡(
íd
 == -1) {

142 i‡(
ídtmp
 =(
°¨t
+1)) {

143 
íd
 = 
°¨t
;

145 
íd
 = 
ídtmp
 - (ídtm∞- 
°¨t
) / 2;

146 i‡(
íd
 <
°¨t
) {

147 
íd
 = 
°¨t
+1;

149 
ídtmp
 = 
íd
;

155 
°¨t
 = 
íd
;

156 
íd
 = 
ídöô
;

159 
ªsu…
 = 
°¨t
;

161  
ªsu…
;

162 
	}
}

164 *
	$sub°rög
(* 
de°
 , c⁄° *
s
, 
°¨tIndex
, 
ídIndex
)

168 i‡(
NULL
 =
s
)

169  
NULL
;

171 i‡(
°¨tIndex
 > 
ídIndex
)

172  
NULL
;

176 i‡(
°¨tIndex
 < 0 || 
ídIndex
 < 0)

177  
NULL
;

179 
i
 = 0;

180  ; 
ídIndex
-
°¨tIndex
 > 0; sèπIndex++, 
i
++)

181 i‡(*(
s
+
°¨tIndex
) != '\0'){

182 *(
de°
+
i
Ë*(
s
+
°¨tIndex
);

186 *(
de°
+
i
) = 0;

187  
de°
;

188 
	}
}

	@sys/syscall.c

3 
	~<°dio.h
>

4 
	~<defs.h
>

8 
	~<sys/gdt.h
>

9 
	~<sys/sysˇŒ.h
>

11 
uöt64_t
 
	gsysˇŒs
[32] = {0,(uöt64_t)&
¥ötf
};

16 
uöt64_t
 
	$sys_putöt
(
a
)

31 
__asm__
 vﬁ©ûe("öà$80;"::"a"((
uöt64_t
)
a
), "b" ((uint64_t)1));

33 
	}
}

	@sys/tarfs.c

1 
	~<defs.h
>

2 
	~<°dio.h
>

3 
	~<sys/gdt.h
>

4 
	~<sys/idt.h
>

5 
	~<sys/i§.h
>

6 
	~<sys/úq.h
>

7 
	~<sys/pmem_m™agî.h
>

8 
	~<sys/kîn_∑ge_èbÀ.h
>

9 
	~<sys/èsk_m™agemít.h
>

10 
	~<sys/èrfs.h
>

11 
	~<sys/°rög.h
>

12 
	~<sys/î∫o.h
>

14 
	gfd_u£d
 = 2;

15 
FDT
 
	gfd_èbÀ
[150];

17 
	$öô_fdèbÀ
()

19 
uöt64_t
 
i
 = 0;

21 
i
 = 0; i < 150; i++)

23 
fd_èbÀ
[
i
].
£ek
 = 0;

24 
fd_èbÀ
[
i
].
numbî
 = -1;

26 
	}
}

28 
	$°rcmp2
(* 
°r1
, *
°r2
)

30 *
°r1
 !='\0' || *
°r2
!='\0' )

33 if(*
°r1
 !*
°r2
)

37 
°r1
++;

38 
°r2
++;

40 if(*
°r1
=='\0'&&*
°r2
=='\0')

45 
	}
}

46 
	gzîo_size
[12] = "000000000000";

48 
	$powî
(
x
, 
y
)

50 if–
y
 == 0)

54 i‡(
y
%2 == 0)

56  
	`powî
(
x
, 
y
/2)*power(x, y/2);

60  
x
*
	`powî
(x, 
y
/2)*power(x, y/2);

63 
	}
}

65 
	$size_to_öt
(* 
p
)

67 
k
 = 0;

68 *
p
)

70 
k
 = (k<<3)+(k<<1)+(*
p
)-'0';

71 
p
++;

73 
decimÆ
=0, 
i
=0, 
ªm
;

74 
k
!=0)

76 
ªm
 = 
k
%10;

77 
k
/=10;

78 
decimÆ
 +
ªm
*
	`powî
(8,
i
);

79 ++
i
;

82  
decimÆ
;

83 
	}
}

86 
	$psize_to_öt
(* 
size
)

88 
ªt
 = 0;

89 
ba£
 = 1;

90 
i
 =7;

91 
size
[
i
] <= '0' || size[i] > '9' )

92 
i
--;

93 
i
=i; i >= 0; i--)

95 
ªt
 +
ba£
*(
size
[
i
] - '0');

96 
ba£
 *= 8;

98  
ªt
;

99 
	}
}

101 
VMA
* 
	$ªad_phódî
(* 
addr
, 
ñf_hódî
* 
ñf_ba£
)

103 
phódî
* 
pba£
 = (phódî*)(
addr
);

104 
uöt64_t
 
fûesz
,
memsz
,
vaddr
,
off£t
;

106 
VMA
* 
vma
 = 
NULL
;

107 
fûesz
 = 
pba£
->
p_fûesz
;

108 
memsz
 = 
pba£
->
p_memsz
;

109 
vaddr
 = 
pba£
->
p_vaddr
;

110 
off£t
 = 
pba£
->
p_off£t
;

111 
uöt64_t
 
ba£
 = (uöt64_tË
ñf_ba£
;

112 
uöt64_t
 
c⁄ã¡s
 = 
ba£
 + 
off£t
;

114 if(
memsz
 != 0)

116 
uöt32_t
 
ªt
 = 
	`m_m≠
((
uöt64_t
)
vaddr
,(uöt64_t)
c⁄ã¡s
, 
fûesz
, 
memsz
);

117 if(
ªt
 == 0)

119 
vma
 = 
	`¸óã_vma
(
vaddr
,
memsz
);

122  
vma
;

123 
	}
}

129 
uöt64_t
 
	$size_ñf
(*
size
)

131 
uöt64_t
 
hódî_size
 = ((uöt64_t)(*
size
))+256*((uint64_t)(*(size+1)));

132  
hódî_size
;

133 
	}
}

135 
	$size_off£t
(* 
size
)

137 
uöt64_t
 
off
 = 0;

138 
uöt64_t
 
ba£
 = 1;

139 
i
 = 0;i < 8 ; i++)

141 
off
+=
ba£
*((
uöt64_t
)
size
[
i
]);

142 
ba£
*=8;

144  
off
;

145 
	}
}

147 
	$gë_num_£gs
(* 
num
)

149  10*((
num
[1]) ) + (num[0]);

150 
	}
}

152 
	$ªadñf
(* 
addr
, 
PCB
 *
èsk
)

154 
ñf_hódî
* 
ñf_ba£
 = (ñf_hódî*)(
addr
);

155 * 
phódî
;

156 
phódî
 = (
addr
)+
	`size_off£t
(
ñf_ba£
->
e_phoff
);

158 
i
 = 0;

159 
num_íåõs
 = 
	`gë_num_£gs
(
ñf_ba£
->
e_phnum
);

160 
èsk
->
rù
 = 
ñf_ba£
->
e_íåy
;

161 
VMA
* 
√wp
 = 
NULL
;

162 
VMA
* 
ht
 = 
NULL
;

164 
i
 = 0; i < 
num_íåõs
; i++ )

166 i‡(
i
 == 0)

168 
√wp
 = 
	`ªad_phódî
(
phódî
, 
ñf_ba£
);

169 
èsk
->
mm_°
 = 
√wp
;

170 
phódî
 =Öhódî+
	`size_ñf
(
ñf_ba£
->
e_phítsize
);

174 
ht
 = 
	`ªad_phódî
(
phódî
, 
ñf_ba£
);

175 if(
ht
!=
NULL
)

177 
√wp
->
√xt
 = 
ht
;

178 
√wp
 =Çewp->
√xt
;

179 
phódî
 =Öhódî+
	`size_ñf
(
ñf_ba£
->
e_phítsize
);

183 
	}
}

185 
	$ªad_èrfs
(
PCB
* 
èsk
, * 
«me
)

187 if(
«me
 =
NULL
)

192 
ãmp_size
;

193 
°ï
 = 0,
mod
;

194 * 
ñf_hódî
 = 
NULL
;

195 * 
¥ev«me
 = 
NULL
;

196 * 
¥evsize
 = 
NULL
;

197 
posix_hódî_u°¨
 *
hódî
 = (posix_hódî_u°¨*)(&
_bö¨y_èrfs_°¨t
);

198 
posix_hódî_u°¨
 *
íd
 = (posix_hódî_u°¨*)(&
_bö¨y_èrfs_íd
);

200 
hódî
 < 
íd
)

202 
ãmp_size
 = 
	`size_to_öt
(
hódî
->
size
);

203 if(
ãmp_size
 > 0 && 
	`°rcmp2
(
«me
,
hódî
->name))

206 
ñf_hódî
 =(*)(
hódî
+1);

207 
	`ªadñf
((*)
ñf_hódî
, 
èsk
);

211 if(
hódî
->
«me
[0] ='\0' && hódî->
size
[0]=='\0' && 
¥ev«me
 ='\0' && 
¥evsize
 == '\0')

216 
mod
 = 
ãmp_size
%((
posix_hódî_u°¨
));

217 if(
mod
 == 0)

219 
°ï
 = 1 +()–
ãmp_size
/((
posix_hódî_u°¨
)));

223 
°ï
 = 2 +()–
ãmp_size
/((
posix_hódî_u°¨
)));

225 
¥ev«me
 = 
hódî
->
«me
;

226 
¥evsize
 = 
hódî
->
size
;

227 
hódî
 = hódî+
°ï
;

230 
	}
}

232 
Fûe
* 
	$gëFûe
(c⁄° *
fûeName
)

234 
posix_hódî_u°¨
 * 
íåy
 = (posix_hódî_u°¨*)(&
_bö¨y_èrfs_°¨t
);

235 
∑ddög
 =0;

236 
î∫o
 = 0;

237 
Fûe
* 
fûe
 = (Fûê*)
	`k_mÆloc
((File));

238 
exôÊag
 = 0;

239 (
uöt64_t
)
íåy
 < (uöt64_t)&
_bö¨y_èrfs_íd
)

241 
size
 = 
	`size_to_öt
(
íåy
->size);

242 if(
	`°rcmp
(
íåy
->
ty≥Êag
,"5"Ë=0 && 
	`°∫cmp
(
fûeName
,íåy->
«me
,
	`œ°IndexOf
 (fûeName, "/")+1Ë=0 &&Üa°IndexO‡(fûeName, "/")+ 1 =
	`°æí
(entry->name))

244 
	`°∫˝y
(
fûe
->
∑ª¡
.
d_«me
,
íåy
->
«me
,
NAMEMAX
);

245 
fûe
->
∑ª¡
.
off£t
 = (*)
íåy
 - (*)&
_bö¨y_èrfs_°¨t
;

246 if(++
exôÊag
 >= 2)

251 if(
	`°rcmp
(
fûeName
,
íåy
->
«me
Ë=0 && såcmp”¡ry->
ty≥Êag
,"0") == 0)

253 
	`°∫˝y
(
fûe
->
∑th
, 
fûeName
, 
NAMEMAX
);

254 
fûe
->
off£t
 = (*)
íåy
 - (*)&
_bö¨y_èrfs_°¨t
;

255 if(++
exôÊag
 >= 2)

260 
íåy
 = (
posix_hódî_u°¨
 *)((*Î¡ry + (posix_hódî_u°¨Ë+ 
size
 );

261 if(
size
 > 0)

263 
∑ddög
 = 
BLOCKSIZE
 - 
size
%BLOCKSIZE;

264 if((*)&
_bö¨y_èrfs_íd
 - (*)
íåy
 >=
BLOCKSIZE
)

266 
íåy
 = (
posix_hódî_u°¨
 *)((*Î¡ry + 
∑ddög
);

271 if(
	`°rcmp
(
fûeName
,
íåy
->
«me
)!=0)

273  
NULL
;

275  
fûe
;

276 
	}
}

278 
uöt64_t
 
	$ªad_fûe
(
uöt64_t
 
fd
,uöt64_à
num
, * 
buf„r
)

280 vﬁ©ûê
uöt64_t
 
i
 = 0;

281 
fd_èbÀ
[
i
].
numbî
 !
fd
 && i <150)

283 
i
++;

285 if(
i
 >=150)

287  
NULL
;

290 
FDT
 
íåy
 = 
fd_èbÀ
[
i
];

291 * 
ba£
 = (*)&
_bö¨y_èrfs_°¨t
;

292 
ba£
 = ba£ + 
íåy
.
Â
->
off£t
 ;

293 
posix_hódî_u°¨
* 
èrfs_°ru˘
 = (posix_hódî_u°¨*)
ba£
;

294 
size
 = 
	`size_to_öt
(
èrfs_°ru˘
->size);

295 if(
size
 == 0)

297  
NULL
;

300 
ba£
 = (*)(
èrfs_°ru˘
+1);

301 
ba£
 = ba£ + 
íåy
.
£ek
 ;

303 
ödex
 = 0;

304 
ödex
=0; index < 
num
 ; index++ )

306 if(
íåy
.
£ek
<
size
)

308 
buf„r
[
ödex
] = 
ba£
[index];

309 
íåy
.
£ek
++;

312 
fd_èbÀ
[
i
].
£ek
 = 
íåy
.seek;

313  
i
;

314 
	}
}

316 
uöt64_t
 
	$˛o£_fûe
(
uöt64_t
 
fd
)

318 
uöt64_t
 
i
 = 0;

319 
fd_èbÀ
[
i
].
numbî
 !
fd
 && i<150)

321 
i
++;

323 if(
i
 >=150)

327 
fd_èbÀ
[
i
].
numbî
=-1;

328 
fd_èbÀ
[
i
].
Â
=
NULL
;

329 
fd_èbÀ
[
i
].
£ek
 = 0;

331 
	}
}

333 
uöt64_t
 
	$›í_fûe
(* 
fûíame
)

335 
uöt64_t
 
i
 = 0;

336 
fd_èbÀ
[
i
].
numbî
 != -1)

338 
i
++;

340 if(
	`gëFûe
(
fûíame
)==
NULL
)

344 
fd_èbÀ
[
i
].
numbî
=
fd_u£d
 + 1;

345 
fd_èbÀ
[
i
].
Â
=
	`gëFûe
(
fûíame
) ;

346 if(
fd_èbÀ
[
i
].
Â
 =
NULL
)

350 
fd_èbÀ
[
i
].
£ek
 = 0;

351  
fd_èbÀ
[
i
].
numbî
;

352 
	}
}

	@sys/task_management.c

5 
	~<sys/èsk_m™agemít.h
>

6 
	~<sys/v_mem_m™agî.h
>

7 
	~<sys/pmem_m™agî.h
>

8 
	~<°dio.h
>

9 
	~<sys/èsk_swôch.h
>

10 
	~<sys/èrfs.h
>

11 
	~<sys/gdt.h
>

12 
	~<sys/°rög.h
>

13 
	~<sys/dúít.h
>

14 
	~<sys/dúít.h
>

15 
	~<sys/úq.h
>

17 
uöt64_t
 
	gpid_bôm≠
[32] = {0};

18 
_£t_k_±abÀ_¸3
(
uöt64_t
);

19 
PLIST
 *
	gÆlPro
;

20 
PLIST
 *
	gwaôQ
;

21 
PLIST
 *
	gru«bÀQ
;

23 
	#R0
 0xFFFFFFFFFFFFFFFD

24 
	#COW
 0x0008000000000000

25 

	)

29 
uöt32_t
 
	$gë_Newpid
()

31 
uöt32_t
 
i
 = 1;

32 
pid_bôm≠
[
i
++] !0 && i < 
MAXPID
);

33 i‡(
MAXPID
 < 
i
 && 
pid_bôm≠
[MAXPID] != 0)

37 
pid_bôm≠
[
i
-1] = 1;

38  (
i
-1);

39 
	}
}

47 
PCB
 *
	$¸óã_pcb
()

49 
PCB
 *
¥o
 = 
NULL
;

51 
¥o
 = (
PCB
 *Ë
	`k_mÆloc
((PCB));

53 i‡(
¥o
 =
NULL
)

56  (
PCB
 *) 0;

59  
¥o
;

60 
	}
}

68 
VMA
 *
	$¸óã_vma
(
uöt64_t
 
°¨t_add
, uöt64_à
size
)

70 
VMA
 *
vm
 = 
NULL
;

72 
vm
 = 
	`k_mÆloc
((
VMA
));

73 i‡(
vm
 =
NULL
)

78 
vm
->
°¨t_add
 = start_add;

79 
vm
->
íd_add
 = (
°¨t_add
 + 
size
);

80 
vm
->
√xt
 = 
NULL
;

82  
vm
;

83 
	}
}

90 
	$add_toQ
(
PLIST
 *
li°
, 
PCB
* 
pc
)

92 
PLIST
 *
node
 = 
NULL
;

94 if((
node
 = 
	`k_mÆloc
((
PLIST
))Ë=
NULL
)

100 
node
->
pcb_li
 = 
pc
;

101 
node
->
√xt
 = 
NULL
;

102 i‡(
li°
->
√xt
 =
NULL
)

104 
li°
->
√xt
 = 
node
;

108 
li°
->
èû
->
√xt
 = 
node
;

110 
li°
->
èû
 = 
node
;

111 
li°
->
cou¡
 += 1;

113 
	}
}

119 
	$öô_èsk
()

122 i‡((
ÆlPro
 = 
	`k_mÆloc
((
PLIST
))Ë=
NULL
)

129 
ÆlPro
->
√xt
 = 
NULL
;

130 
ÆlPro
->
¥ev
 = 
NULL
;

131 
ÆlPro
->
èû
 = 
NULL
;

132 
ÆlPro
->
cou¡
 = 0;

133 
ÆlPro
->
pcb_li
 = 
NULL
;

136 i‡((
waôQ
 = 
	`k_mÆloc
((
PLIST
))Ë=
NULL
)

138 
	`¥ötf
("\n Cantállocate mem for waitQ");

143 
waôQ
->
√xt
 = 
NULL
;

144 
waôQ
->
¥ev
 = 
NULL
;

145 
waôQ
->
èû
 = 
NULL
;

146 
waôQ
->
cou¡
 = 0;

147 
waôQ
->
pcb_li
 = 
NULL
;

151 i‡((
ru«bÀQ
 = 
	`k_mÆloc
((
PLIST
))Ë=
NULL
)

153 
	`¥ötf
("\n Cantállocate mem forÑunableQ");

158 
ru«bÀQ
->
√xt
 = 
NULL
;

159 
ru«bÀQ
->
¥ev
 = 
NULL
;

160 
ru«bÀQ
->
èû
 = 
NULL
;

161 
ru«bÀQ
->
cou¡
 = 0;

162 
ru«bÀQ
->
pcb_li
 = 
NULL
;

164 
	}
}

173 
uöt32_t
 
	$gë_pid
()

175  (
ru¬ög
->
pid
);

176 
	}
}

185 
PCB
 * 
	$gë_√xtPro˚ss
(
PLIST
 *
li°
)

187 
PCB
 *
±
 = 
NULL
;

189 i‡((
li°
->
√xt
 =
NULL
))

192  
NULL
;

194 
±
 = 
li°
->
√xt
->
pcb_li
;

195 
li°
->
√xt
 =Üist->next->next;

196 
li°
->
cou¡
 -= 1;

198  
±
;

199 
	}
}

204 
	$c›yUST
–
uöt64_t
 *
uST
, 
PCB
 *
pg
)

206 
uöt64_t
 *
d°
 = (uint64_t *)0xFFFFFFFF7FFF0000;

207 
uöt64_t
 
tmp
 = 0;

208 
uöt64_t
 
i
 = 0;

209 
d°
 = 
uST
;

211 
i
 < (512 * 8))

213 
tmp
 = 0;

214 
tmp
 = *(
uST
 - 
i
);

216 
	`_£t_k_±abÀ_¸3
(
pg
->
¸3
);

218 *(
d°
 - 
i
Ë
tmp
;

219 
i
++;

220 
	`_£t_k_±abÀ_¸3
(
ru¬ög
->
¸3
);

222 
pg
->
u_°ack
 = (
uöt64_t
 *) 0xFFFFFFFF7FFF0000;

224 
	}
}

226 
uöt64_t
 
	$£lfRef
(
uöt64_t
 
pml4e
, uöt64_à
pd≥
, uöt64_à
pde
, uöt64_à
±e
)

228 
uöt64_t
 
ba£
;

229 
ba£
 = 0xFFFF000000000000;

230 i‡(
pml4e
 < 256)

232 
ba£
 = 0x0000000000000000;

234 
ba£
 = (((ba£ >> (12+9+9+9+9))<<9 | 
pml4e
 ) << (12+9+9+9) );

235 
ba£
 = (((ba£ >> (12+9+9+9))<<9 | 
pd≥
 ) << (12+9+9) );

236 
ba£
 = (((ba£ >> (12+9+9))<<9 | 
pde
 ) << (12+9) );

237 
ba£
 = (((ba£ >> (12+9))<<9 | 
±e
 ) << (12) );

238  
ba£
;

239 
	}
}

244 
	$c›yPageTabÀs
(
PCB
 *
chûd
, PCB *
∑ª¡
)

246 
uöt64_t
 
i
 = 0, 
j
 = 0, 
k
 = 0, 
l
 = 0;

247 vﬁ©ûê
uöt64_t
 *
pml4eAdd
, *
pd≥Add
, *
pdeAdd
, *
±eAdd
;

248 vﬁ©ûê
uöt64_t
 *
√w_pml4eAdd
, *
√w_pd≥Add
, *
√w_pdeAdd
, *
√w_±eAdd
;

249 
uöt64_t
 
chûd_pml4e_íåy
;

251 
chûd_pml4e_íåy
 = 
chûd
->
ödex
;

253 
pml4eAdd
 = (
uöt64_t
 *)(
	`£lfRef
(0x1FE, 0x1FE, 0x1FE, 0x1FE));

254 
√w_pml4eAdd
 = (
uöt64_t
 *)(
	`£lfRef
(0x1FE, 0x1FE, 0x1FE, 
chûd_pml4e_íåy
 ));

256 
i
=0; i<510; i++)

258 if–
i
==
chûd_pml4e_íåy
)

261 if(
pml4eAdd
[
i
]!=0x0)

263 
√w_pml4eAdd
[
i
] = (((
uöt64_t
Ë
	`gë_∑ge
()) | 7);

264 
pd≥Add
 = (
uöt64_t
 *)(
	`£lfRef
(0x1FE, 0x1FE, 0x1FE, 
i
));

265 
√w_pd≥Add
 = (
uöt64_t
 *)(
	`£lfRef
(0x1FE, 0x1FE, 
chûd_pml4e_íåy
, 
i
));

267  
j
=0; j<512; j++)

269 if(
pd≥Add
[
j
])

271 
√w_pd≥Add
[
j
] = (((
uöt64_t
Ë
	`gë_∑ge
()) | 7);

272 
pdeAdd
 = (
uöt64_t
 *)(
	`£lfRef
(0x1FE, 0x1FE, 
i
, 
j
));

273 
√w_pdeAdd
 = (
uöt64_t
 *)(
	`£lfRef
(0x1FE, 
chûd_pml4e_íåy
, 
i
, 
j
));

275  
k
=0; k<512; k++)

277 if(
pdeAdd
[
k
])

279 
√w_pdeAdd
[
k
] = (((
uöt64_t
Ë
	`gë_∑ge
()) | 7);

280 
±eAdd
 = (
uöt64_t
 *)(
	`£lfRef
(0x1FE, 
i
, 
j
, 
k
));

281 
√w_±eAdd
 = (
uöt64_t
 *)(
	`£lfRef
(
chûd_pml4e_íåy
, 
i
, 
j
, 
k
));

283 
l
=0;Ü<512;Ü++)

285 if(
±eAdd
[
l
])

287 
√w_±eAdd
[
l
] = ((((
uöt64_t
)
±eAdd
[l]Ë& 
R0
Ë| 
COW
);

288 
±eAdd
[
l
] = ((((
uöt64_t
ÌãAdd[l]Ë& 
R0
)| 
COW
);

299 
pml4eAdd
[
chûd_pml4e_íåy
] = 0x0;

300 
	}
}

302 
	$dñëePageTabÀs
()

304 
uöt64_t
 
i
;

305 
uöt64_t
 *
pml4eAdd
;

306 
pml4eAdd
 = (
uöt64_t
 *)(
	`£lfRef
(0x1FE, 0x1FE, 0x1FE, 0x1FE));

308 
i
=0; i<510; i++)

309 
pml4eAdd
[
i
] = ((
uöt64_t
)0x0000000000000000) ;

310 
	}
}

313 
	$c›yOnWrôePageTabÀs
()

315 vﬁ©ûê
uöt64_t
 
i
=0, 
j
=0, 
k
=0, 
l
=0, 
m
=0, 
√wödex
 = 0;

316 vﬁ©ûê
uöt64_t
 *
pml4eAdd
, *
pd≥Add
, *
pdeAdd
, *
±eAdd
, *
c›yc⁄
;

317 vﬁ©ûê
uöt64_t
 *
√w_Add
=
NULL
;

318 
c⁄ã¡
;

320 
	`¥ötf
("IN COW func");

321 
pml4eAdd
 = (
uöt64_t
 *)(
	`£lfRef
(0x1FE, 0x1FE, 0x1FE, 0x1FE));

322 
i
=0; i<509; i++)

324 if(
pml4eAdd
[
i
] == 0x0)

329 
uöt64_t
 
a1
=1;

330 
a1
 = 
i
;

332 
pml4eAdd
[
a1
] = ((
uöt64_t
)
	`gë_∑ge
() | 7);

333 
√w_Add
 = (
uöt64_t
 *)(
	`£lfRef
(0x1FE, 0x1FE, 0x1FE, 
a1
));

335 
i
=0; i<510; i++)

337 if(
i
==
a1
)

341 if(
pml4eAdd
[
i
] != 0x0)

343 
pd≥Add
 = (
uöt64_t
 *)(
	`£lfRef
(0x1FE, 0x1FE, 0x1FE, 
i
));

344  
j
=0; j<512; j++)

346 if(
pd≥Add
[
j
] != 0x0)

348 
pdeAdd
 = (
uöt64_t
 *)(
	`£lfRef
(0x1FE, 0x1FE, 
i
, 
j
));

349  
k
=0; k<512; k++)

351 if(
pdeAdd
[
k
] != 0x0)

353 
±eAdd
 = (
uöt64_t
 *)(
	`£lfRef
(0x1FE, 
i
, 
j
, 
k
));

354 
l
=0;Ü<512;Ü++)

356 if(
±eAdd
[
l
])

358 
uöt64_t
 
picAdd
 = (uöt64_à)(
	`£lfRef
(
i
,
j
,
k
,
l
));

359 
√w_Add
[
√wödex
] = ((
uöt64_t
)
	`gë_∑ge
() | 7);

361 
c›yc⁄
 = (
uöt64_t
 *)(
	`£lfRef
(0x1FE, 0x1FE,
a1
,
√wödex
));

362 *
§c
 = (*Ë
picAdd
;

363 *
d°
 = (*Ë
c›yc⁄
;

364 
m
=0;m<4096;m++)

366 
c⁄ã¡
 = 
§c
[
m
];

367 
d°
[
m
] = 
c⁄ã¡
;

369 
±eAdd
[
l
] = ((((
uöt64_t
)
√w_Add
[
√wödex
] >>12)<<12) | 7);

370 
√wödex
++;

380 
pml4eAdd
[
a1
] = ((
uöt64_t
)0x0);

381 
	}
}

389 
	$˝KS
(
uöt64_t
 *
§c
, uöt64_à*
d°
)

391 
uöt64_t
 
i
 = 0;

393 
i
 < 512)

395 
d°
[
i
] = 
§c
[i];

396 ++
i
;

398 
	}
}

409 
	$ck›
()

411 
uöt64_t
 
i
 = 0, 
j
 = 0, 
k
 = 0, 
l
 =0;

412 
uöt64_t
 *
p4
 = 
NULL
, *
p3
 = NULL, *
p2
 = NULL, *
p1
 = NULL;

414 
p4
 = (
uöt64_t
 *Ë
	`£lfRef
(0x1FE, 0x1FE, 0x1FE, 0x1FE);

416 
i
 = 0; i < 510; i ++)

418 i‡(
p4
[
i
])

420 
p3
 = (
uöt64_t
 *Ë
	`£lfRef
(0x1FE, 0x1FE, 0x1FE, 
i
);

421 
j
 = 0; j < 512; j++)

423 i‡(
p3
[
j
])

425 
p2
 = (
uöt64_t
 *Ë
	`£lfRef
(0x1FE, 0x1FE, 
i
, 
j
);

426 
k
 = 0;k < 512; k++)

428 i‡(
p2
[
k
])

430 
p1
 = (
uöt64_t
 *Ë
	`£lfRef
(0x1FE, 
i
, 
j
, 
k
);

431 
l
 = 0;Ü< 512;Ü++)

433 i‡(
p1
[
l
])

435 
	`¥ötf
("\¿PTE:%d:%d:%d:%d:%x", 
i
,
j
,
k
,
l
,
p1
[l]);

444 
	}
}

447 
uöt64_t
 
	$doF‹k
()

449 
PCB
 *
¥o
 = 
NULL
;

450 
PCB
 *
∑ª¡_¥o˚ss
;

451 
uöt64_t
 
pid
, 
k_cid
 = 234, 
k_pid
 = 234;

452 
∑ª¡_¥o˚ss
 = 
ru¬ög
;

453 
¥o
 = 
	`¸óã_pcb
();

454 
	`m_m≠
((
uöt64_t
)
¥o
, (uöt64_tË
∑ª¡_¥o˚ss
, (uöt64_t)((
pcb_t
)), (uint64_t)((pcb_t)) );

455 
	`˝KS
((
ru¬ög
->
kî√l_°ack
), (
¥o
->kernel_stack));

457 
¥o
->
¸3
 = 
	`m≠_∑geTabÀ
(pro);

459 
¥o
->
µid
 = 
∑ª¡_¥o˚ss
->
pid
;

460 i‡((
¥o
->
pid
 = 
	`gë_Newpid
()) == 0)

465 
pid
 = 
¥o
->pid;

467 
	`c›yPageTabÀs
(
¥o
, 
∑ª¡_¥o˚ss
);

468 
	`_£t_k_±abÀ_¸3
(
¥o
->
¸3
);

476 
	`add_toQ
(
ÆlPro
, 
¥o
);

477 
	`add_toQ
(
ru«bÀQ
, 
¥o
);

479 i‡(
¥o
->
kî√l_°ack
[255] == 0x0)

481 i‡(
¥o
->
kî√l_°ack
[254] != 0x0 &&Öro->kernel_stack[254] == 0x23)

483 
k_cid
 = 235;

486 i‡(
¥o
->
kî√l_°ack
[255] == 0x23)

488 
k_cid
 = 236;

491 i‡(
ru¬ög
->
kî√l_°ack
[255] == 0x0)

493 i‡(
ru¬ög
->
kî√l_°ack
[254] != 0x0 &&Ñunning->kernel_stack[254] == 0x23)

495 
k_pid
 = 235;

498 i‡(
ru¬ög
->
kî√l_°ack
[255] == 0x23)

500 
k_pid
 = 236;

503 
GREG
 *
µ1
 = (GREG *Ë&(
ru¬ög
->
kî√l_°ack
[
k_pid
]);

504 
GREG
 *
cc1
 = (GREG *Ë&(
¥o
->
kî√l_°ack
[
k_cid
]);

506 
µ1
->
øx
 = 
¥o
->
pid
;

507 
cc1
->
øx
 = 0x0;

511 i‡(
pid
 =
ru¬ög
->pid)

512 
pid
 = 0;

513  
pid
;

514 
	}
}

	@sys/task_switch.c

6 
	~<sys/èsk_swôch.h
>

7 
	~<sys/gdt.h
>

8 
	~<°dio.h
>

9 
	~<sys/v_mem_m™agî.h
>

10 
	~<sys/¥o˚ss_que.h
>

12 
_£t_k_±abÀ_¸3
(
uöt64_t
);

14 
	$scheduÀ1
()

18 
uöt64_t
 
kîn_id
 = 234;

19 
swôchTo
 = 
	`gë_√xtPro˚ss
(
ru«bÀQ
);

20 i‡(
swôchTo
 =
NULL
)

22 
swôchTo
 = 
ru¬ög
;

24 i‡(-1 =(
	`lookötoQ
(
waôQ
, 
ru¬ög
->
pid
)))

26 
	`add_toQ
(
ru«bÀQ
, 
ru¬ög
);

42 
ru¬ög
 = 
swôchTo
;

43 
	`_£t_k_±abÀ_¸3
(
swôchTo
->
¸3
);

47 
tss
.
r•0
 = (
uöt64_t
Ë&(
swôchTo
->
kî√l_°ack
[255]);

49 i‡(
swôchTo
->
kî√l_°ack
[255] == 0x0)

51 i‡(
swôchTo
->
kî√l_°ack
[254] != 0x0 && switchTo->kernel_stack[254] == 0x23)

53 
kîn_id
 = 235;

56 i‡(
swôchTo
->
kî√l_°ack
[255] == 0x23)

58 
kîn_id
 = 236;

61 
__asm
 volatile(

80 :"r"(&(
swôchTo
->
kî√l_°ack
[
kîn_id
]))

84 
__asm
 volatile(

88 
	}
}

	@sys/util.c

4 
	~<°dio.h
>

11 
	$˛ór_buf
(
uöt64_t
 *
±
, uöt64_à
size
)

13 
uöt64_t
 
i
 = 0;

15 i‡(
±
 =
NULL
)

17 
	`¥ötf
("\n Error: NULLÖointerÖassed");

21 
i
 < 
size
)

23 
±
[
i
] = 0;

24 ++
i
;

26 
	}
}

	@sys/v_mem_manager.c

5 
	~<°dio.h
>

6 
	~<sys/pmem_m™agî.h
>

7 
	~<sys/v_mem_m™agî.h
>

8 
	~<sys/èsk_m™agemít.h
>

9 
	~<sys/èrfs.h
>

10 
	~<sys/gdt.h
>

12 
uöt64_t
 
	gcur_VK
;

13 
uöt64_t
 
	gcur_PK
;

14 
uöt64_t
 
	guSèck_T›
;

15 
_£t_k_±abÀ_¸3
(
uöt64_t
);

20 
	$öô_VM
(
uöt64_t
 
ph‰ì
)

22 
cur_VK
 = (
ph‰ì
 + (16 * 1024) + 0xffffffff7fffff00) ;

23 
cur_PK
 = 0x300000;

24 
uSèck_T›
 = (0xffffffff80000000 + 
UTOP
);

25 
	}
}

36 *
	$k_mÆloc
(
uöt64_t
 
no_byãs
)

38 
uöt64_t
 
±
 = 
NULL
;

40 i‡(
MAX_KERN
 <(
cur_VK
 + 4096))

43 
	`¥ötf
("\n Kernel Virtual OVERSHOOT");

44  
NULL
;

46 
±
 = 
cur_VK
;

47 
cur_VK
 +
no_byãs
;

49  (*)
±
;

50 
	}
}

59 
	$‰ì
(
uöt64_t
 
add
)

61 
VMA
 *
tmp
 = 
NULL
;

62 
VMA
 *
tmp1
 = 
NULL
;

63 
tmp
 = 
ru¬ög
->
mm_°
;

64 i‡(
tmp
->
√xt
)

66 
tmp1
 = 
tmp
->
√xt
;

68 
tmp1
->
√xt
)

70 i‡(
add
 =
tmp1
->
°¨t_add
)

72 
tmp
->
√xt
 = 
tmp1
->next;

73 
tmp1
 = 
NULL
;

76 
tmp
 = 
tmp1
;

77 
tmp1
 =Åmp1->
√xt
;

79 
	}
}

89 *
	$p_mÆloc
(
uöt64_t
 
no_byãs
)

91 
uöt64_t
 
±1
 = 
NULL
;

93 i‡((
cur_PK
 + 
no_byãs
Ë< (
UBASE
))

95 
±1
 = 
cur_PK
;

96 
cur_PK
 +
no_byãs
;

102  (*Ë
±1
;

103 
	}
}

116 
uöt32_t
 
	$m_m≠
(
uöt64_t
 
°¨t_Vadd
, uöt64_à
sour˚_add
, uöt64_à
f_size
, uöt64_à
m_size
)

118 *
check
 = 
NULL
, *
sour˚
 = NULL;

119 
uöt64_t
 
i
 = 0;

120 i‡(
f_size
 < 1)

125 
check
 = (*Ë
°¨t_Vadd
;

126 
sour˚
 = (*Ë
sour˚_add
;

131 
i
 = 0; i < 
m_size
; i++)

133 i‡–
i
 > 
f_size
 && i < 
m_size
)

135 *
check
++ = 0;

139 *
check
++ = *
sour˚
++;

144 
	}
}

152 
uöt64_t
 
	$m≠_∑geTabÀ
(
PCB
 *
pb
)

154 
uöt64_t
 *
p1
, *
tmp
, *
tmp1
;

155 
uöt64_t
 
add
 = 0xFFFF000000000000;

156 
p1
 = (
uöt64_t
 *Ë
	`gë_∑ge
();

157 
uöt32_t
 
i
 = 0;

159 i‡(
p1
 =
NULL
)

161  
NULL
;

165 
add
 = (((add >> 48) << 9 | 0x1FE) << 39);

166 
add
 = (((add >> 39) << 9 | 0x1FE) << 30);

167 
add
 = (((add >> 30) << 9 | 0x1FE) << 21);

168 
add
 = (((add >> 21) << 9 | 0x1FE) << 12);

169 
tmp1
 = (
uöt64_t
 *Ë
add
;

172 
i
 = 509;

173 (*(
tmp1
+
i
)) != 0x0)

175 
i
--;

177 (*(
tmp1
 + 
i
)Ë((
uöt64_t
Ë
p1
 | 7);

179 
add
 = 0xFFFF000000000000;

180 
add
 = (((add >> 48) << 9 | 0x1FE) << 39);

181 
add
 = (((add >> 39) << 9 | 0x1FE) << 30);

182 
add
 = (((add >> 30) << 9 | 0x1FE) << 21);

183 
add
 = ((◊dd >> 21Ë<< 9 | 
i
) << 12);

184 
tmp
 = (
uöt64_t
 *Ë
add
;

186 *(
tmp
 + 511Ë(
uöt64_t
)
tmp1
[511];

187 *(
tmp
 + 510Ë(((
uöt64_t
Ë
p1
) | 7);

188 
pb
->
ödex
 = 
i
;

189  (
uöt64_t
Ë
p1
;

190 
	}
}

195 
	$gëPTEödex
(
uöt64_t
 
vadd
)

197  ((
vadd
 << (16+9+9+9)) >> 55);

198 
	}
}

200 
	$gëPDEödex
(
uöt64_t
 
vadd
)

202  ((
vadd
 << (16+9+9)) >> 55);

203 
	}
}

205 
	$gëPDPEödex
(
uöt64_t
 
vadd
)

207  ((
vadd
 << (16+9)) >> 55);

208 
	}
}

210 
	$gëPML4Eödex
(
uöt64_t
 
vadd
)

212  ((
vadd
 << 16) >> 55);

213 
	}
}

223 
uöt64_t
 *
	$¥o˚ss_°ack
()

225 
uöt64_t
 *
°
 = 
NULL
;

226 
uöt64_t
 *
t›
 = 
NULL
;

227 
uöt32_t
 
i
 = 0;

228 
i
 < 8)

230 
°
 = (
uöt64_t
 *Ë
	`p_mÆloc
(4096);

231 
i
++;

233 i‡(
°
 =
NULL
)

235 
	`¥ötf
("\n Cantállocate Process Stack");

240 
t›
 = (
uöt64_t
 *Ë(
°
 + 512);

242  
t›
;

243 
	}
}

249 
uöt64_t
 
	$±ov_m≠
(
uöt64_t
 
vadd
)

251 
pml4eödex
 = 
	`gëPML4Eödex
(
vadd
);

252 
pd≥ödex
 = 
	`gëPDPEödex
(
vadd
);

253 
pdeödex
 = 
	`gëPDEödex
(
vadd
);

254 
±eödex
 = 
	`gëPTEödex
(
vadd
);

256 
uöt64_t
 *
pml4eAdd
, *
pd≥Add
, *
pdeAdd
, *
±eAdd
;

258 
pml4eAdd
 = (
uöt64_t
 *)(
	`£lfRef
(0x1FE, 0x1FE, 0x1FE, 0x1FE));

259 
pd≥Add
 = (
uöt64_t
 *)(
	`£lfRef
(0x1FE, 0x1FE, 0x1FE, 
pml4eödex
));

260 
pdeAdd
 = (
uöt64_t
 *)(
	`£lfRef
(0x1FE, 0x1FE, 
pml4eödex
, 
pd≥ödex
));

261 
±eAdd
 = (
uöt64_t
 *)(
	`£lfRef
(0x1FE, 
pml4eödex
, 
pd≥ödex
, 
pdeödex
));

262 if(
pml4eAdd
[
pml4eödex
]==0)

264 if(
pd≥Add
[
pd≥ödex
]==0)

266 if(
pdeAdd
[
pdeödex
]==0)

268 if(
±eAdd
[
±eödex
]==0)

270  ((
uöt64_t
)(
±eAdd
[
±eödex
]));

271 
	}
}

275 
	$öô_shñl
()

277 
PCB
 *
¥o
 = 
NULL
;

278 
VMA
 *
tm
 = 
NULL
;

279 *
«me
 = "bin/shell";

280 
¥o
 = 
	`¸óã_pcb
();

281 
¥o
->
¸3
 = 
	`m≠_∑geTabÀ
(pro);

282 i‡(!(
¥o
->
pid
 = 0))

287 
¥o
->
µid
 = 0;

289 
	`_£t_k_±abÀ_¸3
(
¥o
->
¸3
);

290 
	`ªad_èrfs
(
¥o
, 
«me
);

292 i‡((
¥o
->
u_°ack
 = 
	`¥o˚ss_°ack
()Ë=
NULL
)

298 
tm
 = 
	`¸óã_vma
(((
uöt64_t
)(
UBASE
)),((uint64_t) (8 * 4096)));

299 
tm
->
√xt
 = 
¥o
->
mm_°
;

300 
¥o
->
mm_°
 = 
tm
;

305 i‡((
	`add_toQ
(
ÆlPro
, 
¥o
)))

310 
	`add_toQ
(
ÆlPro
, 
¥o
);

312 
ru¬ög
 = 
¥o
;

315 
¥o
->
u_°ack
[0] =Öro->
rù
;

316 
¥o
->
r•
 = (
uöt64_t
)’ro->
u_°ack
);

317 
tss
.
r•0
 = (
uöt64_t
Ë&(
¥o
->
kî√l_°ack
[255]);

320 
uöt64_t
 
ãm
 = 0x28;

321 
__asm
 vﬁ©ûe("mov %0,%%øx;"::"r"(
ãm
));

322 
__asm
 volatile("ltr %ax");

323 
__asm
 vﬁ©ûe("\
 $0x23;\
 %0;\
;\
 $0x1B;\
 %1"::"g"((
¥o
->
u_°ack
)),"g"’ro->
rù
):"memory");

329 
__asm
 volatile("\
;\
");

332 
	}
}

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_BSD


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

868 
deföed
 
__USE_MISC
)

873 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

879 
	`p˛o£
 (
FILE
 *
__°ªam
);

883 #ifdef 
__USE_POSIX


885 *
	$˘îmid
 (*
__s
Ë
__THROW
;

889 #ifde‡
__USE_XOPEN


891 *
	`cu£rid
 (*
__s
);

895 #ifdef 
__USE_GNU


896 
ob°ack
;

899 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

901 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

902 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

903 c⁄° *
__ª°ri˘
 
__f‹m©
,

904 
_G_va_li°
 
__¨gs
)

905 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

909 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


913 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

917 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

920 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

923 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


927 
	#__√ed_gë›t


	)

928 
	~<gë›t.h
>

933 #ifde‡
__USE_EXTERN_INLINES


934 
	~<bôs/°dio.h
>

936 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


937 
	~<bôs/°dio2.h
>

939 #ifde‡
__LDBL_COMPAT


940 
	~<bôs/°dio-ldbl.h
>

943 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_BSD


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__a
;

422 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

423 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

424 
	$î™d48_r
 (
__xsubi
[3],

425 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

426 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

429 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

430 *
__ª°ri˘
 
__ªsu…
)

431 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

432 
	$ƒ™d48_r
 (
__xsubi
[3],

433 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

434 *
__ª°ri˘
 
__ªsu…
)

435 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

439 *
__ª°ri˘
 
__ªsu…
)

440 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

441 
	$jønd48_r
 (
__xsubi
[3],

442 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

443 *
__ª°ri˘
 
__ªsu…
)

444 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

448 
__THROW
 
	`__n⁄nuŒ
 ((2));

450 
	$£ed48_r
 (
__£ed16v
[3],

451 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$lc⁄g48_r
 (
__∑øm
[7],

454 
dønd48_d©a
 *
__buf„r
)

455 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

461 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


462 
	#__mÆloc_™d_ˇŒoc_deföed


	)

463 
__BEGIN_NAMESPACE_STD


465 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

467 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

468 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

469 
__END_NAMESPACE_STD


472 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


473 
__BEGIN_NAMESPACE_STD


479 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

480 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

482 
	$‰ì
 (*
__±r
Ë
__THROW
;

483 
__END_NAMESPACE_STD


485 #ifdef 
__USE_MISC


487 
	$c‰ì
 (*
__±r
Ë
__THROW
;

490 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


491 
	~<Æloˇ.h
>

494 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

495 || 
deföed
 
__USE_BSD


497 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

500 #ifde‡
__USE_XOPEN2K


502 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

503 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

506 #ifde‡
__USE_ISOC11


508 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
__wur
 
	`__©åibuã__
 ((
__mÆloc__
, 
	`__Æloc_size__
 (2)));

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


522 #ifde‡
__˝lu•lus


523 "C++" 
	`©_quick_exô
 ((*
__func
) ())

524 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

526 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

529 
__END_NAMESPACE_STD


531 #ifdef 
__USE_MISC


534 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

535 
__THROW
 
	`__n⁄nuŒ
 ((1));

538 
__BEGIN_NAMESPACE_STD


542 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

544 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


548 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

550 
__END_NAMESPACE_STD


552 #ifde‡
__USE_ISOC99


553 
__BEGIN_NAMESPACE_C99


556 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

557 
__END_NAMESPACE_C99


561 
__BEGIN_NAMESPACE_STD


563 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

564 
__END_NAMESPACE_STD


566 #ifde‡
__USE_GNU


569 *
	$£cuª_gëív
 (c⁄° *
__«me
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

573 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


577 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

580 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


583 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

584 
__THROW
 
	`__n⁄nuŒ
 ((2));

587 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

590 #ifdef 
__USE_MISC


594 
	$˛óªnv
 (Ë
__THROW
;

598 #i‡
deföed
 
__USE_MISC
 \

599 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

605 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

608 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

609 || 
deföed
 
__USE_XOPEN2K8


618 #i‚de‡
__USE_FILE_OFFSET64


619 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 #ifde‡
__REDIRECT


622 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

623 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

625 
	#mk°emp
 
mk°emp64


	)

628 #ifde‡
__USE_LARGEFILE64


629 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

633 #ifde‡
__USE_MISC


640 #i‚de‡
__USE_FILE_OFFSET64


641 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 #ifde‡
__REDIRECT


644 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

645 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

647 
	#mk°emps
 
mk°emps64


	)

650 #ifde‡
__USE_LARGEFILE64


651 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

652 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

656 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


662 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

665 #ifde‡
__USE_GNU


672 #i‚de‡
__USE_FILE_OFFSET64


673 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 #ifde‡
__REDIRECT


676 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

677 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

679 
	#mko°emp
 
mko°emp64


	)

682 #ifde‡
__USE_LARGEFILE64


683 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #i‚de‡
__USE_FILE_OFFSET64


693 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

694 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

696 #ifde‡
__REDIRECT


697 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

698 
__Êags
), 
mko°emps64
)

699 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

701 
	#mko°emps
 
mko°emps64


	)

704 #ifde‡
__USE_LARGEFILE64


705 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

706 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

711 
__BEGIN_NAMESPACE_STD


716 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

717 
__END_NAMESPACE_STD


720 #ifdef 
__USE_GNU


723 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

724 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

727 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


733 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

734 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

739 #i‚de‡
__COMPAR_FN_T


740 
	#__COMPAR_FN_T


	)

741 (*
	t__com∑r_‚_t
) (const *, const *);

743 #ifdef 
__USE_GNU


744 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

747 #ifde‡
__USE_GNU


748 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

751 
__BEGIN_NAMESPACE_STD


754 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

755 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

756 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

760 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

761 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

762 #ifde‡
__USE_GNU


763 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

764 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

765 
	`__n⁄nuŒ
 ((1, 4));

770 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

771 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
__END_NAMESPACE_STD


774 #ifde‡
__USE_ISOC99


775 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

776 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

780 
__BEGIN_NAMESPACE_STD


784 
div_t
 
	$div
 (
__numî
, 
__díom
)

785 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

786 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

787 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

788 
__END_NAMESPACE_STD


790 #ifde‡
__USE_ISOC99


791 
__BEGIN_NAMESPACE_C99


792 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

793 
__díom
)

794 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

795 
__END_NAMESPACE_C99


799 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

800 || 
deföed
 
__USE_SVID


807 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

808 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

813 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

814 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

819 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

820 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

823 #ifde‡
__USE_MISC


825 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

826 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

827 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

828 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

829 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

830 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

831 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

832 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

837 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

838 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

839 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

840 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

841 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

842 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

844 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

845 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

846 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

847 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

848 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

849 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

850 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

851 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

856 
__BEGIN_NAMESPACE_STD


859 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

862 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

863 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

866 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

870 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

871 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

873 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

874 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

875 
__THROW
;

876 
__END_NAMESPACE_STD


879 #ifde‡
__USE_SVID


884 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

888 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


895 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

896 *c⁄° *
__ª°ri˘
 
__tokís
,

897 **
__ª°ri˘
 
__vÆuï
)

898 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

902 #ifde‡
__USE_XOPEN


904 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

910 #ifde‡
__USE_XOPEN2KXSI


912 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

915 #ifde‡
__USE_XOPEN


920 
	$gø¡±
 (
__fd
Ë
__THROW
;

924 
	$u∆ock±
 (
__fd
Ë
__THROW
;

929 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

932 #ifde‡
__USE_GNU


936 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

937 
__THROW
 
	`__n⁄nuŒ
 ((2));

940 
	`gë±
 ();

943 #ifde‡
__USE_BSD


947 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

948 
__THROW
 
	`__n⁄nuŒ
 ((1));

951 
	~<bôs/°dlib-Êﬂt.h
>

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/sys/errno.h

1 
	~<î∫o.h
>

	@/usr/include/sys/syscall.h

18 #i‚de‡
_SYSCALL_H


19 
	#_SYSCALL_H
 1

	)

24 
	~<asm/uni°d.h
>

26 #i‚de‡
_LIBC


31 
	~<bôs/sysˇŒ.h
>

	@/usr/include/syscall.h

1 
	~<sys/sysˇŒ.h
>

	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/asm/unistd.h

1 #i‚de‡
_ASM_X86_UNISTD_H


2 
	#_ASM_X86_UNISTD_H


	)

5 
	#__X32_SYSCALL_BIT
 0x40000000

	)

7 #ifde‡
__i386__


8 
	~<asm/uni°d_32.h
>

9 #ñi‡
deföed
(
__ILP32__
)

10 
	~<asm/uni°d_x32.h
>

12 
	~<asm/uni°d_64.h
>

	@/usr/include/bits/stdio-ldbl.h

19 #i‚de‡
_STDIO_H


23 
__BEGIN_NAMESPACE_STD


24 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

25 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

26 
	$__LDBL_REDIR_DECL
 (
•rötf
)

27 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

28 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

29 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

30 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

31 && !
deföed
 
__REDIRECT
 \

32 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

33 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

34 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

37 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

41 
__END_NAMESPACE_STD


43 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


44 
__BEGIN_NAMESPACE_C99


45 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

46 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

47 
__END_NAMESPACE_C99


50 #ifdef 
__USE_ISOC99


51 
__BEGIN_NAMESPACE_C99


52 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

53 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

54 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

55 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

58 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

62 
__END_NAMESPACE_C99


65 #ifde‡
__USE_XOPEN2K8


66 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

67 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

70 #ifde‡
__USE_GNU


71 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

73 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

74 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

75 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

78 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


79 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

80 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

81 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


82 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

83 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

85 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

88 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

89 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

90 #ifde‡
__USE_XOPEN2K8


91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

94 #ifde‡
__USE_GNU


95 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

96 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

97 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

98 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

19 #i‚de‡
_STDIO_H


23 #i‚de‡
__exã∫_ölöe


24 
	#__STDIO_INLINE
 
ölöe


	)

26 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

30 #ifde‡
__USE_EXTERN_INLINES


33 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
)

35 
__STDIO_INLINE
 

36 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

38  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

39 
	}
}

43 
__STDIO_INLINE
 

44 
	$gëch¨
 ()

46  
	`_IO_gëc
 (
°dö
);

47 
	}
}

50 #ifde‡
__USE_MISC


52 
__STDIO_INLINE
 

53 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

55  
	`_IO_gëc_u∆ocked
 (
__Â
);

56 
	}
}

60 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


62 
__STDIO_INLINE
 

63 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

65  
	`_IO_gëc_u∆ocked
 (
__Â
);

66 
	}
}

69 
__STDIO_INLINE
 

70 
	$gëch¨_u∆ocked
 ()

72  
	`_IO_gëc_u∆ocked
 (
°dö
);

73 
	}
}

78 
__STDIO_INLINE
 

79 
	$putch¨
 (
__c
)

81  
	`_IO_putc
 (
__c
, 
°dout
);

82 
	}
}

85 #ifde‡
__USE_MISC


87 
__STDIO_INLINE
 

88 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

90  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

91 
	}
}

95 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


97 
__STDIO_INLINE
 

98 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

100  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

101 
	}
}

104 
__STDIO_INLINE
 

105 
	$putch¨_u∆ocked
 (
__c
)

107  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

108 
	}
}

112 #ifdef 
__USE_GNU


114 
__STDIO_INLINE
 
_IO_ssize_t


115 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

117  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

118 
	}
}

122 #ifde‡
__USE_MISC


124 
__STDIO_INLINE
 

125 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

127  
	`_IO_„of_u∆ocked
 (
__°ªam
);

128 
	}
}

131 
__STDIO_INLINE
 

132 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

134  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

135 
	}
}

141 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

142 && !
deföed
 
	g__˝lu•lus


144 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

145 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

146 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

147 && (
size_t
Ë(
size
) != 0) \

148 ? ({ *
__±r
 = (*Ë(
±r
); \

149 
FILE
 *
__°ªam
 = (
°ªam
); \

150 
size_t
 
__˙t
; \

151 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

152 
__˙t
 > 0; --__cnt) \

154 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

155 i‡(
__c
 =
EOF
) \

157 *
__±r
++ = 
__c
; \

159 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

160 / (
size_t
Ë(
size
); }) \

161 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

162 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

164 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

165 (Ë(
n
), (
size_t
) 0) \

166 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

168 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

169 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

170 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

171 && (
size_t
Ë(
size
) != 0) \

172 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

173 
FILE
 *
__°ªam
 = (
°ªam
); \

174 
size_t
 
__˙t
; \

175 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

176 
__˙t
 > 0; --__cnt) \

177 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

179 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

180 / (
size_t
Ë(
size
); }) \

181 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

182 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

184 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

185 (Ë(
n
), (
size_t
) 0) \

186 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

190 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

19 #i‚de‡
_STDIO_H


23 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

24 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

25 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

26 c⁄° *
__ª°ri˘
 
__f‹m©
,

27 
_G_va_li°
 
__≠
Ë
__THROW
;

29 #ifde‡
__va_¨g_∑ck


30 
__f‹tify_fun˘i⁄
 

31 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
, ...))

33  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

34 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

35 
	}
}

36 #ñi‡!
deföed
 
__˝lu•lus


37 
	#•rötf
(
°r
, ...) \

38 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

39 
__VA_ARGS__
)

	)

42 
__f‹tify_fun˘i⁄
 

43 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
,

44 
_G_va_li°
 
__≠
))

46  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

47 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

48 
	}
}

50 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


52 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

53 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

54 ...Ë
__THROW
;

55 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

56 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

57 
_G_va_li°
 
__≠
Ë
__THROW
;

59 #ifde‡
__va_¨g_∑ck


60 
__f‹tify_fun˘i⁄
 

61 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

62 c⁄° *
__ª°ri˘
 
__fmt
, ...))

64  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

65 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

66 
	}
}

67 #ñi‡!
deföed
 
__˝lu•lus


68 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

69 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

70 
__VA_ARGS__
)

	)

73 
__f‹tify_fun˘i⁄
 

74 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

75 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

77  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

78 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

79 
	}
}

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

85 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

86 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

87 
__¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

88 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

89 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

90 
__v¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

91 
_G_va_li°
 
__≠
);

93 #ifde‡
__va_¨g_∑ck


94 
__f‹tify_fun˘i⁄
 

95 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° *__ª°ri˘ 
__fmt
, ...)

97  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

98 
	`__va_¨g_∑ck
 ());

99 
	}
}

101 
__f‹tify_fun˘i⁄
 

102 
	$¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, ...)

104  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

105 
	}
}

106 #ñi‡!
deföed
 
__˝lu•lus


107 
	#¥ötf
(...) \

108 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

109 
	#Ârötf
(
°ªam
, ...) \

110 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

113 
__f‹tify_fun˘i⁄
 

114 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

116 #ifde‡
__USE_EXTERN_INLINES


117  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

119  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

121 
	}
}

123 
__f‹tify_fun˘i⁄
 

124 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

125 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

127  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

128 
	}
}

130 #ifde‡
__USE_XOPEN2K8


131 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, c⁄° *
__ª°ri˘
 
__fmt
,

132 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

133 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

134 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

135 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

137 #ifde‡
__va_¨g_∑ck


138 
__f‹tify_fun˘i⁄
 

139 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

141  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

142 
	`__va_¨g_∑ck
 ());

143 
	}
}

144 #ñi‡!
deföed
 
__˝lu•lus


145 
	#d¥ötf
(
fd
, ...) \

146 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

149 
__f‹tify_fun˘i⁄
 

150 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

152  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

153 
	}
}

156 #ifde‡
__USE_GNU


158 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

159 c⁄° *
__ª°ri˘
 
__fmt
, ...)

160 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

161 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

162 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

163 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

164 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

165 
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

167 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

168 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

169 
__Êag
,

170 c⁄° *
__ª°ri˘
 
__f‹m©
,

171 
_G_va_li°
 
__¨gs
)

172 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

174 #ifde‡
__va_¨g_∑ck


175 
__f‹tify_fun˘i⁄
 

176 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
, ...))

178  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

179 
	`__va_¨g_∑ck
 ());

180 
	}
}

182 
__f‹tify_fun˘i⁄
 

183 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

186  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

187 
	`__va_¨g_∑ck
 ());

188 
	}
}

190 
__f‹tify_fun˘i⁄
 

191 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

192 c⁄° *
__ª°ri˘
 
__fmt
, ...))

194  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

195 
	`__va_¨g_∑ck
 ());

196 
	}
}

197 #ñi‡!
deföed
 
__˝lu•lus


198 
	#a•rötf
(
±r
, ...) \

199 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

200 
	#__a•rötf
(
±r
, ...) \

201 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

202 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

203 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

206 
__f‹tify_fun˘i⁄
 

207 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

208 
_G_va_li°
 
__≠
))

210  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

211 
	}
}

213 
__f‹tify_fun˘i⁄
 

214 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

215 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

217  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

218 
__≠
);

219 
	}
}

225 #i‡!
deföed
 
__USE_ISOC11
 \

226 || (
deföed
 
	g__˝lu•lus
 && __˝lu•lu†<201103L && !deföed 
__USE_GNU
)

227 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

228 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

229 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

232 
__f‹tify_fun˘i⁄
 
__wur
 *

233 
	$gës
 (*
__°r
)

235 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

236  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

237  
	`__gës_w¨n
 (
__°r
);

238 
	}
}

241 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

242 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

243 *
	`__REDIRECT
 (
__fgës_Æüs
,

244 (*
__ª°ri˘
 
__s
, 
__n
,

245 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

246 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

247 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

248 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

249 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

252 
__f‹tify_fun˘i⁄
 
__wur
 *

253 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

255 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

257 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

258  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

260 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

261  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

263  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

264 
	}
}

266 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

269 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

270 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

271 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

272 
‰ód
Ë
__wur
;

273 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

274 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

275 
size_t
 
__size
, size_à
__n
,

276 
FILE
 *
__ª°ri˘
 
__°ªam
),

277 
__‰ód_chk
)

278 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

281 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


282 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

283 
FILE
 *
__ª°ri˘
 
__°ªam
)

285 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

287 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

288 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

289 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

290  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

292 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

293  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

295  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

296 
	}
}

298 #ifde‡
__USE_GNU


299 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

300 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

301 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

302 (*
__ª°ri˘
 
__s
, 
__n
,

303 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

304 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

305 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

306 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

307 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

310 
__f‹tify_fun˘i⁄
 
__wur
 *

311 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

313 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

315 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

316  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

318 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

319  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

321  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

322 
	}
}

325 #ifde‡
__USE_MISC


326 #unde‡
‰ód_u∆ocked


327 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

330 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

331 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

332 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

333 
‰ód_u∆ocked
Ë
__wur
;

334 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

335 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

336 
size_t
 
__size
, size_à
__n
,

337 
FILE
 *
__ª°ri˘
 
__°ªam
),

338 
__‰ód_u∆ocked_chk
)

339 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

342 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


343 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

344 
FILE
 *
__ª°ri˘
 
__°ªam
)

346 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

349 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

350 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

351  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

352 
__°ªam
);

354 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

355  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

356 
__°ªam
);

359 #ifde‡
__USE_EXTERN_INLINES


360 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

361 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

362 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

363 && 
__size
 * 
__n
 <= 8)

365 
size_t
 
__˙t
 = 
__size
 * 
__n
;

366 *
__˝å
 = (*Ë
__±r
;

367 i‡(
__˙t
 == 0)

370 ; 
__˙t
 > 0; --__cnt)

372 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

373 i‡(
__c
 =
EOF
)

375 *
__˝å
++ = 
__c
;

377  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

380  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

381 
	}
}

	@/usr/include/bits/stdio_lim.h

18 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


22 #ifde‡
_STDIO_H


23 
	#L_tm≤am
 20

	)

24 
	#TMP_MAX
 238328

	)

25 
	#FILENAME_MAX
 4096

	)

27 #ifde‡
__USE_POSIX


28 
	#L_˘îmid
 9

	)

29 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


30 
	#L_cu£rid
 9

	)

35 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


36 #unde‡
FOPEN_MAX


37 
	#FOPEN_MAX
 16

	)

40 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


41 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-float.h

19 #i‚de‡
_STDLIB_H


23 #ifde‡
__USE_EXTERN_INLINES


24 
__BEGIN_NAMESPACE_STD


25 
__exã∫_ölöe
 

26 
__NTH
 (
	$©of
 (c⁄° *
__≈å
))

28  
	`°πod
 (
__≈å
, (**Ë
NULL
);

29 
	}
}

30 
	g__END_NAMESPACE_STD


	@/usr/include/bits/stdlib-ldbl.h

19 #i‚de‡
_STDLIB_H


23 #ifdef 
__USE_ISOC99


24 
__BEGIN_NAMESPACE_C99


25 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

26 
__END_NAMESPACE_C99


29 #ifde‡
__USE_GNU


30 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

33 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


34 #ifde‡
__USE_MISC


35 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

36 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

39 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

19 #i‚de‡
_STDLIB_H


23 *
	$__ªÆ∑th_chk
 (c⁄° *
__ª°ri˘
 
__«me
,

24 *
__ª°ri˘
 
__ªsﬁved
,

25 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

26 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

27 (c⁄° *
__ª°ri˘
 
__«me
,

28 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

29 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

30 (c⁄° *
__ª°ri˘
 
__«me
,

31 *
__ª°ri˘
 
__ªsﬁved
,

32 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


33 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

36 
__f‹tify_fun˘i⁄
 
__wur
 *

37 
	`__NTH
 (
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

39 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

41 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


42 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

43  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

45  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

48  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

49 
	}
}

52 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

53 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

54 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

55 
size_t
 
__buÊí
), 
±¢ame_r
)

56 
	`__n⁄nuŒ
 ((2));

57 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

58 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

59 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

60 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

63 
__f‹tify_fun˘i⁄
 

64 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

66 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

68 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

69  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

70 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

71  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

73  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

74 
	}
}

77 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

78 
__THROW
 
__wur
;

79 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

80 
w˘omb
Ë
__wur
;

82 
__f‹tify_fun˘i⁄
 
__wur
 

83 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

88 
	#__STDLIB_MB_LEN_MAX
 16

	)

89 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


92 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

93  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

94  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

95 
	}
}

98 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

99 c⁄° *
__ª°ri˘
 
__§c
,

100 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

101 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

102 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

103 c⁄° *
__ª°ri˘
 
__§c
,

104 
size_t
 
__Àn
), 
mb°owcs
);

105 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

106 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

107 c⁄° *
__ª°ri˘
 
__§c
,

108 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

109 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

112 
__f‹tify_fun˘i⁄
 
size_t


113 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° *__ª°ri˘ 
__§c
,

114 
size_t
 
__Àn
))

116 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

118 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

119  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

120 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

122 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

123  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

124 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

126  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

127 
	}
}

130 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

131 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

132 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

133 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

134 (*
__ª°ri˘
 
__d°
,

135 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

136 
size_t
 
__Àn
), 
wc°ombs
);

137 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

138 (*
__ª°ri˘
 
__d°
,

139 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

140 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

141 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

143 
__f‹tify_fun˘i⁄
 
size_t


144 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__§c
,

145 
size_t
 
__Àn
))

147 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

149 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

150  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

151 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

152  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

154  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

155 
	}
}

	@/usr/include/bits/sys_errlist.h

19 #i‚de‡
_STDIO_H


25 #ifde‡ 
__USE_BSD


26 
sys_√º
;

27 c⁄° *c⁄° 
sys_îæi°
[];

29 #ifde‡ 
__USE_GNU


30 
_sys_√º
;

31 c⁄° *c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/syscall.h

3 #i‚de‡
_SYSCALL_H


8 #i‡!
deföed
 
__x86_64__


9 
	#SYS__Œ£ek
 
__NR__Œ£ek


	)

10 
	#SYS__√w£À˘
 
__NR__√w£À˘


	)

11 
	#SYS__sys˘l
 
__NR__sys˘l


	)

12 
	#SYS_ac˚ss
 
__NR_ac˚ss


	)

13 
	#SYS_ac˘
 
__NR_ac˘


	)

14 
	#SYS_add_key
 
__NR_add_key


	)

15 
	#SYS_adjtimex
 
__NR_adjtimex


	)

16 
	#SYS_afs_sysˇŒ
 
__NR_afs_sysˇŒ


	)

17 
	#SYS_Æ¨m
 
__NR_Æ¨m


	)

18 
	#SYS_bdÊush
 
__NR_bdÊush


	)

19 
	#SYS_bªak
 
__NR_bªak


	)

20 
	#SYS_brk
 
__NR_brk


	)

21 
	#SYS_ˇpgë
 
__NR_ˇpgë


	)

22 
	#SYS_ˇp£t
 
__NR_ˇp£t


	)

23 
	#SYS_chdú
 
__NR_chdú


	)

24 
	#SYS_chmod
 
__NR_chmod


	)

25 
	#SYS_chown
 
__NR_chown


	)

26 
	#SYS_chown32
 
__NR_chown32


	)

27 
	#SYS_chroŸ
 
__NR_chroŸ


	)

28 
	#SYS_˛ock_adjtime
 
__NR_˛ock_adjtime


	)

29 
	#SYS_˛ock_gëªs
 
__NR_˛ock_gëªs


	)

30 
	#SYS_˛ock_gëtime
 
__NR_˛ock_gëtime


	)

31 
	#SYS_˛ock_«no¶ìp
 
__NR_˛ock_«no¶ìp


	)

32 
	#SYS_˛ock_£âime
 
__NR_˛ock_£âime


	)

33 
	#SYS_˛⁄e
 
__NR_˛⁄e


	)

34 
	#SYS_˛o£
 
__NR_˛o£


	)

35 
	#SYS_¸ót
 
__NR_¸ót


	)

36 
	#SYS_¸óã_moduÀ
 
__NR_¸óã_moduÀ


	)

37 
	#SYS_dñëe_moduÀ
 
__NR_dñëe_moduÀ


	)

38 
	#SYS_dup
 
__NR_dup


	)

39 
	#SYS_dup2
 
__NR_dup2


	)

40 
	#SYS_dup3
 
__NR_dup3


	)

41 
	#SYS_ïﬁl_¸óã
 
__NR_ïﬁl_¸óã


	)

42 
	#SYS_ïﬁl_¸óã1
 
__NR_ïﬁl_¸óã1


	)

43 
	#SYS_ïﬁl_˘l
 
__NR_ïﬁl_˘l


	)

44 
	#SYS_ïﬁl_pwaô
 
__NR_ïﬁl_pwaô


	)

45 
	#SYS_ïﬁl_waô
 
__NR_ïﬁl_waô


	)

46 
	#SYS_evítfd
 
__NR_evítfd


	)

47 
	#SYS_evítfd2
 
__NR_evítfd2


	)

48 
	#SYS_execve
 
__NR_execve


	)

49 
	#SYS_exô
 
__NR_exô


	)

50 
	#SYS_exô_group
 
__NR_exô_group


	)

51 
	#SYS_Ác˚sßt
 
__NR_Ác˚sßt


	)

52 
	#SYS_Ádvi£64
 
__NR_Ádvi£64


	)

53 
	#SYS_Ádvi£64_64
 
__NR_Ádvi£64_64


	)

54 
	#SYS_ÁŒoˇã
 
__NR_ÁŒoˇã


	)

55 
	#SYS_ÁnŸify_öô
 
__NR_ÁnŸify_öô


	)

56 
	#SYS_ÁnŸify_m¨k
 
__NR_ÁnŸify_m¨k


	)

57 
	#SYS_fchdú
 
__NR_fchdú


	)

58 
	#SYS_fchmod
 
__NR_fchmod


	)

59 
	#SYS_fchmod©
 
__NR_fchmod©


	)

60 
	#SYS_fchown
 
__NR_fchown


	)

61 
	#SYS_fchown32
 
__NR_fchown32


	)

62 
	#SYS_fchow«t
 
__NR_fchow«t


	)

63 
	#SYS_f˙é
 
__NR_f˙é


	)

64 
	#SYS_f˙é64
 
__NR_f˙é64


	)

65 
	#SYS_fd©async
 
__NR_fd©async


	)

66 
	#SYS_fgëx©å
 
__NR_fgëx©å


	)

67 
	#SYS_föô_moduÀ
 
__NR_föô_moduÀ


	)

68 
	#SYS_Êi°x©å
 
__NR_Êi°x©å


	)

69 
	#SYS_Êock
 
__NR_Êock


	)

70 
	#SYS_f‹k
 
__NR_f‹k


	)

71 
	#SYS_‰emovex©å
 
__NR_‰emovex©å


	)

72 
	#SYS_f£tx©å
 
__NR_f£tx©å


	)

73 
	#SYS_f°©
 
__NR_f°©


	)

74 
	#SYS_f°©64
 
__NR_f°©64


	)

75 
	#SYS_f°©©64
 
__NR_f°©©64


	)

76 
	#SYS_f°©fs
 
__NR_f°©fs


	)

77 
	#SYS_f°©fs64
 
__NR_f°©fs64


	)

78 
	#SYS_fsync
 
__NR_fsync


	)

79 
	#SYS_·ime
 
__NR_·ime


	)

80 
	#SYS_·runˇã
 
__NR_·runˇã


	)

81 
	#SYS_·runˇã64
 
__NR_·runˇã64


	)

82 
	#SYS_fuãx
 
__NR_fuãx


	)

83 
	#SYS_futimeßt
 
__NR_futimeßt


	)

84 
	#SYS_gë_kî√l_syms
 
__NR_gë_kî√l_syms


	)

85 
	#SYS_gë_mempﬁicy
 
__NR_gë_mempﬁicy


	)

86 
	#SYS_gë_robu°_li°
 
__NR_gë_robu°_li°


	)

87 
	#SYS_gë_thªad_¨ó
 
__NR_gë_thªad_¨ó


	)

88 
	#SYS_gë˝u
 
__NR_gë˝u


	)

89 
	#SYS_gëcwd
 
__NR_gëcwd


	)

90 
	#SYS_gëdíts
 
__NR_gëdíts


	)

91 
	#SYS_gëdíts64
 
__NR_gëdíts64


	)

92 
	#SYS_gëegid
 
__NR_gëegid


	)

93 
	#SYS_gëegid32
 
__NR_gëegid32


	)

94 
	#SYS_gëeuid
 
__NR_gëeuid


	)

95 
	#SYS_gëeuid32
 
__NR_gëeuid32


	)

96 
	#SYS_gëgid
 
__NR_gëgid


	)

97 
	#SYS_gëgid32
 
__NR_gëgid32


	)

98 
	#SYS_gëgroups
 
__NR_gëgroups


	)

99 
	#SYS_gëgroups32
 
__NR_gëgroups32


	)

100 
	#SYS_gëôimî
 
__NR_gëôimî


	)

101 
	#SYS_gëpgid
 
__NR_gëpgid


	)

102 
	#SYS_gëpgΩ
 
__NR_gëpgΩ


	)

103 
	#SYS_gëpid
 
__NR_gëpid


	)

104 
	#SYS_gëpmsg
 
__NR_gëpmsg


	)

105 
	#SYS_gëµid
 
__NR_gëµid


	)

106 
	#SYS_gë¥i‹ôy
 
__NR_gë¥i‹ôy


	)

107 
	#SYS_gëªsgid
 
__NR_gëªsgid


	)

108 
	#SYS_gëªsgid32
 
__NR_gëªsgid32


	)

109 
	#SYS_gëªsuid
 
__NR_gëªsuid


	)

110 
	#SYS_gëªsuid32
 
__NR_gëªsuid32


	)

111 
	#SYS_gëæimô
 
__NR_gëæimô


	)

112 
	#SYS_gërußge
 
__NR_gërußge


	)

113 
	#SYS_gësid
 
__NR_gësid


	)

114 
	#SYS_gëtid
 
__NR_gëtid


	)

115 
	#SYS_gëtimeofday
 
__NR_gëtimeofday


	)

116 
	#SYS_gëuid
 
__NR_gëuid


	)

117 
	#SYS_gëuid32
 
__NR_gëuid32


	)

118 
	#SYS_gëx©å
 
__NR_gëx©å


	)

119 
	#SYS_gây
 
__NR_gây


	)

120 
	#SYS_idÀ
 
__NR_idÀ


	)

121 
	#SYS_öô_moduÀ
 
__NR_öô_moduÀ


	)

122 
	#SYS_öŸify_add_w©ch
 
__NR_öŸify_add_w©ch


	)

123 
	#SYS_öŸify_öô
 
__NR_öŸify_öô


	)

124 
	#SYS_öŸify_öô1
 
__NR_öŸify_öô1


	)

125 
	#SYS_öŸify_rm_w©ch
 
__NR_öŸify_rm_w©ch


	)

126 
	#SYS_io_ˇn˚l
 
__NR_io_ˇn˚l


	)

127 
	#SYS_io_de°roy
 
__NR_io_de°roy


	)

128 
	#SYS_io_gëevíts
 
__NR_io_gëevíts


	)

129 
	#SYS_io_£tup
 
__NR_io_£tup


	)

130 
	#SYS_io_submô
 
__NR_io_submô


	)

131 
	#SYS_io˘l
 
__NR_io˘l


	)

132 
	#SYS_i›îm
 
__NR_i›îm


	)

133 
	#SYS_i›l
 
__NR_i›l


	)

134 
	#SYS_i›rio_gë
 
__NR_i›rio_gë


	)

135 
	#SYS_i›rio_£t
 
__NR_i›rio_£t


	)

136 
	#SYS_ùc
 
__NR_ùc


	)

137 
	#SYS_kcmp
 
__NR_kcmp


	)

138 
	#SYS_kexec_lﬂd
 
__NR_kexec_lﬂd


	)

139 
	#SYS_key˘l
 
__NR_key˘l


	)

140 
	#SYS_kûl
 
__NR_kûl


	)

141 
	#SYS_lchown
 
__NR_lchown


	)

142 
	#SYS_lchown32
 
__NR_lchown32


	)

143 
	#SYS_lgëx©å
 
__NR_lgëx©å


	)

144 
	#SYS_lök
 
__NR_lök


	)

145 
	#SYS_lök©
 
__NR_lök©


	)

146 
	#SYS_li°x©å
 
__NR_li°x©å


	)

147 
	#SYS_Œi°x©å
 
__NR_Œi°x©å


	)

148 
	#SYS_lock
 
__NR_lock


	)

149 
	#SYS_lookup_dcookõ
 
__NR_lookup_dcookõ


	)

150 
	#SYS_Ãemovex©å
 
__NR_Ãemovex©å


	)

151 
	#SYS_l£ek
 
__NR_l£ek


	)

152 
	#SYS_l£tx©å
 
__NR_l£tx©å


	)

153 
	#SYS_l°©
 
__NR_l°©


	)

154 
	#SYS_l°©64
 
__NR_l°©64


	)

155 
	#SYS_madvi£
 
__NR_madvi£


	)

156 
	#SYS_mböd
 
__NR_mböd


	)

157 
	#SYS_migøã_∑ges
 
__NR_migøã_∑ges


	)

158 
	#SYS_möc‹e
 
__NR_möc‹e


	)

159 
	#SYS_mkdú
 
__NR_mkdú


	)

160 
	#SYS_mkdú©
 
__NR_mkdú©


	)

161 
	#SYS_mknod
 
__NR_mknod


	)

162 
	#SYS_mknod©
 
__NR_mknod©


	)

163 
	#SYS_mlock
 
__NR_mlock


	)

164 
	#SYS_mlockÆl
 
__NR_mlockÆl


	)

165 
	#SYS_mm≠
 
__NR_mm≠


	)

166 
	#SYS_mm≠2
 
__NR_mm≠2


	)

167 
	#SYS_modify_ldt
 
__NR_modify_ldt


	)

168 
	#SYS_mou¡
 
__NR_mou¡


	)

169 
	#SYS_move_∑ges
 
__NR_move_∑ges


	)

170 
	#SYS_m¥Ÿe˘
 
__NR_m¥Ÿe˘


	)

171 
	#SYS_mpx
 
__NR_mpx


	)

172 
	#SYS_mq_gë£èâr
 
__NR_mq_gë£èâr


	)

173 
	#SYS_mq_nŸify
 
__NR_mq_nŸify


	)

174 
	#SYS_mq_›í
 
__NR_mq_›í


	)

175 
	#SYS_mq_timedª˚ive
 
__NR_mq_timedª˚ive


	)

176 
	#SYS_mq_timed£nd
 
__NR_mq_timed£nd


	)

177 
	#SYS_mq_u∆ök
 
__NR_mq_u∆ök


	)

178 
	#SYS_mªm≠
 
__NR_mªm≠


	)

179 
	#SYS_msync
 
__NR_msync


	)

180 
	#SYS_mu∆ock
 
__NR_mu∆ock


	)

181 
	#SYS_mu∆ockÆl
 
__NR_mu∆ockÆl


	)

182 
	#SYS_munm≠
 
__NR_munm≠


	)

183 
	#SYS_«me_to_h™dÀ_©
 
__NR_«me_to_h™dÀ_©


	)

184 
	#SYS_«no¶ìp
 
__NR_«no¶ìp


	)

185 
	#SYS_nfs£rv˘l
 
__NR_nfs£rv˘l


	)

186 
	#SYS_ni˚
 
__NR_ni˚


	)

187 
	#SYS_ﬁdf°©
 
__NR_ﬁdf°©


	)

188 
	#SYS_ﬁdl°©
 
__NR_ﬁdl°©


	)

189 
	#SYS_ﬁdﬁdu«me
 
__NR_ﬁdﬁdu«me


	)

190 
	#SYS_ﬁd°©
 
__NR_ﬁd°©


	)

191 
	#SYS_ﬁdu«me
 
__NR_ﬁdu«me


	)

192 
	#SYS_›í
 
__NR_›í


	)

193 
	#SYS_›í_by_h™dÀ_©
 
__NR_›í_by_h™dÀ_©


	)

194 
	#SYS_›í©
 
__NR_›í©


	)

195 
	#SYS_∑u£
 
__NR_∑u£


	)

196 
	#SYS_≥rf_evít_›í
 
__NR_≥rf_evít_›í


	)

197 
	#SYS_≥rs⁄Æôy
 
__NR_≥rs⁄Æôy


	)

198 
	#SYS_pùe
 
__NR_pùe


	)

199 
	#SYS_pùe2
 
__NR_pùe2


	)

200 
	#SYS_pivŸ_roŸ
 
__NR_pivŸ_roŸ


	)

201 
	#SYS_pﬁl
 
__NR_pﬁl


	)

202 
	#SYS_µﬁl
 
__NR_µﬁl


	)

203 
	#SYS_¥˘l
 
__NR_¥˘l


	)

204 
	#SYS_¥ód64
 
__NR_¥ód64


	)

205 
	#SYS_¥ódv
 
__NR_¥ódv


	)

206 
	#SYS_¥limô64
 
__NR_¥limô64


	)

207 
	#SYS_¥o˚ss_vm_ªadv
 
__NR_¥o˚ss_vm_ªadv


	)

208 
	#SYS_¥o˚ss_vm_wrôev
 
__NR_¥o˚ss_vm_wrôev


	)

209 
	#SYS_¥of
 
__NR_¥of


	)

210 
	#SYS_¥ofû
 
__NR_¥ofû


	)

211 
	#SYS_p£À˘6
 
__NR_p£À˘6


	)

212 
	#SYS_±ø˚
 
__NR_±ø˚


	)

213 
	#SYS_puçmsg
 
__NR_puçmsg


	)

214 
	#SYS_pwrôe64
 
__NR_pwrôe64


	)

215 
	#SYS_pwrôev
 
__NR_pwrôev


	)

216 
	#SYS_quîy_moduÀ
 
__NR_quîy_moduÀ


	)

217 
	#SYS_quŸa˘l
 
__NR_quŸa˘l


	)

218 
	#SYS_ªad
 
__NR_ªad


	)

219 
	#SYS_ªadahód
 
__NR_ªadahód


	)

220 
	#SYS_ªaddú
 
__NR_ªaddú


	)

221 
	#SYS_ªadlök
 
__NR_ªadlök


	)

222 
	#SYS_ªadlök©
 
__NR_ªadlök©


	)

223 
	#SYS_ªadv
 
__NR_ªadv


	)

224 
	#SYS_ªboŸ
 
__NR_ªboŸ


	)

225 
	#SYS_ªcvmmsg
 
__NR_ªcvmmsg


	)

226 
	#SYS_ªm≠_fûe_∑ges
 
__NR_ªm≠_fûe_∑ges


	)

227 
	#SYS_ªmovex©å
 
__NR_ªmovex©å


	)

228 
	#SYS_ª«me
 
__NR_ª«me


	)

229 
	#SYS_ª«mót
 
__NR_ª«mót


	)

230 
	#SYS_ªque°_key
 
__NR_ªque°_key


	)

231 
	#SYS_ª°¨t_sysˇŒ
 
__NR_ª°¨t_sysˇŒ


	)

232 
	#SYS_rmdú
 
__NR_rmdú


	)

233 
	#SYS_π_siga˘i⁄
 
__NR_π_siga˘i⁄


	)

234 
	#SYS_π_sig≥ndög
 
__NR_π_sig≥ndög


	)

235 
	#SYS_π_sig¥ocmask
 
__NR_π_sig¥ocmask


	)

236 
	#SYS_π_sigqueueöfo
 
__NR_π_sigqueueöfo


	)

237 
	#SYS_π_sigªtu∫
 
__NR_π_sigªtu∫


	)

238 
	#SYS_π_sigsu•íd
 
__NR_π_sigsu•íd


	)

239 
	#SYS_π_sigtimedwaô
 
__NR_π_sigtimedwaô


	)

240 
	#SYS_π_tgsigqueueöfo
 
__NR_π_tgsigqueueöfo


	)

241 
	#SYS_sched_gë_¥i‹ôy_max
 
__NR_sched_gë_¥i‹ôy_max


	)

242 
	#SYS_sched_gë_¥i‹ôy_mö
 
__NR_sched_gë_¥i‹ôy_mö


	)

243 
	#SYS_sched_gëafföôy
 
__NR_sched_gëafföôy


	)

244 
	#SYS_sched_gë∑øm
 
__NR_sched_gë∑øm


	)

245 
	#SYS_sched_gëscheduÀr
 
__NR_sched_gëscheduÀr


	)

246 
	#SYS_sched_º_gë_öãrvÆ
 
__NR_sched_º_gë_öãrvÆ


	)

247 
	#SYS_sched_£èfföôy
 
__NR_sched_£èfföôy


	)

248 
	#SYS_sched_£ç¨am
 
__NR_sched_£ç¨am


	)

249 
	#SYS_sched_£tscheduÀr
 
__NR_sched_£tscheduÀr


	)

250 
	#SYS_sched_yõld
 
__NR_sched_yõld


	)

251 
	#SYS_£À˘
 
__NR_£À˘


	)

252 
	#SYS_£ndfûe
 
__NR_£ndfûe


	)

253 
	#SYS_£ndfûe64
 
__NR_£ndfûe64


	)

254 
	#SYS_£ndmmsg
 
__NR_£ndmmsg


	)

255 
	#SYS_£t_mempﬁicy
 
__NR_£t_mempﬁicy


	)

256 
	#SYS_£t_robu°_li°
 
__NR_£t_robu°_li°


	)

257 
	#SYS_£t_thªad_¨ó
 
__NR_£t_thªad_¨ó


	)

258 
	#SYS_£t_tid_addªss
 
__NR_£t_tid_addªss


	)

259 
	#SYS_£tdomaö«me
 
__NR_£tdomaö«me


	)

260 
	#SYS_£tfsgid
 
__NR_£tfsgid


	)

261 
	#SYS_£tfsgid32
 
__NR_£tfsgid32


	)

262 
	#SYS_£tfsuid
 
__NR_£tfsuid


	)

263 
	#SYS_£tfsuid32
 
__NR_£tfsuid32


	)

264 
	#SYS_£tgid
 
__NR_£tgid


	)

265 
	#SYS_£tgid32
 
__NR_£tgid32


	)

266 
	#SYS_£tgroups
 
__NR_£tgroups


	)

267 
	#SYS_£tgroups32
 
__NR_£tgroups32


	)

268 
	#SYS_£tho°«me
 
__NR_£tho°«me


	)

269 
	#SYS_£tôimî
 
__NR_£tôimî


	)

270 
	#SYS_£äs
 
__NR_£äs


	)

271 
	#SYS_£çgid
 
__NR_£çgid


	)

272 
	#SYS_£çri‹ôy
 
__NR_£çri‹ôy


	)

273 
	#SYS_£åegid
 
__NR_£åegid


	)

274 
	#SYS_£åegid32
 
__NR_£åegid32


	)

275 
	#SYS_£åesgid
 
__NR_£åesgid


	)

276 
	#SYS_£åesgid32
 
__NR_£åesgid32


	)

277 
	#SYS_£åesuid
 
__NR_£åesuid


	)

278 
	#SYS_£åesuid32
 
__NR_£åesuid32


	)

279 
	#SYS_£åeuid
 
__NR_£åeuid


	)

280 
	#SYS_£åeuid32
 
__NR_£åeuid32


	)

281 
	#SYS_£ålimô
 
__NR_£ålimô


	)

282 
	#SYS_£tsid
 
__NR_£tsid


	)

283 
	#SYS_£âimeofday
 
__NR_£âimeofday


	)

284 
	#SYS_£tuid
 
__NR_£tuid


	)

285 
	#SYS_£tuid32
 
__NR_£tuid32


	)

286 
	#SYS_£tx©å
 
__NR_£tx©å


	)

287 
	#SYS_sgëmask
 
__NR_sgëmask


	)

288 
	#SYS_siga˘i⁄
 
__NR_siga˘i⁄


	)

289 
	#SYS_sigÆt°ack
 
__NR_sigÆt°ack


	)

290 
	#SYS_sig«l
 
__NR_sig«l


	)

291 
	#SYS_sig«lfd
 
__NR_sig«lfd


	)

292 
	#SYS_sig«lfd4
 
__NR_sig«lfd4


	)

293 
	#SYS_sig≥ndög
 
__NR_sig≥ndög


	)

294 
	#SYS_sig¥ocmask
 
__NR_sig¥ocmask


	)

295 
	#SYS_sigªtu∫
 
__NR_sigªtu∫


	)

296 
	#SYS_sigsu•íd
 
__NR_sigsu•íd


	)

297 
	#SYS_sockëˇŒ
 
__NR_sockëˇŒ


	)

298 
	#SYS_•li˚
 
__NR_•li˚


	)

299 
	#SYS_s£tmask
 
__NR_s£tmask


	)

300 
	#SYS_°©
 
__NR_°©


	)

301 
	#SYS_°©64
 
__NR_°©64


	)

302 
	#SYS_°©fs
 
__NR_°©fs


	)

303 
	#SYS_°©fs64
 
__NR_°©fs64


	)

304 
	#SYS_°ime
 
__NR_°ime


	)

305 
	#SYS_°ty
 
__NR_°ty


	)

306 
	#SYS_sw≠off
 
__NR_sw≠off


	)

307 
	#SYS_sw≠⁄
 
__NR_sw≠⁄


	)

308 
	#SYS_symlök
 
__NR_symlök


	)

309 
	#SYS_symlök©
 
__NR_symlök©


	)

310 
	#SYS_sync
 
__NR_sync


	)

311 
	#SYS_sync_fûe_ønge
 
__NR_sync_fûe_ønge


	)

312 
	#SYS_syncfs
 
__NR_syncfs


	)

313 
	#SYS_sysfs
 
__NR_sysfs


	)

314 
	#SYS_sysöfo
 
__NR_sysöfo


	)

315 
	#SYS_sy¶og
 
__NR_sy¶og


	)

316 
	#SYS_ãe
 
__NR_ãe


	)

317 
	#SYS_tgkûl
 
__NR_tgkûl


	)

318 
	#SYS_time
 
__NR_time


	)

319 
	#SYS_timî_¸óã
 
__NR_timî_¸óã


	)

320 
	#SYS_timî_dñëe
 
__NR_timî_dñëe


	)

321 
	#SYS_timî_gëovîrun
 
__NR_timî_gëovîrun


	)

322 
	#SYS_timî_gëtime
 
__NR_timî_gëtime


	)

323 
	#SYS_timî_£âime
 
__NR_timî_£âime


	)

324 
	#SYS_timîfd_¸óã
 
__NR_timîfd_¸óã


	)

325 
	#SYS_timîfd_gëtime
 
__NR_timîfd_gëtime


	)

326 
	#SYS_timîfd_£âime
 
__NR_timîfd_£âime


	)

327 
	#SYS_times
 
__NR_times


	)

328 
	#SYS_tkûl
 
__NR_tkûl


	)

329 
	#SYS_åunˇã
 
__NR_åunˇã


	)

330 
	#SYS_åunˇã64
 
__NR_åunˇã64


	)

331 
	#SYS_ugëæimô
 
__NR_ugëæimô


	)

332 
	#SYS_ulimô
 
__NR_ulimô


	)

333 
	#SYS_umask
 
__NR_umask


	)

334 
	#SYS_umou¡
 
__NR_umou¡


	)

335 
	#SYS_umou¡2
 
__NR_umou¡2


	)

336 
	#SYS_u«me
 
__NR_u«me


	)

337 
	#SYS_u∆ök
 
__NR_u∆ök


	)

338 
	#SYS_u∆ök©
 
__NR_u∆ök©


	)

339 
	#SYS_unsh¨e
 
__NR_unsh¨e


	)

340 
	#SYS_u£lib
 
__NR_u£lib


	)

341 
	#SYS_u°©
 
__NR_u°©


	)

342 
	#SYS_utime
 
__NR_utime


	)

343 
	#SYS_utimíßt
 
__NR_utimíßt


	)

344 
	#SYS_utimes
 
__NR_utimes


	)

345 
	#SYS_vf‹k
 
__NR_vf‹k


	)

346 
	#SYS_vh™gup
 
__NR_vh™gup


	)

347 
	#SYS_vm86
 
__NR_vm86


	)

348 
	#SYS_vm86ﬁd
 
__NR_vm86ﬁd


	)

349 
	#SYS_vm•li˚
 
__NR_vm•li˚


	)

350 
	#SYS_v£rvî
 
__NR_v£rvî


	)

351 
	#SYS_waô4
 
__NR_waô4


	)

352 
	#SYS_waôid
 
__NR_waôid


	)

353 
	#SYS_waôpid
 
__NR_waôpid


	)

354 
	#SYS_wrôe
 
__NR_wrôe


	)

355 
	#SYS_wrôev
 
__NR_wrôev


	)

357 #i‡
deföed
 
__x86_64__
 && deföed 
__LP64__


358 
	#SYS__sys˘l
 
__NR__sys˘l


	)

359 
	#SYS_ac˚±
 
__NR_ac˚±


	)

360 
	#SYS_ac˚±4
 
__NR_ac˚±4


	)

361 
	#SYS_ac˚ss
 
__NR_ac˚ss


	)

362 
	#SYS_ac˘
 
__NR_ac˘


	)

363 
	#SYS_add_key
 
__NR_add_key


	)

364 
	#SYS_adjtimex
 
__NR_adjtimex


	)

365 
	#SYS_afs_sysˇŒ
 
__NR_afs_sysˇŒ


	)

366 
	#SYS_Æ¨m
 
__NR_Æ¨m


	)

367 
	#SYS_¨ch_¥˘l
 
__NR_¨ch_¥˘l


	)

368 
	#SYS_böd
 
__NR_böd


	)

369 
	#SYS_brk
 
__NR_brk


	)

370 
	#SYS_ˇpgë
 
__NR_ˇpgë


	)

371 
	#SYS_ˇp£t
 
__NR_ˇp£t


	)

372 
	#SYS_chdú
 
__NR_chdú


	)

373 
	#SYS_chmod
 
__NR_chmod


	)

374 
	#SYS_chown
 
__NR_chown


	)

375 
	#SYS_chroŸ
 
__NR_chroŸ


	)

376 
	#SYS_˛ock_adjtime
 
__NR_˛ock_adjtime


	)

377 
	#SYS_˛ock_gëªs
 
__NR_˛ock_gëªs


	)

378 
	#SYS_˛ock_gëtime
 
__NR_˛ock_gëtime


	)

379 
	#SYS_˛ock_«no¶ìp
 
__NR_˛ock_«no¶ìp


	)

380 
	#SYS_˛ock_£âime
 
__NR_˛ock_£âime


	)

381 
	#SYS_˛⁄e
 
__NR_˛⁄e


	)

382 
	#SYS_˛o£
 
__NR_˛o£


	)

383 
	#SYS_c⁄√˘
 
__NR_c⁄√˘


	)

384 
	#SYS_¸ót
 
__NR_¸ót


	)

385 
	#SYS_¸óã_moduÀ
 
__NR_¸óã_moduÀ


	)

386 
	#SYS_dñëe_moduÀ
 
__NR_dñëe_moduÀ


	)

387 
	#SYS_dup
 
__NR_dup


	)

388 
	#SYS_dup2
 
__NR_dup2


	)

389 
	#SYS_dup3
 
__NR_dup3


	)

390 
	#SYS_ïﬁl_¸óã
 
__NR_ïﬁl_¸óã


	)

391 
	#SYS_ïﬁl_¸óã1
 
__NR_ïﬁl_¸óã1


	)

392 
	#SYS_ïﬁl_˘l
 
__NR_ïﬁl_˘l


	)

393 
	#SYS_ïﬁl_˘l_ﬁd
 
__NR_ïﬁl_˘l_ﬁd


	)

394 
	#SYS_ïﬁl_pwaô
 
__NR_ïﬁl_pwaô


	)

395 
	#SYS_ïﬁl_waô
 
__NR_ïﬁl_waô


	)

396 
	#SYS_ïﬁl_waô_ﬁd
 
__NR_ïﬁl_waô_ﬁd


	)

397 
	#SYS_evítfd
 
__NR_evítfd


	)

398 
	#SYS_evítfd2
 
__NR_evítfd2


	)

399 
	#SYS_execve
 
__NR_execve


	)

400 
	#SYS_exô
 
__NR_exô


	)

401 
	#SYS_exô_group
 
__NR_exô_group


	)

402 
	#SYS_Ác˚sßt
 
__NR_Ác˚sßt


	)

403 
	#SYS_Ádvi£64
 
__NR_Ádvi£64


	)

404 
	#SYS_ÁŒoˇã
 
__NR_ÁŒoˇã


	)

405 
	#SYS_ÁnŸify_öô
 
__NR_ÁnŸify_öô


	)

406 
	#SYS_ÁnŸify_m¨k
 
__NR_ÁnŸify_m¨k


	)

407 
	#SYS_fchdú
 
__NR_fchdú


	)

408 
	#SYS_fchmod
 
__NR_fchmod


	)

409 
	#SYS_fchmod©
 
__NR_fchmod©


	)

410 
	#SYS_fchown
 
__NR_fchown


	)

411 
	#SYS_fchow«t
 
__NR_fchow«t


	)

412 
	#SYS_f˙é
 
__NR_f˙é


	)

413 
	#SYS_fd©async
 
__NR_fd©async


	)

414 
	#SYS_fgëx©å
 
__NR_fgëx©å


	)

415 
	#SYS_föô_moduÀ
 
__NR_föô_moduÀ


	)

416 
	#SYS_Êi°x©å
 
__NR_Êi°x©å


	)

417 
	#SYS_Êock
 
__NR_Êock


	)

418 
	#SYS_f‹k
 
__NR_f‹k


	)

419 
	#SYS_‰emovex©å
 
__NR_‰emovex©å


	)

420 
	#SYS_f£tx©å
 
__NR_f£tx©å


	)

421 
	#SYS_f°©
 
__NR_f°©


	)

422 
	#SYS_f°©fs
 
__NR_f°©fs


	)

423 
	#SYS_fsync
 
__NR_fsync


	)

424 
	#SYS_·runˇã
 
__NR_·runˇã


	)

425 
	#SYS_fuãx
 
__NR_fuãx


	)

426 
	#SYS_futimeßt
 
__NR_futimeßt


	)

427 
	#SYS_gë_kî√l_syms
 
__NR_gë_kî√l_syms


	)

428 
	#SYS_gë_mempﬁicy
 
__NR_gë_mempﬁicy


	)

429 
	#SYS_gë_robu°_li°
 
__NR_gë_robu°_li°


	)

430 
	#SYS_gë_thªad_¨ó
 
__NR_gë_thªad_¨ó


	)

431 
	#SYS_gë˝u
 
__NR_gë˝u


	)

432 
	#SYS_gëcwd
 
__NR_gëcwd


	)

433 
	#SYS_gëdíts
 
__NR_gëdíts


	)

434 
	#SYS_gëdíts64
 
__NR_gëdíts64


	)

435 
	#SYS_gëegid
 
__NR_gëegid


	)

436 
	#SYS_gëeuid
 
__NR_gëeuid


	)

437 
	#SYS_gëgid
 
__NR_gëgid


	)

438 
	#SYS_gëgroups
 
__NR_gëgroups


	)

439 
	#SYS_gëôimî
 
__NR_gëôimî


	)

440 
	#SYS_gë≥î«me
 
__NR_gë≥î«me


	)

441 
	#SYS_gëpgid
 
__NR_gëpgid


	)

442 
	#SYS_gëpgΩ
 
__NR_gëpgΩ


	)

443 
	#SYS_gëpid
 
__NR_gëpid


	)

444 
	#SYS_gëpmsg
 
__NR_gëpmsg


	)

445 
	#SYS_gëµid
 
__NR_gëµid


	)

446 
	#SYS_gë¥i‹ôy
 
__NR_gë¥i‹ôy


	)

447 
	#SYS_gëªsgid
 
__NR_gëªsgid


	)

448 
	#SYS_gëªsuid
 
__NR_gëªsuid


	)

449 
	#SYS_gëæimô
 
__NR_gëæimô


	)

450 
	#SYS_gërußge
 
__NR_gërußge


	)

451 
	#SYS_gësid
 
__NR_gësid


	)

452 
	#SYS_gësock«me
 
__NR_gësock«me


	)

453 
	#SYS_gësock›t
 
__NR_gësock›t


	)

454 
	#SYS_gëtid
 
__NR_gëtid


	)

455 
	#SYS_gëtimeofday
 
__NR_gëtimeofday


	)

456 
	#SYS_gëuid
 
__NR_gëuid


	)

457 
	#SYS_gëx©å
 
__NR_gëx©å


	)

458 
	#SYS_öô_moduÀ
 
__NR_öô_moduÀ


	)

459 
	#SYS_öŸify_add_w©ch
 
__NR_öŸify_add_w©ch


	)

460 
	#SYS_öŸify_öô
 
__NR_öŸify_öô


	)

461 
	#SYS_öŸify_öô1
 
__NR_öŸify_öô1


	)

462 
	#SYS_öŸify_rm_w©ch
 
__NR_öŸify_rm_w©ch


	)

463 
	#SYS_io_ˇn˚l
 
__NR_io_ˇn˚l


	)

464 
	#SYS_io_de°roy
 
__NR_io_de°roy


	)

465 
	#SYS_io_gëevíts
 
__NR_io_gëevíts


	)

466 
	#SYS_io_£tup
 
__NR_io_£tup


	)

467 
	#SYS_io_submô
 
__NR_io_submô


	)

468 
	#SYS_io˘l
 
__NR_io˘l


	)

469 
	#SYS_i›îm
 
__NR_i›îm


	)

470 
	#SYS_i›l
 
__NR_i›l


	)

471 
	#SYS_i›rio_gë
 
__NR_i›rio_gë


	)

472 
	#SYS_i›rio_£t
 
__NR_i›rio_£t


	)

473 
	#SYS_kcmp
 
__NR_kcmp


	)

474 
	#SYS_kexec_lﬂd
 
__NR_kexec_lﬂd


	)

475 
	#SYS_key˘l
 
__NR_key˘l


	)

476 
	#SYS_kûl
 
__NR_kûl


	)

477 
	#SYS_lchown
 
__NR_lchown


	)

478 
	#SYS_lgëx©å
 
__NR_lgëx©å


	)

479 
	#SYS_lök
 
__NR_lök


	)

480 
	#SYS_lök©
 
__NR_lök©


	)

481 
	#SYS_li°í
 
__NR_li°í


	)

482 
	#SYS_li°x©å
 
__NR_li°x©å


	)

483 
	#SYS_Œi°x©å
 
__NR_Œi°x©å


	)

484 
	#SYS_lookup_dcookõ
 
__NR_lookup_dcookõ


	)

485 
	#SYS_Ãemovex©å
 
__NR_Ãemovex©å


	)

486 
	#SYS_l£ek
 
__NR_l£ek


	)

487 
	#SYS_l£tx©å
 
__NR_l£tx©å


	)

488 
	#SYS_l°©
 
__NR_l°©


	)

489 
	#SYS_madvi£
 
__NR_madvi£


	)

490 
	#SYS_mböd
 
__NR_mböd


	)

491 
	#SYS_migøã_∑ges
 
__NR_migøã_∑ges


	)

492 
	#SYS_möc‹e
 
__NR_möc‹e


	)

493 
	#SYS_mkdú
 
__NR_mkdú


	)

494 
	#SYS_mkdú©
 
__NR_mkdú©


	)

495 
	#SYS_mknod
 
__NR_mknod


	)

496 
	#SYS_mknod©
 
__NR_mknod©


	)

497 
	#SYS_mlock
 
__NR_mlock


	)

498 
	#SYS_mlockÆl
 
__NR_mlockÆl


	)

499 
	#SYS_mm≠
 
__NR_mm≠


	)

500 
	#SYS_modify_ldt
 
__NR_modify_ldt


	)

501 
	#SYS_mou¡
 
__NR_mou¡


	)

502 
	#SYS_move_∑ges
 
__NR_move_∑ges


	)

503 
	#SYS_m¥Ÿe˘
 
__NR_m¥Ÿe˘


	)

504 
	#SYS_mq_gë£èâr
 
__NR_mq_gë£èâr


	)

505 
	#SYS_mq_nŸify
 
__NR_mq_nŸify


	)

506 
	#SYS_mq_›í
 
__NR_mq_›í


	)

507 
	#SYS_mq_timedª˚ive
 
__NR_mq_timedª˚ive


	)

508 
	#SYS_mq_timed£nd
 
__NR_mq_timed£nd


	)

509 
	#SYS_mq_u∆ök
 
__NR_mq_u∆ök


	)

510 
	#SYS_mªm≠
 
__NR_mªm≠


	)

511 
	#SYS_msg˘l
 
__NR_msg˘l


	)

512 
	#SYS_msggë
 
__NR_msggë


	)

513 
	#SYS_msgrcv
 
__NR_msgrcv


	)

514 
	#SYS_msg¢d
 
__NR_msg¢d


	)

515 
	#SYS_msync
 
__NR_msync


	)

516 
	#SYS_mu∆ock
 
__NR_mu∆ock


	)

517 
	#SYS_mu∆ockÆl
 
__NR_mu∆ockÆl


	)

518 
	#SYS_munm≠
 
__NR_munm≠


	)

519 
	#SYS_«me_to_h™dÀ_©
 
__NR_«me_to_h™dÀ_©


	)

520 
	#SYS_«no¶ìp
 
__NR_«no¶ìp


	)

521 
	#SYS_√wf°©©
 
__NR_√wf°©©


	)

522 
	#SYS_nfs£rv˘l
 
__NR_nfs£rv˘l


	)

523 
	#SYS_›í
 
__NR_›í


	)

524 
	#SYS_›í_by_h™dÀ_©
 
__NR_›í_by_h™dÀ_©


	)

525 
	#SYS_›í©
 
__NR_›í©


	)

526 
	#SYS_∑u£
 
__NR_∑u£


	)

527 
	#SYS_≥rf_evít_›í
 
__NR_≥rf_evít_›í


	)

528 
	#SYS_≥rs⁄Æôy
 
__NR_≥rs⁄Æôy


	)

529 
	#SYS_pùe
 
__NR_pùe


	)

530 
	#SYS_pùe2
 
__NR_pùe2


	)

531 
	#SYS_pivŸ_roŸ
 
__NR_pivŸ_roŸ


	)

532 
	#SYS_pﬁl
 
__NR_pﬁl


	)

533 
	#SYS_µﬁl
 
__NR_µﬁl


	)

534 
	#SYS_¥˘l
 
__NR_¥˘l


	)

535 
	#SYS_¥ód64
 
__NR_¥ód64


	)

536 
	#SYS_¥ódv
 
__NR_¥ódv


	)

537 
	#SYS_¥limô64
 
__NR_¥limô64


	)

538 
	#SYS_¥o˚ss_vm_ªadv
 
__NR_¥o˚ss_vm_ªadv


	)

539 
	#SYS_¥o˚ss_vm_wrôev
 
__NR_¥o˚ss_vm_wrôev


	)

540 
	#SYS_p£À˘6
 
__NR_p£À˘6


	)

541 
	#SYS_±ø˚
 
__NR_±ø˚


	)

542 
	#SYS_puçmsg
 
__NR_puçmsg


	)

543 
	#SYS_pwrôe64
 
__NR_pwrôe64


	)

544 
	#SYS_pwrôev
 
__NR_pwrôev


	)

545 
	#SYS_quîy_moduÀ
 
__NR_quîy_moduÀ


	)

546 
	#SYS_quŸa˘l
 
__NR_quŸa˘l


	)

547 
	#SYS_ªad
 
__NR_ªad


	)

548 
	#SYS_ªadahód
 
__NR_ªadahód


	)

549 
	#SYS_ªadlök
 
__NR_ªadlök


	)

550 
	#SYS_ªadlök©
 
__NR_ªadlök©


	)

551 
	#SYS_ªadv
 
__NR_ªadv


	)

552 
	#SYS_ªboŸ
 
__NR_ªboŸ


	)

553 
	#SYS_ªcv‰om
 
__NR_ªcv‰om


	)

554 
	#SYS_ªcvmmsg
 
__NR_ªcvmmsg


	)

555 
	#SYS_ªcvmsg
 
__NR_ªcvmsg


	)

556 
	#SYS_ªm≠_fûe_∑ges
 
__NR_ªm≠_fûe_∑ges


	)

557 
	#SYS_ªmovex©å
 
__NR_ªmovex©å


	)

558 
	#SYS_ª«me
 
__NR_ª«me


	)

559 
	#SYS_ª«mót
 
__NR_ª«mót


	)

560 
	#SYS_ªque°_key
 
__NR_ªque°_key


	)

561 
	#SYS_ª°¨t_sysˇŒ
 
__NR_ª°¨t_sysˇŒ


	)

562 
	#SYS_rmdú
 
__NR_rmdú


	)

563 
	#SYS_π_siga˘i⁄
 
__NR_π_siga˘i⁄


	)

564 
	#SYS_π_sig≥ndög
 
__NR_π_sig≥ndög


	)

565 
	#SYS_π_sig¥ocmask
 
__NR_π_sig¥ocmask


	)

566 
	#SYS_π_sigqueueöfo
 
__NR_π_sigqueueöfo


	)

567 
	#SYS_π_sigªtu∫
 
__NR_π_sigªtu∫


	)

568 
	#SYS_π_sigsu•íd
 
__NR_π_sigsu•íd


	)

569 
	#SYS_π_sigtimedwaô
 
__NR_π_sigtimedwaô


	)

570 
	#SYS_π_tgsigqueueöfo
 
__NR_π_tgsigqueueöfo


	)

571 
	#SYS_sched_gë_¥i‹ôy_max
 
__NR_sched_gë_¥i‹ôy_max


	)

572 
	#SYS_sched_gë_¥i‹ôy_mö
 
__NR_sched_gë_¥i‹ôy_mö


	)

573 
	#SYS_sched_gëafföôy
 
__NR_sched_gëafföôy


	)

574 
	#SYS_sched_gë∑øm
 
__NR_sched_gë∑øm


	)

575 
	#SYS_sched_gëscheduÀr
 
__NR_sched_gëscheduÀr


	)

576 
	#SYS_sched_º_gë_öãrvÆ
 
__NR_sched_º_gë_öãrvÆ


	)

577 
	#SYS_sched_£èfföôy
 
__NR_sched_£èfföôy


	)

578 
	#SYS_sched_£ç¨am
 
__NR_sched_£ç¨am


	)

579 
	#SYS_sched_£tscheduÀr
 
__NR_sched_£tscheduÀr


	)

580 
	#SYS_sched_yõld
 
__NR_sched_yõld


	)

581 
	#SYS_£curôy
 
__NR_£curôy


	)

582 
	#SYS_£À˘
 
__NR_£À˘


	)

583 
	#SYS_£m˘l
 
__NR_£m˘l


	)

584 
	#SYS_£mgë
 
__NR_£mgë


	)

585 
	#SYS_£m›
 
__NR_£m›


	)

586 
	#SYS_£mtimed›
 
__NR_£mtimed›


	)

587 
	#SYS_£ndfûe
 
__NR_£ndfûe


	)

588 
	#SYS_£ndmmsg
 
__NR_£ndmmsg


	)

589 
	#SYS_£ndmsg
 
__NR_£ndmsg


	)

590 
	#SYS_£ndto
 
__NR_£ndto


	)

591 
	#SYS_£t_mempﬁicy
 
__NR_£t_mempﬁicy


	)

592 
	#SYS_£t_robu°_li°
 
__NR_£t_robu°_li°


	)

593 
	#SYS_£t_thªad_¨ó
 
__NR_£t_thªad_¨ó


	)

594 
	#SYS_£t_tid_addªss
 
__NR_£t_tid_addªss


	)

595 
	#SYS_£tdomaö«me
 
__NR_£tdomaö«me


	)

596 
	#SYS_£tfsgid
 
__NR_£tfsgid


	)

597 
	#SYS_£tfsuid
 
__NR_£tfsuid


	)

598 
	#SYS_£tgid
 
__NR_£tgid


	)

599 
	#SYS_£tgroups
 
__NR_£tgroups


	)

600 
	#SYS_£tho°«me
 
__NR_£tho°«me


	)

601 
	#SYS_£tôimî
 
__NR_£tôimî


	)

602 
	#SYS_£äs
 
__NR_£äs


	)

603 
	#SYS_£çgid
 
__NR_£çgid


	)

604 
	#SYS_£çri‹ôy
 
__NR_£çri‹ôy


	)

605 
	#SYS_£åegid
 
__NR_£åegid


	)

606 
	#SYS_£åesgid
 
__NR_£åesgid


	)

607 
	#SYS_£åesuid
 
__NR_£åesuid


	)

608 
	#SYS_£åeuid
 
__NR_£åeuid


	)

609 
	#SYS_£ålimô
 
__NR_£ålimô


	)

610 
	#SYS_£tsid
 
__NR_£tsid


	)

611 
	#SYS_£tsock›t
 
__NR_£tsock›t


	)

612 
	#SYS_£âimeofday
 
__NR_£âimeofday


	)

613 
	#SYS_£tuid
 
__NR_£tuid


	)

614 
	#SYS_£tx©å
 
__NR_£tx©å


	)

615 
	#SYS_shm©
 
__NR_shm©


	)

616 
	#SYS_shm˘l
 
__NR_shm˘l


	)

617 
	#SYS_shmdt
 
__NR_shmdt


	)

618 
	#SYS_shmgë
 
__NR_shmgë


	)

619 
	#SYS_shutdown
 
__NR_shutdown


	)

620 
	#SYS_sigÆt°ack
 
__NR_sigÆt°ack


	)

621 
	#SYS_sig«lfd
 
__NR_sig«lfd


	)

622 
	#SYS_sig«lfd4
 
__NR_sig«lfd4


	)

623 
	#SYS_sockë
 
__NR_sockë


	)

624 
	#SYS_sockë∑ú
 
__NR_sockë∑ú


	)

625 
	#SYS_•li˚
 
__NR_•li˚


	)

626 
	#SYS_°©
 
__NR_°©


	)

627 
	#SYS_°©fs
 
__NR_°©fs


	)

628 
	#SYS_sw≠off
 
__NR_sw≠off


	)

629 
	#SYS_sw≠⁄
 
__NR_sw≠⁄


	)

630 
	#SYS_symlök
 
__NR_symlök


	)

631 
	#SYS_symlök©
 
__NR_symlök©


	)

632 
	#SYS_sync
 
__NR_sync


	)

633 
	#SYS_sync_fûe_ønge
 
__NR_sync_fûe_ønge


	)

634 
	#SYS_syncfs
 
__NR_syncfs


	)

635 
	#SYS_sysfs
 
__NR_sysfs


	)

636 
	#SYS_sysöfo
 
__NR_sysöfo


	)

637 
	#SYS_sy¶og
 
__NR_sy¶og


	)

638 
	#SYS_ãe
 
__NR_ãe


	)

639 
	#SYS_tgkûl
 
__NR_tgkûl


	)

640 
	#SYS_time
 
__NR_time


	)

641 
	#SYS_timî_¸óã
 
__NR_timî_¸óã


	)

642 
	#SYS_timî_dñëe
 
__NR_timî_dñëe


	)

643 
	#SYS_timî_gëovîrun
 
__NR_timî_gëovîrun


	)

644 
	#SYS_timî_gëtime
 
__NR_timî_gëtime


	)

645 
	#SYS_timî_£âime
 
__NR_timî_£âime


	)

646 
	#SYS_timîfd_¸óã
 
__NR_timîfd_¸óã


	)

647 
	#SYS_timîfd_gëtime
 
__NR_timîfd_gëtime


	)

648 
	#SYS_timîfd_£âime
 
__NR_timîfd_£âime


	)

649 
	#SYS_times
 
__NR_times


	)

650 
	#SYS_tkûl
 
__NR_tkûl


	)

651 
	#SYS_åunˇã
 
__NR_åunˇã


	)

652 
	#SYS_tuxˇŒ
 
__NR_tuxˇŒ


	)

653 
	#SYS_umask
 
__NR_umask


	)

654 
	#SYS_umou¡2
 
__NR_umou¡2


	)

655 
	#SYS_u«me
 
__NR_u«me


	)

656 
	#SYS_u∆ök
 
__NR_u∆ök


	)

657 
	#SYS_u∆ök©
 
__NR_u∆ök©


	)

658 
	#SYS_unsh¨e
 
__NR_unsh¨e


	)

659 
	#SYS_u£lib
 
__NR_u£lib


	)

660 
	#SYS_u°©
 
__NR_u°©


	)

661 
	#SYS_utime
 
__NR_utime


	)

662 
	#SYS_utimíßt
 
__NR_utimíßt


	)

663 
	#SYS_utimes
 
__NR_utimes


	)

664 
	#SYS_vf‹k
 
__NR_vf‹k


	)

665 
	#SYS_vh™gup
 
__NR_vh™gup


	)

666 
	#SYS_vm•li˚
 
__NR_vm•li˚


	)

667 
	#SYS_v£rvî
 
__NR_v£rvî


	)

668 
	#SYS_waô4
 
__NR_waô4


	)

669 
	#SYS_waôid
 
__NR_waôid


	)

670 
	#SYS_wrôe
 
__NR_wrôe


	)

671 
	#SYS_wrôev
 
__NR_wrôev


	)

673 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


674 
	#SYS_ac˚±
 
__NR_ac˚±


	)

675 
	#SYS_ac˚±4
 
__NR_ac˚±4


	)

676 
	#SYS_ac˚ss
 
__NR_ac˚ss


	)

677 
	#SYS_ac˘
 
__NR_ac˘


	)

678 
	#SYS_add_key
 
__NR_add_key


	)

679 
	#SYS_adjtimex
 
__NR_adjtimex


	)

680 
	#SYS_afs_sysˇŒ
 
__NR_afs_sysˇŒ


	)

681 
	#SYS_Æ¨m
 
__NR_Æ¨m


	)

682 
	#SYS_¨ch_¥˘l
 
__NR_¨ch_¥˘l


	)

683 
	#SYS_böd
 
__NR_böd


	)

684 
	#SYS_brk
 
__NR_brk


	)

685 
	#SYS_ˇpgë
 
__NR_ˇpgë


	)

686 
	#SYS_ˇp£t
 
__NR_ˇp£t


	)

687 
	#SYS_chdú
 
__NR_chdú


	)

688 
	#SYS_chmod
 
__NR_chmod


	)

689 
	#SYS_chown
 
__NR_chown


	)

690 
	#SYS_chroŸ
 
__NR_chroŸ


	)

691 
	#SYS_˛ock_adjtime
 
__NR_˛ock_adjtime


	)

692 
	#SYS_˛ock_gëªs
 
__NR_˛ock_gëªs


	)

693 
	#SYS_˛ock_gëtime
 
__NR_˛ock_gëtime


	)

694 
	#SYS_˛ock_«no¶ìp
 
__NR_˛ock_«no¶ìp


	)

695 
	#SYS_˛ock_£âime
 
__NR_˛ock_£âime


	)

696 
	#SYS_˛⁄e
 
__NR_˛⁄e


	)

697 
	#SYS_˛o£
 
__NR_˛o£


	)

698 
	#SYS_c⁄√˘
 
__NR_c⁄√˘


	)

699 
	#SYS_¸ót
 
__NR_¸ót


	)

700 
	#SYS_dñëe_moduÀ
 
__NR_dñëe_moduÀ


	)

701 
	#SYS_dup
 
__NR_dup


	)

702 
	#SYS_dup2
 
__NR_dup2


	)

703 
	#SYS_dup3
 
__NR_dup3


	)

704 
	#SYS_ïﬁl_¸óã
 
__NR_ïﬁl_¸óã


	)

705 
	#SYS_ïﬁl_¸óã1
 
__NR_ïﬁl_¸óã1


	)

706 
	#SYS_ïﬁl_˘l
 
__NR_ïﬁl_˘l


	)

707 
	#SYS_ïﬁl_pwaô
 
__NR_ïﬁl_pwaô


	)

708 
	#SYS_ïﬁl_waô
 
__NR_ïﬁl_waô


	)

709 
	#SYS_evítfd
 
__NR_evítfd


	)

710 
	#SYS_evítfd2
 
__NR_evítfd2


	)

711 
	#SYS_execve
 
__NR_execve


	)

712 
	#SYS_exô
 
__NR_exô


	)

713 
	#SYS_exô_group
 
__NR_exô_group


	)

714 
	#SYS_Ác˚sßt
 
__NR_Ác˚sßt


	)

715 
	#SYS_Ádvi£64
 
__NR_Ádvi£64


	)

716 
	#SYS_ÁŒoˇã
 
__NR_ÁŒoˇã


	)

717 
	#SYS_ÁnŸify_öô
 
__NR_ÁnŸify_öô


	)

718 
	#SYS_ÁnŸify_m¨k
 
__NR_ÁnŸify_m¨k


	)

719 
	#SYS_fchdú
 
__NR_fchdú


	)

720 
	#SYS_fchmod
 
__NR_fchmod


	)

721 
	#SYS_fchmod©
 
__NR_fchmod©


	)

722 
	#SYS_fchown
 
__NR_fchown


	)

723 
	#SYS_fchow«t
 
__NR_fchow«t


	)

724 
	#SYS_f˙é
 
__NR_f˙é


	)

725 
	#SYS_fd©async
 
__NR_fd©async


	)

726 
	#SYS_fgëx©å
 
__NR_fgëx©å


	)

727 
	#SYS_föô_moduÀ
 
__NR_föô_moduÀ


	)

728 
	#SYS_Êi°x©å
 
__NR_Êi°x©å


	)

729 
	#SYS_Êock
 
__NR_Êock


	)

730 
	#SYS_f‹k
 
__NR_f‹k


	)

731 
	#SYS_‰emovex©å
 
__NR_‰emovex©å


	)

732 
	#SYS_f£tx©å
 
__NR_f£tx©å


	)

733 
	#SYS_f°©
 
__NR_f°©


	)

734 
	#SYS_f°©fs
 
__NR_f°©fs


	)

735 
	#SYS_fsync
 
__NR_fsync


	)

736 
	#SYS_·runˇã
 
__NR_·runˇã


	)

737 
	#SYS_fuãx
 
__NR_fuãx


	)

738 
	#SYS_futimeßt
 
__NR_futimeßt


	)

739 
	#SYS_gë_mempﬁicy
 
__NR_gë_mempﬁicy


	)

740 
	#SYS_gë_robu°_li°
 
__NR_gë_robu°_li°


	)

741 
	#SYS_gë˝u
 
__NR_gë˝u


	)

742 
	#SYS_gëcwd
 
__NR_gëcwd


	)

743 
	#SYS_gëdíts
 
__NR_gëdíts


	)

744 
	#SYS_gëdíts64
 
__NR_gëdíts64


	)

745 
	#SYS_gëegid
 
__NR_gëegid


	)

746 
	#SYS_gëeuid
 
__NR_gëeuid


	)

747 
	#SYS_gëgid
 
__NR_gëgid


	)

748 
	#SYS_gëgroups
 
__NR_gëgroups


	)

749 
	#SYS_gëôimî
 
__NR_gëôimî


	)

750 
	#SYS_gë≥î«me
 
__NR_gë≥î«me


	)

751 
	#SYS_gëpgid
 
__NR_gëpgid


	)

752 
	#SYS_gëpgΩ
 
__NR_gëpgΩ


	)

753 
	#SYS_gëpid
 
__NR_gëpid


	)

754 
	#SYS_gëpmsg
 
__NR_gëpmsg


	)

755 
	#SYS_gëµid
 
__NR_gëµid


	)

756 
	#SYS_gë¥i‹ôy
 
__NR_gë¥i‹ôy


	)

757 
	#SYS_gëªsgid
 
__NR_gëªsgid


	)

758 
	#SYS_gëªsuid
 
__NR_gëªsuid


	)

759 
	#SYS_gëæimô
 
__NR_gëæimô


	)

760 
	#SYS_gërußge
 
__NR_gërußge


	)

761 
	#SYS_gësid
 
__NR_gësid


	)

762 
	#SYS_gësock«me
 
__NR_gësock«me


	)

763 
	#SYS_gësock›t
 
__NR_gësock›t


	)

764 
	#SYS_gëtid
 
__NR_gëtid


	)

765 
	#SYS_gëtimeofday
 
__NR_gëtimeofday


	)

766 
	#SYS_gëuid
 
__NR_gëuid


	)

767 
	#SYS_gëx©å
 
__NR_gëx©å


	)

768 
	#SYS_öô_moduÀ
 
__NR_öô_moduÀ


	)

769 
	#SYS_öŸify_add_w©ch
 
__NR_öŸify_add_w©ch


	)

770 
	#SYS_öŸify_öô
 
__NR_öŸify_öô


	)

771 
	#SYS_öŸify_öô1
 
__NR_öŸify_öô1


	)

772 
	#SYS_öŸify_rm_w©ch
 
__NR_öŸify_rm_w©ch


	)

773 
	#SYS_io_ˇn˚l
 
__NR_io_ˇn˚l


	)

774 
	#SYS_io_de°roy
 
__NR_io_de°roy


	)

775 
	#SYS_io_gëevíts
 
__NR_io_gëevíts


	)

776 
	#SYS_io_£tup
 
__NR_io_£tup


	)

777 
	#SYS_io_submô
 
__NR_io_submô


	)

778 
	#SYS_io˘l
 
__NR_io˘l


	)

779 
	#SYS_i›îm
 
__NR_i›îm


	)

780 
	#SYS_i›l
 
__NR_i›l


	)

781 
	#SYS_i›rio_gë
 
__NR_i›rio_gë


	)

782 
	#SYS_i›rio_£t
 
__NR_i›rio_£t


	)

783 
	#SYS_kcmp
 
__NR_kcmp


	)

784 
	#SYS_kexec_lﬂd
 
__NR_kexec_lﬂd


	)

785 
	#SYS_key˘l
 
__NR_key˘l


	)

786 
	#SYS_kûl
 
__NR_kûl


	)

787 
	#SYS_lchown
 
__NR_lchown


	)

788 
	#SYS_lgëx©å
 
__NR_lgëx©å


	)

789 
	#SYS_lök
 
__NR_lök


	)

790 
	#SYS_lök©
 
__NR_lök©


	)

791 
	#SYS_li°í
 
__NR_li°í


	)

792 
	#SYS_li°x©å
 
__NR_li°x©å


	)

793 
	#SYS_Œi°x©å
 
__NR_Œi°x©å


	)

794 
	#SYS_lookup_dcookõ
 
__NR_lookup_dcookõ


	)

795 
	#SYS_Ãemovex©å
 
__NR_Ãemovex©å


	)

796 
	#SYS_l£ek
 
__NR_l£ek


	)

797 
	#SYS_l£tx©å
 
__NR_l£tx©å


	)

798 
	#SYS_l°©
 
__NR_l°©


	)

799 
	#SYS_madvi£
 
__NR_madvi£


	)

800 
	#SYS_mböd
 
__NR_mböd


	)

801 
	#SYS_migøã_∑ges
 
__NR_migøã_∑ges


	)

802 
	#SYS_möc‹e
 
__NR_möc‹e


	)

803 
	#SYS_mkdú
 
__NR_mkdú


	)

804 
	#SYS_mkdú©
 
__NR_mkdú©


	)

805 
	#SYS_mknod
 
__NR_mknod


	)

806 
	#SYS_mknod©
 
__NR_mknod©


	)

807 
	#SYS_mlock
 
__NR_mlock


	)

808 
	#SYS_mlockÆl
 
__NR_mlockÆl


	)

809 
	#SYS_mm≠
 
__NR_mm≠


	)

810 
	#SYS_modify_ldt
 
__NR_modify_ldt


	)

811 
	#SYS_mou¡
 
__NR_mou¡


	)

812 
	#SYS_move_∑ges
 
__NR_move_∑ges


	)

813 
	#SYS_m¥Ÿe˘
 
__NR_m¥Ÿe˘


	)

814 
	#SYS_mq_gë£èâr
 
__NR_mq_gë£èâr


	)

815 
	#SYS_mq_nŸify
 
__NR_mq_nŸify


	)

816 
	#SYS_mq_›í
 
__NR_mq_›í


	)

817 
	#SYS_mq_timedª˚ive
 
__NR_mq_timedª˚ive


	)

818 
	#SYS_mq_timed£nd
 
__NR_mq_timed£nd


	)

819 
	#SYS_mq_u∆ök
 
__NR_mq_u∆ök


	)

820 
	#SYS_mªm≠
 
__NR_mªm≠


	)

821 
	#SYS_msg˘l
 
__NR_msg˘l


	)

822 
	#SYS_msggë
 
__NR_msggë


	)

823 
	#SYS_msgrcv
 
__NR_msgrcv


	)

824 
	#SYS_msg¢d
 
__NR_msg¢d


	)

825 
	#SYS_msync
 
__NR_msync


	)

826 
	#SYS_mu∆ock
 
__NR_mu∆ock


	)

827 
	#SYS_mu∆ockÆl
 
__NR_mu∆ockÆl


	)

828 
	#SYS_munm≠
 
__NR_munm≠


	)

829 
	#SYS_«me_to_h™dÀ_©
 
__NR_«me_to_h™dÀ_©


	)

830 
	#SYS_«no¶ìp
 
__NR_«no¶ìp


	)

831 
	#SYS_√wf°©©
 
__NR_√wf°©©


	)

832 
	#SYS_›í
 
__NR_›í


	)

833 
	#SYS_›í_by_h™dÀ_©
 
__NR_›í_by_h™dÀ_©


	)

834 
	#SYS_›í©
 
__NR_›í©


	)

835 
	#SYS_∑u£
 
__NR_∑u£


	)

836 
	#SYS_≥rf_evít_›í
 
__NR_≥rf_evít_›í


	)

837 
	#SYS_≥rs⁄Æôy
 
__NR_≥rs⁄Æôy


	)

838 
	#SYS_pùe
 
__NR_pùe


	)

839 
	#SYS_pùe2
 
__NR_pùe2


	)

840 
	#SYS_pivŸ_roŸ
 
__NR_pivŸ_roŸ


	)

841 
	#SYS_pﬁl
 
__NR_pﬁl


	)

842 
	#SYS_µﬁl
 
__NR_µﬁl


	)

843 
	#SYS_¥˘l
 
__NR_¥˘l


	)

844 
	#SYS_¥ód64
 
__NR_¥ód64


	)

845 
	#SYS_¥ódv
 
__NR_¥ódv


	)

846 
	#SYS_¥limô64
 
__NR_¥limô64


	)

847 
	#SYS_¥o˚ss_vm_ªadv
 
__NR_¥o˚ss_vm_ªadv


	)

848 
	#SYS_¥o˚ss_vm_wrôev
 
__NR_¥o˚ss_vm_wrôev


	)

849 
	#SYS_p£À˘6
 
__NR_p£À˘6


	)

850 
	#SYS_±ø˚
 
__NR_±ø˚


	)

851 
	#SYS_puçmsg
 
__NR_puçmsg


	)

852 
	#SYS_pwrôe64
 
__NR_pwrôe64


	)

853 
	#SYS_pwrôev
 
__NR_pwrôev


	)

854 
	#SYS_quŸa˘l
 
__NR_quŸa˘l


	)

855 
	#SYS_ªad
 
__NR_ªad


	)

856 
	#SYS_ªadahód
 
__NR_ªadahód


	)

857 
	#SYS_ªadlök
 
__NR_ªadlök


	)

858 
	#SYS_ªadlök©
 
__NR_ªadlök©


	)

859 
	#SYS_ªadv
 
__NR_ªadv


	)

860 
	#SYS_ªboŸ
 
__NR_ªboŸ


	)

861 
	#SYS_ªcv‰om
 
__NR_ªcv‰om


	)

862 
	#SYS_ªcvmmsg
 
__NR_ªcvmmsg


	)

863 
	#SYS_ªcvmsg
 
__NR_ªcvmsg


	)

864 
	#SYS_ªm≠_fûe_∑ges
 
__NR_ªm≠_fûe_∑ges


	)

865 
	#SYS_ªmovex©å
 
__NR_ªmovex©å


	)

866 
	#SYS_ª«me
 
__NR_ª«me


	)

867 
	#SYS_ª«mót
 
__NR_ª«mót


	)

868 
	#SYS_ªque°_key
 
__NR_ªque°_key


	)

869 
	#SYS_ª°¨t_sysˇŒ
 
__NR_ª°¨t_sysˇŒ


	)

870 
	#SYS_rmdú
 
__NR_rmdú


	)

871 
	#SYS_π_siga˘i⁄
 
__NR_π_siga˘i⁄


	)

872 
	#SYS_π_sig≥ndög
 
__NR_π_sig≥ndög


	)

873 
	#SYS_π_sig¥ocmask
 
__NR_π_sig¥ocmask


	)

874 
	#SYS_π_sigqueueöfo
 
__NR_π_sigqueueöfo


	)

875 
	#SYS_π_sigªtu∫
 
__NR_π_sigªtu∫


	)

876 
	#SYS_π_sigsu•íd
 
__NR_π_sigsu•íd


	)

877 
	#SYS_π_sigtimedwaô
 
__NR_π_sigtimedwaô


	)

878 
	#SYS_π_tgsigqueueöfo
 
__NR_π_tgsigqueueöfo


	)

879 
	#SYS_sched_gë_¥i‹ôy_max
 
__NR_sched_gë_¥i‹ôy_max


	)

880 
	#SYS_sched_gë_¥i‹ôy_mö
 
__NR_sched_gë_¥i‹ôy_mö


	)

881 
	#SYS_sched_gëafföôy
 
__NR_sched_gëafföôy


	)

882 
	#SYS_sched_gë∑øm
 
__NR_sched_gë∑øm


	)

883 
	#SYS_sched_gëscheduÀr
 
__NR_sched_gëscheduÀr


	)

884 
	#SYS_sched_º_gë_öãrvÆ
 
__NR_sched_º_gë_öãrvÆ


	)

885 
	#SYS_sched_£èfföôy
 
__NR_sched_£èfföôy


	)

886 
	#SYS_sched_£ç¨am
 
__NR_sched_£ç¨am


	)

887 
	#SYS_sched_£tscheduÀr
 
__NR_sched_£tscheduÀr


	)

888 
	#SYS_sched_yõld
 
__NR_sched_yõld


	)

889 
	#SYS_£curôy
 
__NR_£curôy


	)

890 
	#SYS_£À˘
 
__NR_£À˘


	)

891 
	#SYS_£m˘l
 
__NR_£m˘l


	)

892 
	#SYS_£mgë
 
__NR_£mgë


	)

893 
	#SYS_£m›
 
__NR_£m›


	)

894 
	#SYS_£mtimed›
 
__NR_£mtimed›


	)

895 
	#SYS_£ndfûe
 
__NR_£ndfûe


	)

896 
	#SYS_£ndmmsg
 
__NR_£ndmmsg


	)

897 
	#SYS_£ndmsg
 
__NR_£ndmsg


	)

898 
	#SYS_£ndto
 
__NR_£ndto


	)

899 
	#SYS_£t_mempﬁicy
 
__NR_£t_mempﬁicy


	)

900 
	#SYS_£t_robu°_li°
 
__NR_£t_robu°_li°


	)

901 
	#SYS_£t_tid_addªss
 
__NR_£t_tid_addªss


	)

902 
	#SYS_£tdomaö«me
 
__NR_£tdomaö«me


	)

903 
	#SYS_£tfsgid
 
__NR_£tfsgid


	)

904 
	#SYS_£tfsuid
 
__NR_£tfsuid


	)

905 
	#SYS_£tgid
 
__NR_£tgid


	)

906 
	#SYS_£tgroups
 
__NR_£tgroups


	)

907 
	#SYS_£tho°«me
 
__NR_£tho°«me


	)

908 
	#SYS_£tôimî
 
__NR_£tôimî


	)

909 
	#SYS_£äs
 
__NR_£äs


	)

910 
	#SYS_£çgid
 
__NR_£çgid


	)

911 
	#SYS_£çri‹ôy
 
__NR_£çri‹ôy


	)

912 
	#SYS_£åegid
 
__NR_£åegid


	)

913 
	#SYS_£åesgid
 
__NR_£åesgid


	)

914 
	#SYS_£åesuid
 
__NR_£åesuid


	)

915 
	#SYS_£åeuid
 
__NR_£åeuid


	)

916 
	#SYS_£ålimô
 
__NR_£ålimô


	)

917 
	#SYS_£tsid
 
__NR_£tsid


	)

918 
	#SYS_£tsock›t
 
__NR_£tsock›t


	)

919 
	#SYS_£âimeofday
 
__NR_£âimeofday


	)

920 
	#SYS_£tuid
 
__NR_£tuid


	)

921 
	#SYS_£tx©å
 
__NR_£tx©å


	)

922 
	#SYS_shm©
 
__NR_shm©


	)

923 
	#SYS_shm˘l
 
__NR_shm˘l


	)

924 
	#SYS_shmdt
 
__NR_shmdt


	)

925 
	#SYS_shmgë
 
__NR_shmgë


	)

926 
	#SYS_shutdown
 
__NR_shutdown


	)

927 
	#SYS_sigÆt°ack
 
__NR_sigÆt°ack


	)

928 
	#SYS_sig«lfd
 
__NR_sig«lfd


	)

929 
	#SYS_sig«lfd4
 
__NR_sig«lfd4


	)

930 
	#SYS_sockë
 
__NR_sockë


	)

931 
	#SYS_sockë∑ú
 
__NR_sockë∑ú


	)

932 
	#SYS_•li˚
 
__NR_•li˚


	)

933 
	#SYS_°©
 
__NR_°©


	)

934 
	#SYS_°©fs
 
__NR_°©fs


	)

935 
	#SYS_sw≠off
 
__NR_sw≠off


	)

936 
	#SYS_sw≠⁄
 
__NR_sw≠⁄


	)

937 
	#SYS_symlök
 
__NR_symlök


	)

938 
	#SYS_symlök©
 
__NR_symlök©


	)

939 
	#SYS_sync
 
__NR_sync


	)

940 
	#SYS_sync_fûe_ønge
 
__NR_sync_fûe_ønge


	)

941 
	#SYS_syncfs
 
__NR_syncfs


	)

942 
	#SYS_sysfs
 
__NR_sysfs


	)

943 
	#SYS_sysöfo
 
__NR_sysöfo


	)

944 
	#SYS_sy¶og
 
__NR_sy¶og


	)

945 
	#SYS_ãe
 
__NR_ãe


	)

946 
	#SYS_tgkûl
 
__NR_tgkûl


	)

947 
	#SYS_time
 
__NR_time


	)

948 
	#SYS_timî_¸óã
 
__NR_timî_¸óã


	)

949 
	#SYS_timî_dñëe
 
__NR_timî_dñëe


	)

950 
	#SYS_timî_gëovîrun
 
__NR_timî_gëovîrun


	)

951 
	#SYS_timî_gëtime
 
__NR_timî_gëtime


	)

952 
	#SYS_timî_£âime
 
__NR_timî_£âime


	)

953 
	#SYS_timîfd_¸óã
 
__NR_timîfd_¸óã


	)

954 
	#SYS_timîfd_gëtime
 
__NR_timîfd_gëtime


	)

955 
	#SYS_timîfd_£âime
 
__NR_timîfd_£âime


	)

956 
	#SYS_times
 
__NR_times


	)

957 
	#SYS_tkûl
 
__NR_tkûl


	)

958 
	#SYS_åunˇã
 
__NR_åunˇã


	)

959 
	#SYS_tuxˇŒ
 
__NR_tuxˇŒ


	)

960 
	#SYS_umask
 
__NR_umask


	)

961 
	#SYS_umou¡2
 
__NR_umou¡2


	)

962 
	#SYS_u«me
 
__NR_u«me


	)

963 
	#SYS_u∆ök
 
__NR_u∆ök


	)

964 
	#SYS_u∆ök©
 
__NR_u∆ök©


	)

965 
	#SYS_unsh¨e
 
__NR_unsh¨e


	)

966 
	#SYS_u°©
 
__NR_u°©


	)

967 
	#SYS_utime
 
__NR_utime


	)

968 
	#SYS_utimíßt
 
__NR_utimíßt


	)

969 
	#SYS_utimes
 
__NR_utimes


	)

970 
	#SYS_vf‹k
 
__NR_vf‹k


	)

971 
	#SYS_vh™gup
 
__NR_vh™gup


	)

972 
	#SYS_vm•li˚
 
__NR_vm•li˚


	)

973 
	#SYS_waô4
 
__NR_waô4


	)

974 
	#SYS_waôid
 
__NR_waôid


	)

975 
	#SYS_wrôe
 
__NR_wrôe


	)

976 
	#SYS_wrôev
 
__NR_wrôev


	)

	@/usr/include/bits/types.h

23 #i‚def 
_BITS_TYPES_H


24 
	#_BITS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/w‹dsize.h
>

30 
	t__u_ch¨
;

31 
	t__u_sh‹t
;

32 
	t__u_öt
;

33 
	t__u_l⁄g
;

36 sig√d 
	t__öt8_t
;

37 
	t__uöt8_t
;

38 sig√d 
	t__öt16_t
;

39 
	t__uöt16_t
;

40 sig√d 
	t__öt32_t
;

41 
	t__uöt32_t
;

42 #i‡
__WORDSIZE
 == 64

43 sig√d 
	t__öt64_t
;

44 
	t__uöt64_t
;

45 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


46 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

47 
__exãnsi⁄__
 
	t__uöt64_t
;

51 #i‡
__WORDSIZE
 == 64

52 
	t__quad_t
;

53 
	t__u_quad_t
;

54 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


55 
__exãnsi⁄__
 
	t__quad_t
;

56 
__exãnsi⁄__
 
	t__u_quad_t
;

60 
	m__vÆ
[2];

61 } 
	t__quad_t
;

64 
__u_l⁄g
 
	m__vÆ
[2];

65 } 
	t__u_quad_t
;

98 
	#__S16_TYPE
 

	)

99 
	#__U16_TYPE
 

	)

100 
	#__S32_TYPE
 

	)

101 
	#__U32_TYPE
 

	)

102 
	#__SLONGWORD_TYPE
 

	)

103 
	#__ULONGWORD_TYPE
 

	)

104 #i‡
__WORDSIZE
 == 32

105 
	#__SQUAD_TYPE
 
__quad_t


	)

106 
	#__UQUAD_TYPE
 
__u_quad_t


	)

107 
	#__SWORD_TYPE
 

	)

108 
	#__UWORD_TYPE
 

	)

109 
	#__SLONG32_TYPE
 

	)

110 
	#__ULONG32_TYPE
 

	)

111 
	#__S64_TYPE
 
__quad_t


	)

112 
	#__U64_TYPE
 
__u_quad_t


	)

115 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

116 #ñi‡
__WORDSIZE
 == 64

117 
	t__SQUAD_TYPE
 

	)

118 
	t__UQUAD_TYPE
 

	)

119 
	t__SWORD_TYPE
 

	)

120 
	t__UWORD_TYPE
 

	)

121 
	t__SLONG32_TYPE
 

	)

122 
	t__ULONG32_TYPE
 

	)

123 
	t__S64_TYPE
 

	)

124 
	t__U64_TYPE
 

	)

126 
	t__STD_TYPE
 

	)

130 
	~<bôs/ty≥sizes.h
>

133 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

134 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

135 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

136 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

137 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

138 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

139 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

140 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

141 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

142 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

143 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

144 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

145 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

146 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

147 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

148 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

149 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

150 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

152 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

153 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

156 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

159 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

162 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

167 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

168 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

171 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

172 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

175 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

176 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

179 
__STD_TYPE
 
__FSWORD_T_TYPE
 
	g__fsw‹d_t
;

181 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__STD_TYPE
 
__SYSCALL_SLONG_TYPE
 
	g__sysˇŒ_¶⁄g_t
;

186 
__STD_TYPE
 
__SYSCALL_ULONG_TYPE
 
	g__sysˇŒ_ul⁄g_t
;

190 
__off64_t
 
	t__loff_t
;

191 
__quad_t
 *
	t__qaddr_t
;

192 *
	t__ˇddr_t
;

195 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

198 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

201 #unde‡
__STD_TYPE


	@/usr/include/bits/waitflags.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


25 
	#WNOHANG
 1

	)

26 
	#WUNTRACED
 2

	)

29 
	#WSTOPPED
 2

	)

30 
	#WEXITED
 4

	)

31 
	#WCONTINUED
 8

	)

32 
	#WNOWAIT
 0x01000000

	)

34 
	#__WNOTHREAD
 0x20000000

	)

36 
	#__WALL
 0x40000000

	)

37 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


28 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

31 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

34 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

37 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

40 
	#__WIFSIGNALED
(
°©us
) \

41 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

44 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

48 #ifde‡
WCONTINUED


49 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

53 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

56 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

57 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

58 
	#__W_CONTINUED
 0xffff

	)

59 
	#__WCOREFLAG
 0x80

	)

62 #ifdef 
__USE_BSD


64 
	~<ídün.h
>

66 
	uwaô


68 
	mw_°©us
;

71 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


72 
	m__w_ãrmsig
:7;

73 
	m__w_c‹edump
:1;

74 
	m__w_ªtcode
:8;

77 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


79 
	m__w_ªtcode
:8;

80 
	m__w_c‹edump
:1;

81 
	m__w_ãrmsig
:7;

83 } 
	m__waô_ãrmö©ed
;

86 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


87 
	m__w_°›vÆ
:8;

88 
	m__w_°›sig
:8;

91 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


93 
	m__w_°›sig
:8;

94 
	m__w_°›vÆ
:8;

96 } 
	m__waô_°›≥d
;

99 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

100 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

101 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

102 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

103 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


26 #i‚def 
__√ed_Em©h


27 
	#_ERRNO_H
 1

	)

28 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 
	~<bôs/î∫o.h
>

36 #unde‡
__√ed_Em©h


38 #ifdef 
_ERRNO_H


45 #i‚def 
î∫o


46 
î∫o
;

49 #ifde‡
__USE_GNU


54 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

58 
	g__END_DECLS


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


67 #i‚de‡
__îr‹_t_deföed


68 
	tîr‹_t
;

69 
	#__îr‹_t_deföed
 1

	)

71 #unde‡
__√ed_îr‹_t


	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

98 #unde‡
__USE_ISOC11


99 #unde‡
__USE_ISOC99


100 #unde‡
__USE_ISOC95


101 #unde‡
__USE_ISOCXX11


102 #unde‡
__USE_POSIX


103 #unde‡
__USE_POSIX2


104 #unde‡
__USE_POSIX199309


105 #unde‡
__USE_POSIX199506


106 #unde‡
__USE_XOPEN


107 #unde‡
__USE_XOPEN_EXTENDED


108 #unde‡
__USE_UNIX98


109 #unde‡
__USE_XOPEN2K


110 #unde‡
__USE_XOPEN2KXSI


111 #unde‡
__USE_XOPEN2K8


112 #unde‡
__USE_XOPEN2K8XSI


113 #unde‡
__USE_LARGEFILE


114 #unde‡
__USE_LARGEFILE64


115 #unde‡
__USE_FILE_OFFSET64


116 #unde‡
__USE_BSD


117 #unde‡
__USE_SVID


118 #unde‡
__USE_MISC


119 #unde‡
__USE_ATFILE


120 #unde‡
__USE_GNU


121 #unde‡
__USE_REENTRANT


122 #unde‡
__USE_FORTIFY_LEVEL


123 #unde‡
__FAVOR_BSD


124 #unde‡
__KERNEL_STRICT_NAMES


128 #i‚de‡
_LOOSE_KERNEL_NAMES


129 
	#__KERNEL_STRICT_NAMES


	)

133 
	#__USE_ANSI
 1

	)

142 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


143 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

144 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

146 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

151 #i‡
deföed
 
_BSD_SOURCE
 && \

152 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

153 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

154 
	#__FAVOR_BSD
 1

	)

158 #ifde‡
_GNU_SOURCE


159 #unde‡
_ISOC95_SOURCE


160 
	#_ISOC95_SOURCE
 1

	)

161 #unde‡
_ISOC99_SOURCE


162 
	#_ISOC99_SOURCE
 1

	)

163 #unde‡
_ISOC11_SOURCE


164 
	#_ISOC11_SOURCE
 1

	)

165 #unde‡
_POSIX_SOURCE


166 
	#_POSIX_SOURCE
 1

	)

167 #unde‡
_POSIX_C_SOURCE


168 
	#_POSIX_C_SOURCE
 200809L

	)

169 #unde‡
_XOPEN_SOURCE


170 
	#_XOPEN_SOURCE
 700

	)

171 #unde‡
_XOPEN_SOURCE_EXTENDED


172 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

173 #unde‡
_LARGEFILE64_SOURCE


174 
	#_LARGEFILE64_SOURCE
 1

	)

175 #unde‡
_BSD_SOURCE


176 
	#_BSD_SOURCE
 1

	)

177 #unde‡
_SVID_SOURCE


178 
	#_SVID_SOURCE
 1

	)

179 #unde‡
_ATFILE_SOURCE


180 
	#_ATFILE_SOURCE
 1

	)

185 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

186 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

187 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

188 
	#_BSD_SOURCE
 1

	)

189 
	#_SVID_SOURCE
 1

	)

193 #i‡(
deföed
 
_ISOC11_SOURCE
 \

194 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

195 
	#__USE_ISOC11
 1

	)

199 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

200 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

201 
	#__USE_ISOC99
 1

	)

205 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

206 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

207 
	#__USE_ISOC95
 1

	)

214 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

215 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

216 
	#__USE_ISOCXX11
 1

	)

221 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

222 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

223 
	#_POSIX_SOURCE
 1

	)

224 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

225 
	#_POSIX_C_SOURCE
 2

	)

226 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

227 
	#_POSIX_C_SOURCE
 199506L

	)

228 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

229 
	#_POSIX_C_SOURCE
 200112L

	)

231 
	#_POSIX_C_SOURCE
 200809L

	)

233 
	#__USE_POSIX_IMPLICITLY
 1

	)

236 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


237 
	#__USE_POSIX
 1

	)

240 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


241 
	#__USE_POSIX2
 1

	)

244 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

245 
	#__USE_POSIX199309
 1

	)

248 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

249 
	#__USE_POSIX199506
 1

	)

252 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

253 
	#__USE_XOPEN2K
 1

	)

254 #unde‡
__USE_ISOC95


255 
	#__USE_ISOC95
 1

	)

256 #unde‡
__USE_ISOC99


257 
	#__USE_ISOC99
 1

	)

260 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

261 
	#__USE_XOPEN2K8
 1

	)

262 #unde‡
_ATFILE_SOURCE


263 
	#_ATFILE_SOURCE
 1

	)

266 #ifdef 
_XOPEN_SOURCE


267 
	#__USE_XOPEN
 1

	)

268 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

269 
	#__USE_XOPEN_EXTENDED
 1

	)

270 
	#__USE_UNIX98
 1

	)

271 #unde‡
_LARGEFILE_SOURCE


272 
	#_LARGEFILE_SOURCE
 1

	)

273 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

274 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

275 
	#__USE_XOPEN2K8
 1

	)

276 
	#__USE_XOPEN2K8XSI
 1

	)

278 
	#__USE_XOPEN2K
 1

	)

279 
	#__USE_XOPEN2KXSI
 1

	)

280 #unde‡
__USE_ISOC95


281 
	#__USE_ISOC95
 1

	)

282 #unde‡
__USE_ISOC99


283 
	#__USE_ISOC99
 1

	)

286 #ifde‡
_XOPEN_SOURCE_EXTENDED


287 
	#__USE_XOPEN_EXTENDED
 1

	)

292 #ifde‡
_LARGEFILE_SOURCE


293 
	#__USE_LARGEFILE
 1

	)

296 #ifde‡
_LARGEFILE64_SOURCE


297 
	#__USE_LARGEFILE64
 1

	)

300 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

301 
	#__USE_FILE_OFFSET64
 1

	)

304 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


305 
	#__USE_MISC
 1

	)

308 #ifdef 
_BSD_SOURCE


309 
	#__USE_BSD
 1

	)

312 #ifdef 
_SVID_SOURCE


313 
	#__USE_SVID
 1

	)

316 #ifdef 
_ATFILE_SOURCE


317 
	#__USE_ATFILE
 1

	)

320 #ifdef 
_GNU_SOURCE


321 
	#__USE_GNU
 1

	)

324 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


325 
	#__USE_REENTRANT
 1

	)

328 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0

329 #i‡!
deföed
 
__OPTIMIZE__
 || __OPTIMIZE__ <= 0

330 #w¨nög 
_FORTIFY_SOURCE
 
ªquúes
 
compûög
 
wôh
 
›timiz©i⁄
 (-
O
)

331 #ñi‡!
__GNUC_PREREQ
 (4, 1)

332 #w¨nög 
_FORTIFY_SOURCE
 
ªquúes
 
GCC
 4.1 
‹
 
œãr


333 #ñi‡
_FORTIFY_SOURCE
 > 1

334 
	#__USE_FORTIFY_LEVEL
 2

	)

336 
	#__USE_FORTIFY_LEVEL
 1

	)

339 #i‚de‡
__USE_FORTIFY_LEVEL


340 
	#__USE_FORTIFY_LEVEL
 0

	)

345 
	~<°dc-¥edef.h
>

353 #unde‡
__GNU_LIBRARY__


354 
	#__GNU_LIBRARY__
 6

	)

358 
	#__GLIBC__
 2

	)

359 
	#__GLIBC_MINOR__
 17

	)

361 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

362 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

365 #i‡
deföed
 
__GNUC__
 \

366 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

367 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

368 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

369 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

373 #i‚de‡
__ASSEMBLER__


374 #i‚de‡
_SYS_CDEFS_H


375 
	~<sys/cdefs.h
>

380 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


381 
	#__USE_LARGEFILE
 1

	)

382 
	#__USE_LARGEFILE64
 1

	)

388 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

389 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

390 && 
deföed
 
	g__exã∫_ölöe


391 
	#__USE_EXTERN_INLINES
 1

	)

399 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

20 #i‚de‡
_GETOPT_H


22 #i‚de‡
__√ed_gë›t


23 
	#_GETOPT_H
 1

	)

33 #i‡!
deföed
 
__GNU_LIBRARY__


34 
	~<˘y≥.h
>

37 #i‚de‡
__THROW


38 #i‚de‡
__GNUC_PREREQ


39 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

41 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

42 
	#__THROW
 
	`throw
 ()

	)

44 
	#__THROW


	)

48 #ifdef 
__˝lu•lus


58 *
›èrg
;

72 
›töd
;

77 
›ãº
;

81 
›t›t
;

83 #i‚de‡
__√ed_gë›t


105 
	s›ti⁄


107 c⁄° *
	g«me
;

110 
	ghas_¨g
;

111 *
	gÊag
;

112 
	gvÆ
;

117 
	#no_¨gumít
 0

	)

118 
	#ªquúed_¨gumít
 1

	)

119 
	#›ti⁄Æ_¨gumít
 2

	)

147 #ifde‡
__GNU_LIBRARY__


151 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

152 
__THROW
;

154 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

155 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


159 #ifde‡
__REDIRECT


160 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

161 c⁄° *
__sh‹t›ts
),

162 
__posix_gë›t
);

164 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

165 c⁄° *
__sh‹t›ts
Ë
__THROW
;

166 
	#gë›t
 
__posix_gë›t


	)

170 
gë›t
 ();

173 #i‚de‡
__√ed_gë›t


174 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

175 c⁄° *
__sh‹t›ts
,

176 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

177 
__THROW
;

178 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

179 c⁄° *
__sh‹t›ts
,

180 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

181 
__THROW
;

185 #ifdef 
__˝lu•lus


190 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_Âos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

36 
	#_IO_size_t
 
size_t


	)

37 
	#_IO_ssize_t
 
__ssize_t


	)

38 
	#_IO_off_t
 
__off_t


	)

39 
	#_IO_off64_t
 
__off64_t


	)

40 
	#_IO_pid_t
 
__pid_t


	)

41 
	#_IO_uid_t
 
__uid_t


	)

42 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

43 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

44 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

45 
	#_IO_va_li°
 
_G_va_li°


	)

46 
	#_IO_wöt_t
 
wöt_t


	)

49 
	#__√ed___va_li°


	)

50 
	~<°d¨g.h
>

51 #ifde‡
__GNUC_VA_LIST


52 #unde‡
_IO_va_li°


53 
	#_IO_va_li°
 
__gnuc_va_li°


	)

56 #i‚de‡
__P


57 
	~<sys/cdefs.h
>

60 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

62 #i‚de‡
EOF


63 
	#EOF
 (-1)

	)

65 #i‚de‡
NULL


66 #i‡
deföed
 
__GNUG__
 && \

67 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

68 
	#NULL
 (
__nuŒ
)

	)

70 #i‡!
deföed
(
__˝lu•lus
)

71 
	#NULL
 ((*)0)

	)

73 
	#NULL
 (0)

	)

78 
	#_IOS_INPUT
 1

	)

79 
	#_IOS_OUTPUT
 2

	)

80 
	#_IOS_ATEND
 4

	)

81 
	#_IOS_APPEND
 8

	)

82 
	#_IOS_TRUNC
 16

	)

83 
	#_IOS_NOCREATE
 32

	)

84 
	#_IOS_NOREPLACE
 64

	)

85 
	#_IOS_BIN
 128

	)

93 
	#_IO_MAGIC
 0xFBAD0000

	)

94 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

95 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

96 
	#_IO_USER_BUF
 1

	)

97 
	#_IO_UNBUFFERED
 2

	)

98 
	#_IO_NO_READS
 4

	)

99 
	#_IO_NO_WRITES
 8

	)

100 
	#_IO_EOF_SEEN
 0x10

	)

101 
	#_IO_ERR_SEEN
 0x20

	)

102 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

103 
	#_IO_LINKED
 0x80

	)

104 
	#_IO_IN_BACKUP
 0x100

	)

105 
	#_IO_LINE_BUF
 0x200

	)

106 
	#_IO_TIED_PUT_GET
 0x400

	)

107 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

108 
	#_IO_IS_APPENDING
 0x1000

	)

109 
	#_IO_IS_FILEBUF
 0x2000

	)

110 
	#_IO_BAD_SEEN
 0x4000

	)

111 
	#_IO_USER_LOCK
 0x8000

	)

113 
	#_IO_FLAGS2_MMAP
 1

	)

114 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

115 #ifde‡
_LIBC


116 
	#_IO_FLAGS2_FORTIFY
 4

	)

118 
	#_IO_FLAGS2_USER_WBUF
 8

	)

119 #ifde‡
_LIBC


120 
	#_IO_FLAGS2_SCANF_STD
 16

	)

121 
	#_IO_FLAGS2_NOCLOSE
 32

	)

122 
	#_IO_FLAGS2_CLOEXEC
 64

	)

126 
	#_IO_SKIPWS
 01

	)

127 
	#_IO_LEFT
 02

	)

128 
	#_IO_RIGHT
 04

	)

129 
	#_IO_INTERNAL
 010

	)

130 
	#_IO_DEC
 020

	)

131 
	#_IO_OCT
 040

	)

132 
	#_IO_HEX
 0100

	)

133 
	#_IO_SHOWBASE
 0200

	)

134 
	#_IO_SHOWPOINT
 0400

	)

135 
	#_IO_UPPERCASE
 01000

	)

136 
	#_IO_SHOWPOS
 02000

	)

137 
	#_IO_SCIENTIFIC
 04000

	)

138 
	#_IO_FIXED
 010000

	)

139 
	#_IO_UNITBUF
 020000

	)

140 
	#_IO_STDIO
 040000

	)

141 
	#_IO_DONT_CLOSE
 0100000

	)

142 
	#_IO_BOOLALPHA
 0200000

	)

145 
_IO_jump_t
; 
	g_IO_FILE
;

148 #ifde‡
_IO_MTSAFE_IO


149 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

150 
	~<bôs/°dio-lock.h
>

155 
	t_IO_lock_t
;

161 
	s_IO_m¨kî
 {

162 
_IO_m¨kî
 *
	m_√xt
;

163 
_IO_FILE
 *
	m_sbuf
;

167 
	m_pos
;

169 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

170 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

171 
	mpublic
:

172 
°ªamm¨kî
(
°ªambuf
 *
sb
);

173 ~
°ªamm¨kî
();

174 
ßvög
(Ë{  
	m_•os
 == -2; }

175 
dñè
(
°ªamm¨kî
&);

176 
dñè
();

181 
	e__codecvt_ªsu…


183 
	m__codecvt_ok
,

184 
	m__codecvt_∑πül
,

185 
	m__codecvt_îr‹
,

186 
	m__codecvt_noc⁄v


189 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


192 
	s_IO_codecvt


194 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

195 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

196 
	m__mb°©e_t
 *,

197 c⁄° 
	mwch¨_t
 *,

198 c⁄° 
	mwch¨_t
 *,

199 c⁄° 
	mwch¨_t
 **, *,

201 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

202 
	m__mb°©e_t
 *, *,

204 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

205 
	m__mb°©e_t
 *,

207 c⁄° **, 
	mwch¨_t
 *,

208 
	mwch¨_t
 *, wchar_t **);

209 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

210 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

211 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

212 c⁄° *, c⁄° *, 
	m_IO_size_t
);

213 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

215 
_IO_ic⁄v_t
 
	m__cd_ö
;

216 
_IO_ic⁄v_t
 
	m__cd_out
;

220 
	s_IO_wide_d©a


222 
wch¨_t
 *
	m_IO_ªad_±r
;

223 
wch¨_t
 *
	m_IO_ªad_íd
;

224 
wch¨_t
 *
	m_IO_ªad_ba£
;

225 
wch¨_t
 *
	m_IO_wrôe_ba£
;

226 
wch¨_t
 *
	m_IO_wrôe_±r
;

227 
wch¨_t
 *
	m_IO_wrôe_íd
;

228 
wch¨_t
 *
	m_IO_buf_ba£
;

229 
wch¨_t
 *
	m_IO_buf_íd
;

231 
wch¨_t
 *
	m_IO_ßve_ba£
;

232 
wch¨_t
 *
	m_IO_backup_ba£
;

234 
wch¨_t
 *
	m_IO_ßve_íd
;

236 
__mb°©e_t
 
	m_IO_°©e
;

237 
__mb°©e_t
 
	m_IO_œ°_°©e
;

238 
_IO_codecvt
 
	m_codecvt
;

240 
wch¨_t
 
	m_sh‹tbuf
[1];

242 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

246 
	s_IO_FILE
 {

247 
	m_Êags
;

248 
	#_IO_fûe_Êags
 
_Êags


	)

252 * 
	m_IO_ªad_±r
;

253 * 
	m_IO_ªad_íd
;

254 * 
	m_IO_ªad_ba£
;

255 * 
	m_IO_wrôe_ba£
;

256 * 
	m_IO_wrôe_±r
;

257 * 
	m_IO_wrôe_íd
;

258 * 
	m_IO_buf_ba£
;

259 * 
	m_IO_buf_íd
;

261 *
	m_IO_ßve_ba£
;

262 *
	m_IO_backup_ba£
;

263 *
	m_IO_ßve_íd
;

265 
_IO_m¨kî
 *
	m_m¨kîs
;

267 
_IO_FILE
 *
	m_chaö
;

269 
	m_fûío
;

271 
	m_blksize
;

273 
	m_Êags2
;

275 
_IO_off_t
 
	m_ﬁd_off£t
;

277 
	#__HAVE_COLUMN


	)

279 
	m_cur_cﬁumn
;

280 sig√d 
	m_vèbÀ_off£t
;

281 
	m_sh‹tbuf
[1];

285 
_IO_lock_t
 *
	m_lock
;

286 #ifde‡
_IO_USE_OLD_IO_FILE


289 
	s_IO_FILE_com∂ëe


291 
_IO_FILE
 
	m_fûe
;

293 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

294 
_IO_off64_t
 
	m_off£t
;

295 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


297 
_IO_codecvt
 *
	m_codecvt
;

298 
_IO_wide_d©a
 *
	m_wide_d©a
;

299 
_IO_FILE
 *
	m_‰ìªs_li°
;

300 *
	m_‰ìªs_buf
;

301 
size_t
 
	m_‰ìªs_size
;

303 *
	m__∑d1
;

304 *
	m__∑d2
;

305 *
	m__∑d3
;

306 *
	m__∑d4
;

307 
size_t
 
	m__∑d5
;

309 
	m_mode
;

311 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

315 #i‚de‡
__˝lu•lus


316 
_IO_FILE
 
	t_IO_FILE
;

319 
	g_IO_FILE_∂us
;

321 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

322 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

323 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

324 #i‚de‡
_LIBC


325 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

326 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

327 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

329 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

330 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

331 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

339 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

347 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

348 
	tsize_t
 
	t__n
);

356 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

359 
	t__io_˛o£_‚
 (*
	t__cookõ
);

362 #ifde‡
_GNU_SOURCE


364 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

365 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

366 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

367 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

372 
__io_ªad_‚
 *
	mªad
;

373 
__io_wrôe_‚
 *
	mwrôe
;

374 
__io_£ek_‚
 *
	m£ek
;

375 
__io_˛o£_‚
 *
	m˛o£
;

376 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

377 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

379 
	g_IO_cookõ_fûe
;

382 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

383 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

387 #ifde‡
__˝lu•lus


391 
__undîÊow
 (
_IO_FILE
 *);

392 
__uÊow
 (
_IO_FILE
 *);

393 
__ovîÊow
 (
_IO_FILE
 *, );

394 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


395 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

396 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

397 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

400 #i‡ 
__GNUC__
 >= 3

401 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

403 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

406 
	#_IO_gëc_u∆ocked
(
_Â
) \

407 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

408 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

409 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

410 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

411 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

412 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

413 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

414 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

415 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

416 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

418 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


419 
	#_IO_gëwc_u∆ocked
(
_Â
) \

420 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

421 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

422 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

423 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

424 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

425 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

426 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

427 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

428 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

429 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

432 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

433 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

435 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

436 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

437 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

438 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

440 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

443 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

444 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

446 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

447 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

448 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

450 #ifde‡
_IO_MTSAFE_IO


451 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

452 
	#_IO_Êockfûe
(
_Â
) \

453 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

454 
	#_IO_fu∆ockfûe
(
_Â
) \

455 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

457 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

458 
	#_IO_Êockfûe
(
_Â
Ë

	)

459 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

460 
	#_IO_·rylockfûe
(
_Â
Ë

	)

461 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

462 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

465 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

466 
_IO_va_li°
, *
__ª°ri˘
);

467 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

468 
_IO_va_li°
);

469 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

470 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

472 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

473 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

475 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

477 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


478 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

479 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

480 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

481 #i‡
__GNUC__
 >= 2

484 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


485 
	~<shlib-com∑t.h
>

486 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

487 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

488 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

489 c⁄° 
_IO_°dö_u£d
;

490 
wók_exã∫
 (
_IO_°dö_u£d
);

493 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


494 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

498 
	#_IO_fwide
(
__Â
, 
__mode
) \

499 ({ 
__ªsu…
 = (
__mode
); \

500 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

502 i‡((
__Â
)->
_mode
 == 0) \

504 (
__Â
)->
_mode
 = -1; \

505 
__ªsu…
 = (
__Â
)->
_mode
; \

507 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

508 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

510 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

511 
__ªsu…
; })

	)

514 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

515 
_IO_va_li°
, *
__ª°ri˘
);

516 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

517 
_IO_va_li°
);

518 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

519 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

522 #ifde‡
__LDBL_COMPAT


523 
	~<bôs/libio-ldbl.h
>

526 #ifde‡
__˝lu•lus


	@/usr/include/sys/types.h

22 #i‚def 
_SYS_TYPES_H


23 
	#_SYS_TYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifdef 
__USE_BSD


32 #i‚de‡
__u_ch¨_deföed


33 
__u_ch¨
 
	tu_ch¨
;

34 
__u_sh‹t
 
	tu_sh‹t
;

35 
__u_öt
 
	tu_öt
;

36 
__u_l⁄g
 
	tu_l⁄g
;

37 
__quad_t
 
	tquad_t
;

38 
__u_quad_t
 
	tu_quad_t
;

39 
__fsid_t
 
	tfsid_t
;

40 
	#__u_ch¨_deföed


	)

44 
__loff_t
 
	tloff_t
;

46 #i‚de‡
__öo_t_deföed


47 #i‚de‡
__USE_FILE_OFFSET64


48 
__öo_t
 
	töo_t
;

50 
__öo64_t
 
	töo_t
;

52 
	#__öo_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


55 
__öo64_t
 
	töo64_t
;

56 
	#__öo64_t_deföed


	)

59 #i‚de‡
__dev_t_deföed


60 
__dev_t
 
	tdev_t
;

61 
	#__dev_t_deföed


	)

64 #i‚de‡
__gid_t_deföed


65 
__gid_t
 
	tgid_t
;

66 
	#__gid_t_deföed


	)

69 #i‚de‡
__mode_t_deföed


70 
__mode_t
 
	tmode_t
;

71 
	#__mode_t_deföed


	)

74 #i‚de‡
__∆ök_t_deföed


75 
__∆ök_t
 
	t∆ök_t
;

76 
	#__∆ök_t_deföed


	)

79 #i‚de‡
__uid_t_deföed


80 
__uid_t
 
	tuid_t
;

81 
	#__uid_t_deföed


	)

84 #i‚de‡
__off_t_deföed


85 #i‚de‡
__USE_FILE_OFFSET64


86 
__off_t
 
	toff_t
;

88 
__off64_t
 
	toff_t
;

90 
	#__off_t_deföed


	)

92 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


93 
__off64_t
 
	toff64_t
;

94 
	#__off64_t_deföed


	)

97 #i‚de‡
__pid_t_deföed


98 
__pid_t
 
	tpid_t
;

99 
	#__pid_t_deföed


	)

102 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

103 && !
deföed
 
__id_t_deföed


104 
__id_t
 
	tid_t
;

105 
	#__id_t_deföed


	)

108 #i‚de‡
__ssize_t_deföed


109 
__ssize_t
 
	tssize_t
;

110 
	#__ssize_t_deföed


	)

113 #ifdef 
__USE_BSD


114 #i‚de‡
__daddr_t_deföed


115 
__daddr_t
 
	tdaddr_t
;

116 
__ˇddr_t
 
	tˇddr_t
;

117 
	#__daddr_t_deföed


	)

121 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


122 
__key_t
 
	tkey_t
;

123 
	#__key_t_deföed


	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#__√ed_˛ock_t


	)

129 
	#__√ed_time_t


	)

130 
	#__√ed_timî_t


	)

131 
	#__√ed_˛ockid_t


	)

132 
	~<time.h
>

134 #ifde‡
__USE_XOPEN


135 #i‚de‡
__u£c⁄ds_t_deföed


136 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

137 
	#__u£c⁄ds_t_deföed


	)

139 #i‚de‡
__su£c⁄ds_t_deföed


140 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

141 
	#__su£c⁄ds_t_deföed


	)

145 
	#__√ed_size_t


	)

146 
	~<°ddef.h
>

148 #ifde‡
__USE_MISC


150 
	tul⁄g
;

151 
	tush‹t
;

152 
	tuöt
;

157 #i‡!
__GNUC_PREREQ
 (2, 7)

160 #i‚de‡
__öt8_t_deföed


161 
	#__öt8_t_deföed


	)

162 
	töt8_t
;

163 
	töt16_t
;

164 
	töt32_t
;

165 #i‡
__WORDSIZE
 == 64

166 
	töt64_t
;

167 #ñi‡
__GLIBC_HAVE_LONG_LONG


168 
__exãnsi⁄__
 
	töt64_t
;

173 
	tu_öt8_t
;

174 
	tu_öt16_t
;

175 
	tu_öt32_t
;

176 #i‡
__WORDSIZE
 == 64

177 
	tu_öt64_t
;

178 #ñi‡
__GLIBC_HAVE_LONG_LONG


179 
__exãnsi⁄__
 
	tu_öt64_t
;

182 
	tªgi°î_t
;

187 
	#__ötN_t
(
N
, 
MODE
) \

188 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

189 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

190 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

192 #i‚de‡
	t__öt8_t_deföed


193 
	t__öt8_t_deföed


	)

194 
	t__ötN_t
 (8, 
	t__QI__
);

195 
__ötN_t
 (16, 
__HI__
);

196 
__ötN_t
 (32, 
__SI__
);

197 
__ötN_t
 (64, 
__DI__
);

200 
__u_ötN_t
 (8, 
__QI__
);

201 
__u_ötN_t
 (16, 
__HI__
);

202 
__u_ötN_t
 (32, 
__SI__
);

203 
__u_ötN_t
 (64, 
__DI__
);

205 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

211 
	#__BIT_TYPES_DEFINED__
 1

	)

214 #ifdef 
__USE_BSD


216 
	~<ídün.h
>

219 
	~<sys/£À˘.h
>

222 
	~<sys/sysma¸os.h
>

226 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

227 && !
deföed
 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/asm/unistd_32.h

1 #i‚de‡
_ASM_X86_UNISTD_32_H


2 
	#_ASM_X86_UNISTD_32_H
 1

	)

4 
	#__NR_ª°¨t_sysˇŒ
 0

	)

5 
	#__NR_exô
 1

	)

6 
	#__NR_f‹k
 2

	)

7 
	#__NR_ªad
 3

	)

8 
	#__NR_wrôe
 4

	)

9 
	#__NR_›í
 5

	)

10 
	#__NR_˛o£
 6

	)

11 
	#__NR_waôpid
 7

	)

12 
	#__NR_¸ót
 8

	)

13 
	#__NR_lök
 9

	)

14 
	#__NR_u∆ök
 10

	)

15 
	#__NR_execve
 11

	)

16 
	#__NR_chdú
 12

	)

17 
	#__NR_time
 13

	)

18 
	#__NR_mknod
 14

	)

19 
	#__NR_chmod
 15

	)

20 
	#__NR_lchown
 16

	)

21 
	#__NR_bªak
 17

	)

22 
	#__NR_ﬁd°©
 18

	)

23 
	#__NR_l£ek
 19

	)

24 
	#__NR_gëpid
 20

	)

25 
	#__NR_mou¡
 21

	)

26 
	#__NR_umou¡
 22

	)

27 
	#__NR_£tuid
 23

	)

28 
	#__NR_gëuid
 24

	)

29 
	#__NR_°ime
 25

	)

30 
	#__NR_±ø˚
 26

	)

31 
	#__NR_Æ¨m
 27

	)

32 
	#__NR_ﬁdf°©
 28

	)

33 
	#__NR_∑u£
 29

	)

34 
	#__NR_utime
 30

	)

35 
	#__NR_°ty
 31

	)

36 
	#__NR_gây
 32

	)

37 
	#__NR_ac˚ss
 33

	)

38 
	#__NR_ni˚
 34

	)

39 
	#__NR_·ime
 35

	)

40 
	#__NR_sync
 36

	)

41 
	#__NR_kûl
 37

	)

42 
	#__NR_ª«me
 38

	)

43 
	#__NR_mkdú
 39

	)

44 
	#__NR_rmdú
 40

	)

45 
	#__NR_dup
 41

	)

46 
	#__NR_pùe
 42

	)

47 
	#__NR_times
 43

	)

48 
	#__NR_¥of
 44

	)

49 
	#__NR_brk
 45

	)

50 
	#__NR_£tgid
 46

	)

51 
	#__NR_gëgid
 47

	)

52 
	#__NR_sig«l
 48

	)

53 
	#__NR_gëeuid
 49

	)

54 
	#__NR_gëegid
 50

	)

55 
	#__NR_ac˘
 51

	)

56 
	#__NR_umou¡2
 52

	)

57 
	#__NR_lock
 53

	)

58 
	#__NR_io˘l
 54

	)

59 
	#__NR_f˙é
 55

	)

60 
	#__NR_mpx
 56

	)

61 
	#__NR_£çgid
 57

	)

62 
	#__NR_ulimô
 58

	)

63 
	#__NR_ﬁdﬁdu«me
 59

	)

64 
	#__NR_umask
 60

	)

65 
	#__NR_chroŸ
 61

	)

66 
	#__NR_u°©
 62

	)

67 
	#__NR_dup2
 63

	)

68 
	#__NR_gëµid
 64

	)

69 
	#__NR_gëpgΩ
 65

	)

70 
	#__NR_£tsid
 66

	)

71 
	#__NR_siga˘i⁄
 67

	)

72 
	#__NR_sgëmask
 68

	)

73 
	#__NR_s£tmask
 69

	)

74 
	#__NR_£åeuid
 70

	)

75 
	#__NR_£åegid
 71

	)

76 
	#__NR_sigsu•íd
 72

	)

77 
	#__NR_sig≥ndög
 73

	)

78 
	#__NR_£tho°«me
 74

	)

79 
	#__NR_£ålimô
 75

	)

80 
	#__NR_gëæimô
 76

	)

81 
	#__NR_gërußge
 77

	)

82 
	#__NR_gëtimeofday
 78

	)

83 
	#__NR_£âimeofday
 79

	)

84 
	#__NR_gëgroups
 80

	)

85 
	#__NR_£tgroups
 81

	)

86 
	#__NR_£À˘
 82

	)

87 
	#__NR_symlök
 83

	)

88 
	#__NR_ﬁdl°©
 84

	)

89 
	#__NR_ªadlök
 85

	)

90 
	#__NR_u£lib
 86

	)

91 
	#__NR_sw≠⁄
 87

	)

92 
	#__NR_ªboŸ
 88

	)

93 
	#__NR_ªaddú
 89

	)

94 
	#__NR_mm≠
 90

	)

95 
	#__NR_munm≠
 91

	)

96 
	#__NR_åunˇã
 92

	)

97 
	#__NR_·runˇã
 93

	)

98 
	#__NR_fchmod
 94

	)

99 
	#__NR_fchown
 95

	)

100 
	#__NR_gë¥i‹ôy
 96

	)

101 
	#__NR_£çri‹ôy
 97

	)

102 
	#__NR_¥ofû
 98

	)

103 
	#__NR_°©fs
 99

	)

104 
	#__NR_f°©fs
 100

	)

105 
	#__NR_i›îm
 101

	)

106 
	#__NR_sockëˇŒ
 102

	)

107 
	#__NR_sy¶og
 103

	)

108 
	#__NR_£tôimî
 104

	)

109 
	#__NR_gëôimî
 105

	)

110 
	#__NR_°©
 106

	)

111 
	#__NR_l°©
 107

	)

112 
	#__NR_f°©
 108

	)

113 
	#__NR_ﬁdu«me
 109

	)

114 
	#__NR_i›l
 110

	)

115 
	#__NR_vh™gup
 111

	)

116 
	#__NR_idÀ
 112

	)

117 
	#__NR_vm86ﬁd
 113

	)

118 
	#__NR_waô4
 114

	)

119 
	#__NR_sw≠off
 115

	)

120 
	#__NR_sysöfo
 116

	)

121 
	#__NR_ùc
 117

	)

122 
	#__NR_fsync
 118

	)

123 
	#__NR_sigªtu∫
 119

	)

124 
	#__NR_˛⁄e
 120

	)

125 
	#__NR_£tdomaö«me
 121

	)

126 
	#__NR_u«me
 122

	)

127 
	#__NR_modify_ldt
 123

	)

128 
	#__NR_adjtimex
 124

	)

129 
	#__NR_m¥Ÿe˘
 125

	)

130 
	#__NR_sig¥ocmask
 126

	)

131 
	#__NR_¸óã_moduÀ
 127

	)

132 
	#__NR_öô_moduÀ
 128

	)

133 
	#__NR_dñëe_moduÀ
 129

	)

134 
	#__NR_gë_kî√l_syms
 130

	)

135 
	#__NR_quŸa˘l
 131

	)

136 
	#__NR_gëpgid
 132

	)

137 
	#__NR_fchdú
 133

	)

138 
	#__NR_bdÊush
 134

	)

139 
	#__NR_sysfs
 135

	)

140 
	#__NR_≥rs⁄Æôy
 136

	)

141 
	#__NR_afs_sysˇŒ
 137

	)

142 
	#__NR_£tfsuid
 138

	)

143 
	#__NR_£tfsgid
 139

	)

144 
	#__NR__Œ£ek
 140

	)

145 
	#__NR_gëdíts
 141

	)

146 
	#__NR__√w£À˘
 142

	)

147 
	#__NR_Êock
 143

	)

148 
	#__NR_msync
 144

	)

149 
	#__NR_ªadv
 145

	)

150 
	#__NR_wrôev
 146

	)

151 
	#__NR_gësid
 147

	)

152 
	#__NR_fd©async
 148

	)

153 
	#__NR__sys˘l
 149

	)

154 
	#__NR_mlock
 150

	)

155 
	#__NR_mu∆ock
 151

	)

156 
	#__NR_mlockÆl
 152

	)

157 
	#__NR_mu∆ockÆl
 153

	)

158 
	#__NR_sched_£ç¨am
 154

	)

159 
	#__NR_sched_gë∑øm
 155

	)

160 
	#__NR_sched_£tscheduÀr
 156

	)

161 
	#__NR_sched_gëscheduÀr
 157

	)

162 
	#__NR_sched_yõld
 158

	)

163 
	#__NR_sched_gë_¥i‹ôy_max
 159

	)

164 
	#__NR_sched_gë_¥i‹ôy_mö
 160

	)

165 
	#__NR_sched_º_gë_öãrvÆ
 161

	)

166 
	#__NR_«no¶ìp
 162

	)

167 
	#__NR_mªm≠
 163

	)

168 
	#__NR_£åesuid
 164

	)

169 
	#__NR_gëªsuid
 165

	)

170 
	#__NR_vm86
 166

	)

171 
	#__NR_quîy_moduÀ
 167

	)

172 
	#__NR_pﬁl
 168

	)

173 
	#__NR_nfs£rv˘l
 169

	)

174 
	#__NR_£åesgid
 170

	)

175 
	#__NR_gëªsgid
 171

	)

176 
	#__NR_¥˘l
 172

	)

177 
	#__NR_π_sigªtu∫
 173

	)

178 
	#__NR_π_siga˘i⁄
 174

	)

179 
	#__NR_π_sig¥ocmask
 175

	)

180 
	#__NR_π_sig≥ndög
 176

	)

181 
	#__NR_π_sigtimedwaô
 177

	)

182 
	#__NR_π_sigqueueöfo
 178

	)

183 
	#__NR_π_sigsu•íd
 179

	)

184 
	#__NR_¥ód64
 180

	)

185 
	#__NR_pwrôe64
 181

	)

186 
	#__NR_chown
 182

	)

187 
	#__NR_gëcwd
 183

	)

188 
	#__NR_ˇpgë
 184

	)

189 
	#__NR_ˇp£t
 185

	)

190 
	#__NR_sigÆt°ack
 186

	)

191 
	#__NR_£ndfûe
 187

	)

192 
	#__NR_gëpmsg
 188

	)

193 
	#__NR_puçmsg
 189

	)

194 
	#__NR_vf‹k
 190

	)

195 
	#__NR_ugëæimô
 191

	)

196 
	#__NR_mm≠2
 192

	)

197 
	#__NR_åunˇã64
 193

	)

198 
	#__NR_·runˇã64
 194

	)

199 
	#__NR_°©64
 195

	)

200 
	#__NR_l°©64
 196

	)

201 
	#__NR_f°©64
 197

	)

202 
	#__NR_lchown32
 198

	)

203 
	#__NR_gëuid32
 199

	)

204 
	#__NR_gëgid32
 200

	)

205 
	#__NR_gëeuid32
 201

	)

206 
	#__NR_gëegid32
 202

	)

207 
	#__NR_£åeuid32
 203

	)

208 
	#__NR_£åegid32
 204

	)

209 
	#__NR_gëgroups32
 205

	)

210 
	#__NR_£tgroups32
 206

	)

211 
	#__NR_fchown32
 207

	)

212 
	#__NR_£åesuid32
 208

	)

213 
	#__NR_gëªsuid32
 209

	)

214 
	#__NR_£åesgid32
 210

	)

215 
	#__NR_gëªsgid32
 211

	)

216 
	#__NR_chown32
 212

	)

217 
	#__NR_£tuid32
 213

	)

218 
	#__NR_£tgid32
 214

	)

219 
	#__NR_£tfsuid32
 215

	)

220 
	#__NR_£tfsgid32
 216

	)

221 
	#__NR_pivŸ_roŸ
 217

	)

222 
	#__NR_möc‹e
 218

	)

223 
	#__NR_madvi£
 219

	)

224 
	#__NR_gëdíts64
 220

	)

225 
	#__NR_f˙é64
 221

	)

226 
	#__NR_gëtid
 224

	)

227 
	#__NR_ªadahód
 225

	)

228 
	#__NR_£tx©å
 226

	)

229 
	#__NR_l£tx©å
 227

	)

230 
	#__NR_f£tx©å
 228

	)

231 
	#__NR_gëx©å
 229

	)

232 
	#__NR_lgëx©å
 230

	)

233 
	#__NR_fgëx©å
 231

	)

234 
	#__NR_li°x©å
 232

	)

235 
	#__NR_Œi°x©å
 233

	)

236 
	#__NR_Êi°x©å
 234

	)

237 
	#__NR_ªmovex©å
 235

	)

238 
	#__NR_Ãemovex©å
 236

	)

239 
	#__NR_‰emovex©å
 237

	)

240 
	#__NR_tkûl
 238

	)

241 
	#__NR_£ndfûe64
 239

	)

242 
	#__NR_fuãx
 240

	)

243 
	#__NR_sched_£èfföôy
 241

	)

244 
	#__NR_sched_gëafföôy
 242

	)

245 
	#__NR_£t_thªad_¨ó
 243

	)

246 
	#__NR_gë_thªad_¨ó
 244

	)

247 
	#__NR_io_£tup
 245

	)

248 
	#__NR_io_de°roy
 246

	)

249 
	#__NR_io_gëevíts
 247

	)

250 
	#__NR_io_submô
 248

	)

251 
	#__NR_io_ˇn˚l
 249

	)

252 
	#__NR_Ádvi£64
 250

	)

253 
	#__NR_exô_group
 252

	)

254 
	#__NR_lookup_dcookõ
 253

	)

255 
	#__NR_ïﬁl_¸óã
 254

	)

256 
	#__NR_ïﬁl_˘l
 255

	)

257 
	#__NR_ïﬁl_waô
 256

	)

258 
	#__NR_ªm≠_fûe_∑ges
 257

	)

259 
	#__NR_£t_tid_addªss
 258

	)

260 
	#__NR_timî_¸óã
 259

	)

261 
	#__NR_timî_£âime
 260

	)

262 
	#__NR_timî_gëtime
 261

	)

263 
	#__NR_timî_gëovîrun
 262

	)

264 
	#__NR_timî_dñëe
 263

	)

265 
	#__NR_˛ock_£âime
 264

	)

266 
	#__NR_˛ock_gëtime
 265

	)

267 
	#__NR_˛ock_gëªs
 266

	)

268 
	#__NR_˛ock_«no¶ìp
 267

	)

269 
	#__NR_°©fs64
 268

	)

270 
	#__NR_f°©fs64
 269

	)

271 
	#__NR_tgkûl
 270

	)

272 
	#__NR_utimes
 271

	)

273 
	#__NR_Ádvi£64_64
 272

	)

274 
	#__NR_v£rvî
 273

	)

275 
	#__NR_mböd
 274

	)

276 
	#__NR_gë_mempﬁicy
 275

	)

277 
	#__NR_£t_mempﬁicy
 276

	)

278 
	#__NR_mq_›í
 277

	)

279 
	#__NR_mq_u∆ök
 278

	)

280 
	#__NR_mq_timed£nd
 279

	)

281 
	#__NR_mq_timedª˚ive
 280

	)

282 
	#__NR_mq_nŸify
 281

	)

283 
	#__NR_mq_gë£èâr
 282

	)

284 
	#__NR_kexec_lﬂd
 283

	)

285 
	#__NR_waôid
 284

	)

286 
	#__NR_add_key
 286

	)

287 
	#__NR_ªque°_key
 287

	)

288 
	#__NR_key˘l
 288

	)

289 
	#__NR_i›rio_£t
 289

	)

290 
	#__NR_i›rio_gë
 290

	)

291 
	#__NR_öŸify_öô
 291

	)

292 
	#__NR_öŸify_add_w©ch
 292

	)

293 
	#__NR_öŸify_rm_w©ch
 293

	)

294 
	#__NR_migøã_∑ges
 294

	)

295 
	#__NR_›í©
 295

	)

296 
	#__NR_mkdú©
 296

	)

297 
	#__NR_mknod©
 297

	)

298 
	#__NR_fchow«t
 298

	)

299 
	#__NR_futimeßt
 299

	)

300 
	#__NR_f°©©64
 300

	)

301 
	#__NR_u∆ök©
 301

	)

302 
	#__NR_ª«mót
 302

	)

303 
	#__NR_lök©
 303

	)

304 
	#__NR_symlök©
 304

	)

305 
	#__NR_ªadlök©
 305

	)

306 
	#__NR_fchmod©
 306

	)

307 
	#__NR_Ác˚sßt
 307

	)

308 
	#__NR_p£À˘6
 308

	)

309 
	#__NR_µﬁl
 309

	)

310 
	#__NR_unsh¨e
 310

	)

311 
	#__NR_£t_robu°_li°
 311

	)

312 
	#__NR_gë_robu°_li°
 312

	)

313 
	#__NR_•li˚
 313

	)

314 
	#__NR_sync_fûe_ønge
 314

	)

315 
	#__NR_ãe
 315

	)

316 
	#__NR_vm•li˚
 316

	)

317 
	#__NR_move_∑ges
 317

	)

318 
	#__NR_gë˝u
 318

	)

319 
	#__NR_ïﬁl_pwaô
 319

	)

320 
	#__NR_utimíßt
 320

	)

321 
	#__NR_sig«lfd
 321

	)

322 
	#__NR_timîfd_¸óã
 322

	)

323 
	#__NR_evítfd
 323

	)

324 
	#__NR_ÁŒoˇã
 324

	)

325 
	#__NR_timîfd_£âime
 325

	)

326 
	#__NR_timîfd_gëtime
 326

	)

327 
	#__NR_sig«lfd4
 327

	)

328 
	#__NR_evítfd2
 328

	)

329 
	#__NR_ïﬁl_¸óã1
 329

	)

330 
	#__NR_dup3
 330

	)

331 
	#__NR_pùe2
 331

	)

332 
	#__NR_öŸify_öô1
 332

	)

333 
	#__NR_¥ódv
 333

	)

334 
	#__NR_pwrôev
 334

	)

335 
	#__NR_π_tgsigqueueöfo
 335

	)

336 
	#__NR_≥rf_evít_›í
 336

	)

337 
	#__NR_ªcvmmsg
 337

	)

338 
	#__NR_ÁnŸify_öô
 338

	)

339 
	#__NR_ÁnŸify_m¨k
 339

	)

340 
	#__NR_¥limô64
 340

	)

341 
	#__NR_«me_to_h™dÀ_©
 341

	)

342 
	#__NR_›í_by_h™dÀ_©
 342

	)

343 
	#__NR_˛ock_adjtime
 343

	)

344 
	#__NR_syncfs
 344

	)

345 
	#__NR_£ndmmsg
 345

	)

346 
	#__NR_£äs
 346

	)

347 
	#__NR_¥o˚ss_vm_ªadv
 347

	)

348 
	#__NR_¥o˚ss_vm_wrôev
 348

	)

349 
	#__NR_kcmp
 349

	)

350 
	#__NR_föô_moduÀ
 350

	)

	@/usr/include/asm/unistd_64.h

1 #i‚de‡
_ASM_X86_UNISTD_64_H


2 
	#_ASM_X86_UNISTD_64_H
 1

	)

4 
	#__NR_ªad
 0

	)

5 
	#__NR_wrôe
 1

	)

6 
	#__NR_›í
 2

	)

7 
	#__NR_˛o£
 3

	)

8 
	#__NR_°©
 4

	)

9 
	#__NR_f°©
 5

	)

10 
	#__NR_l°©
 6

	)

11 
	#__NR_pﬁl
 7

	)

12 
	#__NR_l£ek
 8

	)

13 
	#__NR_mm≠
 9

	)

14 
	#__NR_m¥Ÿe˘
 10

	)

15 
	#__NR_munm≠
 11

	)

16 
	#__NR_brk
 12

	)

17 
	#__NR_π_siga˘i⁄
 13

	)

18 
	#__NR_π_sig¥ocmask
 14

	)

19 
	#__NR_π_sigªtu∫
 15

	)

20 
	#__NR_io˘l
 16

	)

21 
	#__NR_¥ód64
 17

	)

22 
	#__NR_pwrôe64
 18

	)

23 
	#__NR_ªadv
 19

	)

24 
	#__NR_wrôev
 20

	)

25 
	#__NR_ac˚ss
 21

	)

26 
	#__NR_pùe
 22

	)

27 
	#__NR_£À˘
 23

	)

28 
	#__NR_sched_yõld
 24

	)

29 
	#__NR_mªm≠
 25

	)

30 
	#__NR_msync
 26

	)

31 
	#__NR_möc‹e
 27

	)

32 
	#__NR_madvi£
 28

	)

33 
	#__NR_shmgë
 29

	)

34 
	#__NR_shm©
 30

	)

35 
	#__NR_shm˘l
 31

	)

36 
	#__NR_dup
 32

	)

37 
	#__NR_dup2
 33

	)

38 
	#__NR_∑u£
 34

	)

39 
	#__NR_«no¶ìp
 35

	)

40 
	#__NR_gëôimî
 36

	)

41 
	#__NR_Æ¨m
 37

	)

42 
	#__NR_£tôimî
 38

	)

43 
	#__NR_gëpid
 39

	)

44 
	#__NR_£ndfûe
 40

	)

45 
	#__NR_sockë
 41

	)

46 
	#__NR_c⁄√˘
 42

	)

47 
	#__NR_ac˚±
 43

	)

48 
	#__NR_£ndto
 44

	)

49 
	#__NR_ªcv‰om
 45

	)

50 
	#__NR_£ndmsg
 46

	)

51 
	#__NR_ªcvmsg
 47

	)

52 
	#__NR_shutdown
 48

	)

53 
	#__NR_böd
 49

	)

54 
	#__NR_li°í
 50

	)

55 
	#__NR_gësock«me
 51

	)

56 
	#__NR_gë≥î«me
 52

	)

57 
	#__NR_sockë∑ú
 53

	)

58 
	#__NR_£tsock›t
 54

	)

59 
	#__NR_gësock›t
 55

	)

60 
	#__NR_˛⁄e
 56

	)

61 
	#__NR_f‹k
 57

	)

62 
	#__NR_vf‹k
 58

	)

63 
	#__NR_execve
 59

	)

64 
	#__NR_exô
 60

	)

65 
	#__NR_waô4
 61

	)

66 
	#__NR_kûl
 62

	)

67 
	#__NR_u«me
 63

	)

68 
	#__NR_£mgë
 64

	)

69 
	#__NR_£m›
 65

	)

70 
	#__NR_£m˘l
 66

	)

71 
	#__NR_shmdt
 67

	)

72 
	#__NR_msggë
 68

	)

73 
	#__NR_msg¢d
 69

	)

74 
	#__NR_msgrcv
 70

	)

75 
	#__NR_msg˘l
 71

	)

76 
	#__NR_f˙é
 72

	)

77 
	#__NR_Êock
 73

	)

78 
	#__NR_fsync
 74

	)

79 
	#__NR_fd©async
 75

	)

80 
	#__NR_åunˇã
 76

	)

81 
	#__NR_·runˇã
 77

	)

82 
	#__NR_gëdíts
 78

	)

83 
	#__NR_gëcwd
 79

	)

84 
	#__NR_chdú
 80

	)

85 
	#__NR_fchdú
 81

	)

86 
	#__NR_ª«me
 82

	)

87 
	#__NR_mkdú
 83

	)

88 
	#__NR_rmdú
 84

	)

89 
	#__NR_¸ót
 85

	)

90 
	#__NR_lök
 86

	)

91 
	#__NR_u∆ök
 87

	)

92 
	#__NR_symlök
 88

	)

93 
	#__NR_ªadlök
 89

	)

94 
	#__NR_chmod
 90

	)

95 
	#__NR_fchmod
 91

	)

96 
	#__NR_chown
 92

	)

97 
	#__NR_fchown
 93

	)

98 
	#__NR_lchown
 94

	)

99 
	#__NR_umask
 95

	)

100 
	#__NR_gëtimeofday
 96

	)

101 
	#__NR_gëæimô
 97

	)

102 
	#__NR_gërußge
 98

	)

103 
	#__NR_sysöfo
 99

	)

104 
	#__NR_times
 100

	)

105 
	#__NR_±ø˚
 101

	)

106 
	#__NR_gëuid
 102

	)

107 
	#__NR_sy¶og
 103

	)

108 
	#__NR_gëgid
 104

	)

109 
	#__NR_£tuid
 105

	)

110 
	#__NR_£tgid
 106

	)

111 
	#__NR_gëeuid
 107

	)

112 
	#__NR_gëegid
 108

	)

113 
	#__NR_£çgid
 109

	)

114 
	#__NR_gëµid
 110

	)

115 
	#__NR_gëpgΩ
 111

	)

116 
	#__NR_£tsid
 112

	)

117 
	#__NR_£åeuid
 113

	)

118 
	#__NR_£åegid
 114

	)

119 
	#__NR_gëgroups
 115

	)

120 
	#__NR_£tgroups
 116

	)

121 
	#__NR_£åesuid
 117

	)

122 
	#__NR_gëªsuid
 118

	)

123 
	#__NR_£åesgid
 119

	)

124 
	#__NR_gëªsgid
 120

	)

125 
	#__NR_gëpgid
 121

	)

126 
	#__NR_£tfsuid
 122

	)

127 
	#__NR_£tfsgid
 123

	)

128 
	#__NR_gësid
 124

	)

129 
	#__NR_ˇpgë
 125

	)

130 
	#__NR_ˇp£t
 126

	)

131 
	#__NR_π_sig≥ndög
 127

	)

132 
	#__NR_π_sigtimedwaô
 128

	)

133 
	#__NR_π_sigqueueöfo
 129

	)

134 
	#__NR_π_sigsu•íd
 130

	)

135 
	#__NR_sigÆt°ack
 131

	)

136 
	#__NR_utime
 132

	)

137 
	#__NR_mknod
 133

	)

138 
	#__NR_u£lib
 134

	)

139 
	#__NR_≥rs⁄Æôy
 135

	)

140 
	#__NR_u°©
 136

	)

141 
	#__NR_°©fs
 137

	)

142 
	#__NR_f°©fs
 138

	)

143 
	#__NR_sysfs
 139

	)

144 
	#__NR_gë¥i‹ôy
 140

	)

145 
	#__NR_£çri‹ôy
 141

	)

146 
	#__NR_sched_£ç¨am
 142

	)

147 
	#__NR_sched_gë∑øm
 143

	)

148 
	#__NR_sched_£tscheduÀr
 144

	)

149 
	#__NR_sched_gëscheduÀr
 145

	)

150 
	#__NR_sched_gë_¥i‹ôy_max
 146

	)

151 
	#__NR_sched_gë_¥i‹ôy_mö
 147

	)

152 
	#__NR_sched_º_gë_öãrvÆ
 148

	)

153 
	#__NR_mlock
 149

	)

154 
	#__NR_mu∆ock
 150

	)

155 
	#__NR_mlockÆl
 151

	)

156 
	#__NR_mu∆ockÆl
 152

	)

157 
	#__NR_vh™gup
 153

	)

158 
	#__NR_modify_ldt
 154

	)

159 
	#__NR_pivŸ_roŸ
 155

	)

160 
	#__NR__sys˘l
 156

	)

161 
	#__NR_¥˘l
 157

	)

162 
	#__NR_¨ch_¥˘l
 158

	)

163 
	#__NR_adjtimex
 159

	)

164 
	#__NR_£ålimô
 160

	)

165 
	#__NR_chroŸ
 161

	)

166 
	#__NR_sync
 162

	)

167 
	#__NR_ac˘
 163

	)

168 
	#__NR_£âimeofday
 164

	)

169 
	#__NR_mou¡
 165

	)

170 
	#__NR_umou¡2
 166

	)

171 
	#__NR_sw≠⁄
 167

	)

172 
	#__NR_sw≠off
 168

	)

173 
	#__NR_ªboŸ
 169

	)

174 
	#__NR_£tho°«me
 170

	)

175 
	#__NR_£tdomaö«me
 171

	)

176 
	#__NR_i›l
 172

	)

177 
	#__NR_i›îm
 173

	)

178 
	#__NR_¸óã_moduÀ
 174

	)

179 
	#__NR_öô_moduÀ
 175

	)

180 
	#__NR_dñëe_moduÀ
 176

	)

181 
	#__NR_gë_kî√l_syms
 177

	)

182 
	#__NR_quîy_moduÀ
 178

	)

183 
	#__NR_quŸa˘l
 179

	)

184 
	#__NR_nfs£rv˘l
 180

	)

185 
	#__NR_gëpmsg
 181

	)

186 
	#__NR_puçmsg
 182

	)

187 
	#__NR_afs_sysˇŒ
 183

	)

188 
	#__NR_tuxˇŒ
 184

	)

189 
	#__NR_£curôy
 185

	)

190 
	#__NR_gëtid
 186

	)

191 
	#__NR_ªadahód
 187

	)

192 
	#__NR_£tx©å
 188

	)

193 
	#__NR_l£tx©å
 189

	)

194 
	#__NR_f£tx©å
 190

	)

195 
	#__NR_gëx©å
 191

	)

196 
	#__NR_lgëx©å
 192

	)

197 
	#__NR_fgëx©å
 193

	)

198 
	#__NR_li°x©å
 194

	)

199 
	#__NR_Œi°x©å
 195

	)

200 
	#__NR_Êi°x©å
 196

	)

201 
	#__NR_ªmovex©å
 197

	)

202 
	#__NR_Ãemovex©å
 198

	)

203 
	#__NR_‰emovex©å
 199

	)

204 
	#__NR_tkûl
 200

	)

205 
	#__NR_time
 201

	)

206 
	#__NR_fuãx
 202

	)

207 
	#__NR_sched_£èfföôy
 203

	)

208 
	#__NR_sched_gëafföôy
 204

	)

209 
	#__NR_£t_thªad_¨ó
 205

	)

210 
	#__NR_io_£tup
 206

	)

211 
	#__NR_io_de°roy
 207

	)

212 
	#__NR_io_gëevíts
 208

	)

213 
	#__NR_io_submô
 209

	)

214 
	#__NR_io_ˇn˚l
 210

	)

215 
	#__NR_gë_thªad_¨ó
 211

	)

216 
	#__NR_lookup_dcookõ
 212

	)

217 
	#__NR_ïﬁl_¸óã
 213

	)

218 
	#__NR_ïﬁl_˘l_ﬁd
 214

	)

219 
	#__NR_ïﬁl_waô_ﬁd
 215

	)

220 
	#__NR_ªm≠_fûe_∑ges
 216

	)

221 
	#__NR_gëdíts64
 217

	)

222 
	#__NR_£t_tid_addªss
 218

	)

223 
	#__NR_ª°¨t_sysˇŒ
 219

	)

224 
	#__NR_£mtimed›
 220

	)

225 
	#__NR_Ádvi£64
 221

	)

226 
	#__NR_timî_¸óã
 222

	)

227 
	#__NR_timî_£âime
 223

	)

228 
	#__NR_timî_gëtime
 224

	)

229 
	#__NR_timî_gëovîrun
 225

	)

230 
	#__NR_timî_dñëe
 226

	)

231 
	#__NR_˛ock_£âime
 227

	)

232 
	#__NR_˛ock_gëtime
 228

	)

233 
	#__NR_˛ock_gëªs
 229

	)

234 
	#__NR_˛ock_«no¶ìp
 230

	)

235 
	#__NR_exô_group
 231

	)

236 
	#__NR_ïﬁl_waô
 232

	)

237 
	#__NR_ïﬁl_˘l
 233

	)

238 
	#__NR_tgkûl
 234

	)

239 
	#__NR_utimes
 235

	)

240 
	#__NR_v£rvî
 236

	)

241 
	#__NR_mböd
 237

	)

242 
	#__NR_£t_mempﬁicy
 238

	)

243 
	#__NR_gë_mempﬁicy
 239

	)

244 
	#__NR_mq_›í
 240

	)

245 
	#__NR_mq_u∆ök
 241

	)

246 
	#__NR_mq_timed£nd
 242

	)

247 
	#__NR_mq_timedª˚ive
 243

	)

248 
	#__NR_mq_nŸify
 244

	)

249 
	#__NR_mq_gë£èâr
 245

	)

250 
	#__NR_kexec_lﬂd
 246

	)

251 
	#__NR_waôid
 247

	)

252 
	#__NR_add_key
 248

	)

253 
	#__NR_ªque°_key
 249

	)

254 
	#__NR_key˘l
 250

	)

255 
	#__NR_i›rio_£t
 251

	)

256 
	#__NR_i›rio_gë
 252

	)

257 
	#__NR_öŸify_öô
 253

	)

258 
	#__NR_öŸify_add_w©ch
 254

	)

259 
	#__NR_öŸify_rm_w©ch
 255

	)

260 
	#__NR_migøã_∑ges
 256

	)

261 
	#__NR_›í©
 257

	)

262 
	#__NR_mkdú©
 258

	)

263 
	#__NR_mknod©
 259

	)

264 
	#__NR_fchow«t
 260

	)

265 
	#__NR_futimeßt
 261

	)

266 
	#__NR_√wf°©©
 262

	)

267 
	#__NR_u∆ök©
 263

	)

268 
	#__NR_ª«mót
 264

	)

269 
	#__NR_lök©
 265

	)

270 
	#__NR_symlök©
 266

	)

271 
	#__NR_ªadlök©
 267

	)

272 
	#__NR_fchmod©
 268

	)

273 
	#__NR_Ác˚sßt
 269

	)

274 
	#__NR_p£À˘6
 270

	)

275 
	#__NR_µﬁl
 271

	)

276 
	#__NR_unsh¨e
 272

	)

277 
	#__NR_£t_robu°_li°
 273

	)

278 
	#__NR_gë_robu°_li°
 274

	)

279 
	#__NR_•li˚
 275

	)

280 
	#__NR_ãe
 276

	)

281 
	#__NR_sync_fûe_ønge
 277

	)

282 
	#__NR_vm•li˚
 278

	)

283 
	#__NR_move_∑ges
 279

	)

284 
	#__NR_utimíßt
 280

	)

285 
	#__NR_ïﬁl_pwaô
 281

	)

286 
	#__NR_sig«lfd
 282

	)

287 
	#__NR_timîfd_¸óã
 283

	)

288 
	#__NR_evítfd
 284

	)

289 
	#__NR_ÁŒoˇã
 285

	)

290 
	#__NR_timîfd_£âime
 286

	)

291 
	#__NR_timîfd_gëtime
 287

	)

292 
	#__NR_ac˚±4
 288

	)

293 
	#__NR_sig«lfd4
 289

	)

294 
	#__NR_evítfd2
 290

	)

295 
	#__NR_ïﬁl_¸óã1
 291

	)

296 
	#__NR_dup3
 292

	)

297 
	#__NR_pùe2
 293

	)

298 
	#__NR_öŸify_öô1
 294

	)

299 
	#__NR_¥ódv
 295

	)

300 
	#__NR_pwrôev
 296

	)

301 
	#__NR_π_tgsigqueueöfo
 297

	)

302 
	#__NR_≥rf_evít_›í
 298

	)

303 
	#__NR_ªcvmmsg
 299

	)

304 
	#__NR_ÁnŸify_öô
 300

	)

305 
	#__NR_ÁnŸify_m¨k
 301

	)

306 
	#__NR_¥limô64
 302

	)

307 
	#__NR_«me_to_h™dÀ_©
 303

	)

308 
	#__NR_›í_by_h™dÀ_©
 304

	)

309 
	#__NR_˛ock_adjtime
 305

	)

310 
	#__NR_syncfs
 306

	)

311 
	#__NR_£ndmmsg
 307

	)

312 
	#__NR_£äs
 308

	)

313 
	#__NR_gë˝u
 309

	)

314 
	#__NR_¥o˚ss_vm_ªadv
 310

	)

315 
	#__NR_¥o˚ss_vm_wrôev
 311

	)

316 
	#__NR_kcmp
 312

	)

317 
	#__NR_föô_moduÀ
 313

	)

318 
	#__NR_ª«mót2
 316

	)

319 
	#__NR_kexec_fûe_lﬂd
 320

	)

	@/usr/include/asm/unistd_x32.h

1 #i‚de‡
_ASM_X86_UNISTD_X32_H


2 
	#_ASM_X86_UNISTD_X32_H
 1

	)

4 
	#__NR_ªad
 (
__X32_SYSCALL_BIT
 + 0)

	)

5 
	#__NR_wrôe
 (
__X32_SYSCALL_BIT
 + 1)

	)

6 
	#__NR_›í
 (
__X32_SYSCALL_BIT
 + 2)

	)

7 
	#__NR_˛o£
 (
__X32_SYSCALL_BIT
 + 3)

	)

8 
	#__NR_°©
 (
__X32_SYSCALL_BIT
 + 4)

	)

9 
	#__NR_f°©
 (
__X32_SYSCALL_BIT
 + 5)

	)

10 
	#__NR_l°©
 (
__X32_SYSCALL_BIT
 + 6)

	)

11 
	#__NR_pﬁl
 (
__X32_SYSCALL_BIT
 + 7)

	)

12 
	#__NR_l£ek
 (
__X32_SYSCALL_BIT
 + 8)

	)

13 
	#__NR_mm≠
 (
__X32_SYSCALL_BIT
 + 9)

	)

14 
	#__NR_m¥Ÿe˘
 (
__X32_SYSCALL_BIT
 + 10)

	)

15 
	#__NR_munm≠
 (
__X32_SYSCALL_BIT
 + 11)

	)

16 
	#__NR_brk
 (
__X32_SYSCALL_BIT
 + 12)

	)

17 
	#__NR_π_sig¥ocmask
 (
__X32_SYSCALL_BIT
 + 14)

	)

18 
	#__NR_¥ód64
 (
__X32_SYSCALL_BIT
 + 17)

	)

19 
	#__NR_pwrôe64
 (
__X32_SYSCALL_BIT
 + 18)

	)

20 
	#__NR_ac˚ss
 (
__X32_SYSCALL_BIT
 + 21)

	)

21 
	#__NR_pùe
 (
__X32_SYSCALL_BIT
 + 22)

	)

22 
	#__NR_£À˘
 (
__X32_SYSCALL_BIT
 + 23)

	)

23 
	#__NR_sched_yõld
 (
__X32_SYSCALL_BIT
 + 24)

	)

24 
	#__NR_mªm≠
 (
__X32_SYSCALL_BIT
 + 25)

	)

25 
	#__NR_msync
 (
__X32_SYSCALL_BIT
 + 26)

	)

26 
	#__NR_möc‹e
 (
__X32_SYSCALL_BIT
 + 27)

	)

27 
	#__NR_madvi£
 (
__X32_SYSCALL_BIT
 + 28)

	)

28 
	#__NR_shmgë
 (
__X32_SYSCALL_BIT
 + 29)

	)

29 
	#__NR_shm©
 (
__X32_SYSCALL_BIT
 + 30)

	)

30 
	#__NR_shm˘l
 (
__X32_SYSCALL_BIT
 + 31)

	)

31 
	#__NR_dup
 (
__X32_SYSCALL_BIT
 + 32)

	)

32 
	#__NR_dup2
 (
__X32_SYSCALL_BIT
 + 33)

	)

33 
	#__NR_∑u£
 (
__X32_SYSCALL_BIT
 + 34)

	)

34 
	#__NR_«no¶ìp
 (
__X32_SYSCALL_BIT
 + 35)

	)

35 
	#__NR_gëôimî
 (
__X32_SYSCALL_BIT
 + 36)

	)

36 
	#__NR_Æ¨m
 (
__X32_SYSCALL_BIT
 + 37)

	)

37 
	#__NR_£tôimî
 (
__X32_SYSCALL_BIT
 + 38)

	)

38 
	#__NR_gëpid
 (
__X32_SYSCALL_BIT
 + 39)

	)

39 
	#__NR_£ndfûe
 (
__X32_SYSCALL_BIT
 + 40)

	)

40 
	#__NR_sockë
 (
__X32_SYSCALL_BIT
 + 41)

	)

41 
	#__NR_c⁄√˘
 (
__X32_SYSCALL_BIT
 + 42)

	)

42 
	#__NR_ac˚±
 (
__X32_SYSCALL_BIT
 + 43)

	)

43 
	#__NR_£ndto
 (
__X32_SYSCALL_BIT
 + 44)

	)

44 
	#__NR_shutdown
 (
__X32_SYSCALL_BIT
 + 48)

	)

45 
	#__NR_böd
 (
__X32_SYSCALL_BIT
 + 49)

	)

46 
	#__NR_li°í
 (
__X32_SYSCALL_BIT
 + 50)

	)

47 
	#__NR_gësock«me
 (
__X32_SYSCALL_BIT
 + 51)

	)

48 
	#__NR_gë≥î«me
 (
__X32_SYSCALL_BIT
 + 52)

	)

49 
	#__NR_sockë∑ú
 (
__X32_SYSCALL_BIT
 + 53)

	)

50 
	#__NR_˛⁄e
 (
__X32_SYSCALL_BIT
 + 56)

	)

51 
	#__NR_f‹k
 (
__X32_SYSCALL_BIT
 + 57)

	)

52 
	#__NR_vf‹k
 (
__X32_SYSCALL_BIT
 + 58)

	)

53 
	#__NR_exô
 (
__X32_SYSCALL_BIT
 + 60)

	)

54 
	#__NR_waô4
 (
__X32_SYSCALL_BIT
 + 61)

	)

55 
	#__NR_kûl
 (
__X32_SYSCALL_BIT
 + 62)

	)

56 
	#__NR_u«me
 (
__X32_SYSCALL_BIT
 + 63)

	)

57 
	#__NR_£mgë
 (
__X32_SYSCALL_BIT
 + 64)

	)

58 
	#__NR_£m›
 (
__X32_SYSCALL_BIT
 + 65)

	)

59 
	#__NR_£m˘l
 (
__X32_SYSCALL_BIT
 + 66)

	)

60 
	#__NR_shmdt
 (
__X32_SYSCALL_BIT
 + 67)

	)

61 
	#__NR_msggë
 (
__X32_SYSCALL_BIT
 + 68)

	)

62 
	#__NR_msg¢d
 (
__X32_SYSCALL_BIT
 + 69)

	)

63 
	#__NR_msgrcv
 (
__X32_SYSCALL_BIT
 + 70)

	)

64 
	#__NR_msg˘l
 (
__X32_SYSCALL_BIT
 + 71)

	)

65 
	#__NR_f˙é
 (
__X32_SYSCALL_BIT
 + 72)

	)

66 
	#__NR_Êock
 (
__X32_SYSCALL_BIT
 + 73)

	)

67 
	#__NR_fsync
 (
__X32_SYSCALL_BIT
 + 74)

	)

68 
	#__NR_fd©async
 (
__X32_SYSCALL_BIT
 + 75)

	)

69 
	#__NR_åunˇã
 (
__X32_SYSCALL_BIT
 + 76)

	)

70 
	#__NR_·runˇã
 (
__X32_SYSCALL_BIT
 + 77)

	)

71 
	#__NR_gëdíts
 (
__X32_SYSCALL_BIT
 + 78)

	)

72 
	#__NR_gëcwd
 (
__X32_SYSCALL_BIT
 + 79)

	)

73 
	#__NR_chdú
 (
__X32_SYSCALL_BIT
 + 80)

	)

74 
	#__NR_fchdú
 (
__X32_SYSCALL_BIT
 + 81)

	)

75 
	#__NR_ª«me
 (
__X32_SYSCALL_BIT
 + 82)

	)

76 
	#__NR_mkdú
 (
__X32_SYSCALL_BIT
 + 83)

	)

77 
	#__NR_rmdú
 (
__X32_SYSCALL_BIT
 + 84)

	)

78 
	#__NR_¸ót
 (
__X32_SYSCALL_BIT
 + 85)

	)

79 
	#__NR_lök
 (
__X32_SYSCALL_BIT
 + 86)

	)

80 
	#__NR_u∆ök
 (
__X32_SYSCALL_BIT
 + 87)

	)

81 
	#__NR_symlök
 (
__X32_SYSCALL_BIT
 + 88)

	)

82 
	#__NR_ªadlök
 (
__X32_SYSCALL_BIT
 + 89)

	)

83 
	#__NR_chmod
 (
__X32_SYSCALL_BIT
 + 90)

	)

84 
	#__NR_fchmod
 (
__X32_SYSCALL_BIT
 + 91)

	)

85 
	#__NR_chown
 (
__X32_SYSCALL_BIT
 + 92)

	)

86 
	#__NR_fchown
 (
__X32_SYSCALL_BIT
 + 93)

	)

87 
	#__NR_lchown
 (
__X32_SYSCALL_BIT
 + 94)

	)

88 
	#__NR_umask
 (
__X32_SYSCALL_BIT
 + 95)

	)

89 
	#__NR_gëtimeofday
 (
__X32_SYSCALL_BIT
 + 96)

	)

90 
	#__NR_gëæimô
 (
__X32_SYSCALL_BIT
 + 97)

	)

91 
	#__NR_gërußge
 (
__X32_SYSCALL_BIT
 + 98)

	)

92 
	#__NR_sysöfo
 (
__X32_SYSCALL_BIT
 + 99)

	)

93 
	#__NR_times
 (
__X32_SYSCALL_BIT
 + 100)

	)

94 
	#__NR_gëuid
 (
__X32_SYSCALL_BIT
 + 102)

	)

95 
	#__NR_sy¶og
 (
__X32_SYSCALL_BIT
 + 103)

	)

96 
	#__NR_gëgid
 (
__X32_SYSCALL_BIT
 + 104)

	)

97 
	#__NR_£tuid
 (
__X32_SYSCALL_BIT
 + 105)

	)

98 
	#__NR_£tgid
 (
__X32_SYSCALL_BIT
 + 106)

	)

99 
	#__NR_gëeuid
 (
__X32_SYSCALL_BIT
 + 107)

	)

100 
	#__NR_gëegid
 (
__X32_SYSCALL_BIT
 + 108)

	)

101 
	#__NR_£çgid
 (
__X32_SYSCALL_BIT
 + 109)

	)

102 
	#__NR_gëµid
 (
__X32_SYSCALL_BIT
 + 110)

	)

103 
	#__NR_gëpgΩ
 (
__X32_SYSCALL_BIT
 + 111)

	)

104 
	#__NR_£tsid
 (
__X32_SYSCALL_BIT
 + 112)

	)

105 
	#__NR_£åeuid
 (
__X32_SYSCALL_BIT
 + 113)

	)

106 
	#__NR_£åegid
 (
__X32_SYSCALL_BIT
 + 114)

	)

107 
	#__NR_gëgroups
 (
__X32_SYSCALL_BIT
 + 115)

	)

108 
	#__NR_£tgroups
 (
__X32_SYSCALL_BIT
 + 116)

	)

109 
	#__NR_£åesuid
 (
__X32_SYSCALL_BIT
 + 117)

	)

110 
	#__NR_gëªsuid
 (
__X32_SYSCALL_BIT
 + 118)

	)

111 
	#__NR_£åesgid
 (
__X32_SYSCALL_BIT
 + 119)

	)

112 
	#__NR_gëªsgid
 (
__X32_SYSCALL_BIT
 + 120)

	)

113 
	#__NR_gëpgid
 (
__X32_SYSCALL_BIT
 + 121)

	)

114 
	#__NR_£tfsuid
 (
__X32_SYSCALL_BIT
 + 122)

	)

115 
	#__NR_£tfsgid
 (
__X32_SYSCALL_BIT
 + 123)

	)

116 
	#__NR_gësid
 (
__X32_SYSCALL_BIT
 + 124)

	)

117 
	#__NR_ˇpgë
 (
__X32_SYSCALL_BIT
 + 125)

	)

118 
	#__NR_ˇp£t
 (
__X32_SYSCALL_BIT
 + 126)

	)

119 
	#__NR_π_sigsu•íd
 (
__X32_SYSCALL_BIT
 + 130)

	)

120 
	#__NR_utime
 (
__X32_SYSCALL_BIT
 + 132)

	)

121 
	#__NR_mknod
 (
__X32_SYSCALL_BIT
 + 133)

	)

122 
	#__NR_≥rs⁄Æôy
 (
__X32_SYSCALL_BIT
 + 135)

	)

123 
	#__NR_u°©
 (
__X32_SYSCALL_BIT
 + 136)

	)

124 
	#__NR_°©fs
 (
__X32_SYSCALL_BIT
 + 137)

	)

125 
	#__NR_f°©fs
 (
__X32_SYSCALL_BIT
 + 138)

	)

126 
	#__NR_sysfs
 (
__X32_SYSCALL_BIT
 + 139)

	)

127 
	#__NR_gë¥i‹ôy
 (
__X32_SYSCALL_BIT
 + 140)

	)

128 
	#__NR_£çri‹ôy
 (
__X32_SYSCALL_BIT
 + 141)

	)

129 
	#__NR_sched_£ç¨am
 (
__X32_SYSCALL_BIT
 + 142)

	)

130 
	#__NR_sched_gë∑øm
 (
__X32_SYSCALL_BIT
 + 143)

	)

131 
	#__NR_sched_£tscheduÀr
 (
__X32_SYSCALL_BIT
 + 144)

	)

132 
	#__NR_sched_gëscheduÀr
 (
__X32_SYSCALL_BIT
 + 145)

	)

133 
	#__NR_sched_gë_¥i‹ôy_max
 (
__X32_SYSCALL_BIT
 + 146)

	)

134 
	#__NR_sched_gë_¥i‹ôy_mö
 (
__X32_SYSCALL_BIT
 + 147)

	)

135 
	#__NR_sched_º_gë_öãrvÆ
 (
__X32_SYSCALL_BIT
 + 148)

	)

136 
	#__NR_mlock
 (
__X32_SYSCALL_BIT
 + 149)

	)

137 
	#__NR_mu∆ock
 (
__X32_SYSCALL_BIT
 + 150)

	)

138 
	#__NR_mlockÆl
 (
__X32_SYSCALL_BIT
 + 151)

	)

139 
	#__NR_mu∆ockÆl
 (
__X32_SYSCALL_BIT
 + 152)

	)

140 
	#__NR_vh™gup
 (
__X32_SYSCALL_BIT
 + 153)

	)

141 
	#__NR_modify_ldt
 (
__X32_SYSCALL_BIT
 + 154)

	)

142 
	#__NR_pivŸ_roŸ
 (
__X32_SYSCALL_BIT
 + 155)

	)

143 
	#__NR_¥˘l
 (
__X32_SYSCALL_BIT
 + 157)

	)

144 
	#__NR_¨ch_¥˘l
 (
__X32_SYSCALL_BIT
 + 158)

	)

145 
	#__NR_adjtimex
 (
__X32_SYSCALL_BIT
 + 159)

	)

146 
	#__NR_£ålimô
 (
__X32_SYSCALL_BIT
 + 160)

	)

147 
	#__NR_chroŸ
 (
__X32_SYSCALL_BIT
 + 161)

	)

148 
	#__NR_sync
 (
__X32_SYSCALL_BIT
 + 162)

	)

149 
	#__NR_ac˘
 (
__X32_SYSCALL_BIT
 + 163)

	)

150 
	#__NR_£âimeofday
 (
__X32_SYSCALL_BIT
 + 164)

	)

151 
	#__NR_mou¡
 (
__X32_SYSCALL_BIT
 + 165)

	)

152 
	#__NR_umou¡2
 (
__X32_SYSCALL_BIT
 + 166)

	)

153 
	#__NR_sw≠⁄
 (
__X32_SYSCALL_BIT
 + 167)

	)

154 
	#__NR_sw≠off
 (
__X32_SYSCALL_BIT
 + 168)

	)

155 
	#__NR_ªboŸ
 (
__X32_SYSCALL_BIT
 + 169)

	)

156 
	#__NR_£tho°«me
 (
__X32_SYSCALL_BIT
 + 170)

	)

157 
	#__NR_£tdomaö«me
 (
__X32_SYSCALL_BIT
 + 171)

	)

158 
	#__NR_i›l
 (
__X32_SYSCALL_BIT
 + 172)

	)

159 
	#__NR_i›îm
 (
__X32_SYSCALL_BIT
 + 173)

	)

160 
	#__NR_öô_moduÀ
 (
__X32_SYSCALL_BIT
 + 175)

	)

161 
	#__NR_dñëe_moduÀ
 (
__X32_SYSCALL_BIT
 + 176)

	)

162 
	#__NR_quŸa˘l
 (
__X32_SYSCALL_BIT
 + 179)

	)

163 
	#__NR_gëpmsg
 (
__X32_SYSCALL_BIT
 + 181)

	)

164 
	#__NR_puçmsg
 (
__X32_SYSCALL_BIT
 + 182)

	)

165 
	#__NR_afs_sysˇŒ
 (
__X32_SYSCALL_BIT
 + 183)

	)

166 
	#__NR_tuxˇŒ
 (
__X32_SYSCALL_BIT
 + 184)

	)

167 
	#__NR_£curôy
 (
__X32_SYSCALL_BIT
 + 185)

	)

168 
	#__NR_gëtid
 (
__X32_SYSCALL_BIT
 + 186)

	)

169 
	#__NR_ªadahód
 (
__X32_SYSCALL_BIT
 + 187)

	)

170 
	#__NR_£tx©å
 (
__X32_SYSCALL_BIT
 + 188)

	)

171 
	#__NR_l£tx©å
 (
__X32_SYSCALL_BIT
 + 189)

	)

172 
	#__NR_f£tx©å
 (
__X32_SYSCALL_BIT
 + 190)

	)

173 
	#__NR_gëx©å
 (
__X32_SYSCALL_BIT
 + 191)

	)

174 
	#__NR_lgëx©å
 (
__X32_SYSCALL_BIT
 + 192)

	)

175 
	#__NR_fgëx©å
 (
__X32_SYSCALL_BIT
 + 193)

	)

176 
	#__NR_li°x©å
 (
__X32_SYSCALL_BIT
 + 194)

	)

177 
	#__NR_Œi°x©å
 (
__X32_SYSCALL_BIT
 + 195)

	)

178 
	#__NR_Êi°x©å
 (
__X32_SYSCALL_BIT
 + 196)

	)

179 
	#__NR_ªmovex©å
 (
__X32_SYSCALL_BIT
 + 197)

	)

180 
	#__NR_Ãemovex©å
 (
__X32_SYSCALL_BIT
 + 198)

	)

181 
	#__NR_‰emovex©å
 (
__X32_SYSCALL_BIT
 + 199)

	)

182 
	#__NR_tkûl
 (
__X32_SYSCALL_BIT
 + 200)

	)

183 
	#__NR_time
 (
__X32_SYSCALL_BIT
 + 201)

	)

184 
	#__NR_fuãx
 (
__X32_SYSCALL_BIT
 + 202)

	)

185 
	#__NR_sched_£èfföôy
 (
__X32_SYSCALL_BIT
 + 203)

	)

186 
	#__NR_sched_gëafföôy
 (
__X32_SYSCALL_BIT
 + 204)

	)

187 
	#__NR_io_£tup
 (
__X32_SYSCALL_BIT
 + 206)

	)

188 
	#__NR_io_de°roy
 (
__X32_SYSCALL_BIT
 + 207)

	)

189 
	#__NR_io_gëevíts
 (
__X32_SYSCALL_BIT
 + 208)

	)

190 
	#__NR_io_submô
 (
__X32_SYSCALL_BIT
 + 209)

	)

191 
	#__NR_io_ˇn˚l
 (
__X32_SYSCALL_BIT
 + 210)

	)

192 
	#__NR_lookup_dcookõ
 (
__X32_SYSCALL_BIT
 + 212)

	)

193 
	#__NR_ïﬁl_¸óã
 (
__X32_SYSCALL_BIT
 + 213)

	)

194 
	#__NR_ªm≠_fûe_∑ges
 (
__X32_SYSCALL_BIT
 + 216)

	)

195 
	#__NR_gëdíts64
 (
__X32_SYSCALL_BIT
 + 217)

	)

196 
	#__NR_£t_tid_addªss
 (
__X32_SYSCALL_BIT
 + 218)

	)

197 
	#__NR_ª°¨t_sysˇŒ
 (
__X32_SYSCALL_BIT
 + 219)

	)

198 
	#__NR_£mtimed›
 (
__X32_SYSCALL_BIT
 + 220)

	)

199 
	#__NR_Ádvi£64
 (
__X32_SYSCALL_BIT
 + 221)

	)

200 
	#__NR_timî_£âime
 (
__X32_SYSCALL_BIT
 + 223)

	)

201 
	#__NR_timî_gëtime
 (
__X32_SYSCALL_BIT
 + 224)

	)

202 
	#__NR_timî_gëovîrun
 (
__X32_SYSCALL_BIT
 + 225)

	)

203 
	#__NR_timî_dñëe
 (
__X32_SYSCALL_BIT
 + 226)

	)

204 
	#__NR_˛ock_£âime
 (
__X32_SYSCALL_BIT
 + 227)

	)

205 
	#__NR_˛ock_gëtime
 (
__X32_SYSCALL_BIT
 + 228)

	)

206 
	#__NR_˛ock_gëªs
 (
__X32_SYSCALL_BIT
 + 229)

	)

207 
	#__NR_˛ock_«no¶ìp
 (
__X32_SYSCALL_BIT
 + 230)

	)

208 
	#__NR_exô_group
 (
__X32_SYSCALL_BIT
 + 231)

	)

209 
	#__NR_ïﬁl_waô
 (
__X32_SYSCALL_BIT
 + 232)

	)

210 
	#__NR_ïﬁl_˘l
 (
__X32_SYSCALL_BIT
 + 233)

	)

211 
	#__NR_tgkûl
 (
__X32_SYSCALL_BIT
 + 234)

	)

212 
	#__NR_utimes
 (
__X32_SYSCALL_BIT
 + 235)

	)

213 
	#__NR_mböd
 (
__X32_SYSCALL_BIT
 + 237)

	)

214 
	#__NR_£t_mempﬁicy
 (
__X32_SYSCALL_BIT
 + 238)

	)

215 
	#__NR_gë_mempﬁicy
 (
__X32_SYSCALL_BIT
 + 239)

	)

216 
	#__NR_mq_›í
 (
__X32_SYSCALL_BIT
 + 240)

	)

217 
	#__NR_mq_u∆ök
 (
__X32_SYSCALL_BIT
 + 241)

	)

218 
	#__NR_mq_timed£nd
 (
__X32_SYSCALL_BIT
 + 242)

	)

219 
	#__NR_mq_timedª˚ive
 (
__X32_SYSCALL_BIT
 + 243)

	)

220 
	#__NR_mq_gë£èâr
 (
__X32_SYSCALL_BIT
 + 245)

	)

221 
	#__NR_add_key
 (
__X32_SYSCALL_BIT
 + 248)

	)

222 
	#__NR_ªque°_key
 (
__X32_SYSCALL_BIT
 + 249)

	)

223 
	#__NR_key˘l
 (
__X32_SYSCALL_BIT
 + 250)

	)

224 
	#__NR_i›rio_£t
 (
__X32_SYSCALL_BIT
 + 251)

	)

225 
	#__NR_i›rio_gë
 (
__X32_SYSCALL_BIT
 + 252)

	)

226 
	#__NR_öŸify_öô
 (
__X32_SYSCALL_BIT
 + 253)

	)

227 
	#__NR_öŸify_add_w©ch
 (
__X32_SYSCALL_BIT
 + 254)

	)

228 
	#__NR_öŸify_rm_w©ch
 (
__X32_SYSCALL_BIT
 + 255)

	)

229 
	#__NR_migøã_∑ges
 (
__X32_SYSCALL_BIT
 + 256)

	)

230 
	#__NR_›í©
 (
__X32_SYSCALL_BIT
 + 257)

	)

231 
	#__NR_mkdú©
 (
__X32_SYSCALL_BIT
 + 258)

	)

232 
	#__NR_mknod©
 (
__X32_SYSCALL_BIT
 + 259)

	)

233 
	#__NR_fchow«t
 (
__X32_SYSCALL_BIT
 + 260)

	)

234 
	#__NR_futimeßt
 (
__X32_SYSCALL_BIT
 + 261)

	)

235 
	#__NR_√wf°©©
 (
__X32_SYSCALL_BIT
 + 262)

	)

236 
	#__NR_u∆ök©
 (
__X32_SYSCALL_BIT
 + 263)

	)

237 
	#__NR_ª«mót
 (
__X32_SYSCALL_BIT
 + 264)

	)

238 
	#__NR_lök©
 (
__X32_SYSCALL_BIT
 + 265)

	)

239 
	#__NR_symlök©
 (
__X32_SYSCALL_BIT
 + 266)

	)

240 
	#__NR_ªadlök©
 (
__X32_SYSCALL_BIT
 + 267)

	)

241 
	#__NR_fchmod©
 (
__X32_SYSCALL_BIT
 + 268)

	)

242 
	#__NR_Ác˚sßt
 (
__X32_SYSCALL_BIT
 + 269)

	)

243 
	#__NR_p£À˘6
 (
__X32_SYSCALL_BIT
 + 270)

	)

244 
	#__NR_µﬁl
 (
__X32_SYSCALL_BIT
 + 271)

	)

245 
	#__NR_unsh¨e
 (
__X32_SYSCALL_BIT
 + 272)

	)

246 
	#__NR_•li˚
 (
__X32_SYSCALL_BIT
 + 275)

	)

247 
	#__NR_ãe
 (
__X32_SYSCALL_BIT
 + 276)

	)

248 
	#__NR_sync_fûe_ønge
 (
__X32_SYSCALL_BIT
 + 277)

	)

249 
	#__NR_utimíßt
 (
__X32_SYSCALL_BIT
 + 280)

	)

250 
	#__NR_ïﬁl_pwaô
 (
__X32_SYSCALL_BIT
 + 281)

	)

251 
	#__NR_sig«lfd
 (
__X32_SYSCALL_BIT
 + 282)

	)

252 
	#__NR_timîfd_¸óã
 (
__X32_SYSCALL_BIT
 + 283)

	)

253 
	#__NR_evítfd
 (
__X32_SYSCALL_BIT
 + 284)

	)

254 
	#__NR_ÁŒoˇã
 (
__X32_SYSCALL_BIT
 + 285)

	)

255 
	#__NR_timîfd_£âime
 (
__X32_SYSCALL_BIT
 + 286)

	)

256 
	#__NR_timîfd_gëtime
 (
__X32_SYSCALL_BIT
 + 287)

	)

257 
	#__NR_ac˚±4
 (
__X32_SYSCALL_BIT
 + 288)

	)

258 
	#__NR_sig«lfd4
 (
__X32_SYSCALL_BIT
 + 289)

	)

259 
	#__NR_evítfd2
 (
__X32_SYSCALL_BIT
 + 290)

	)

260 
	#__NR_ïﬁl_¸óã1
 (
__X32_SYSCALL_BIT
 + 291)

	)

261 
	#__NR_dup3
 (
__X32_SYSCALL_BIT
 + 292)

	)

262 
	#__NR_pùe2
 (
__X32_SYSCALL_BIT
 + 293)

	)

263 
	#__NR_öŸify_öô1
 (
__X32_SYSCALL_BIT
 + 294)

	)

264 
	#__NR_≥rf_evít_›í
 (
__X32_SYSCALL_BIT
 + 298)

	)

265 
	#__NR_ÁnŸify_öô
 (
__X32_SYSCALL_BIT
 + 300)

	)

266 
	#__NR_ÁnŸify_m¨k
 (
__X32_SYSCALL_BIT
 + 301)

	)

267 
	#__NR_¥limô64
 (
__X32_SYSCALL_BIT
 + 302)

	)

268 
	#__NR_«me_to_h™dÀ_©
 (
__X32_SYSCALL_BIT
 + 303)

	)

269 
	#__NR_›í_by_h™dÀ_©
 (
__X32_SYSCALL_BIT
 + 304)

	)

270 
	#__NR_˛ock_adjtime
 (
__X32_SYSCALL_BIT
 + 305)

	)

271 
	#__NR_syncfs
 (
__X32_SYSCALL_BIT
 + 306)

	)

272 
	#__NR_£äs
 (
__X32_SYSCALL_BIT
 + 308)

	)

273 
	#__NR_gë˝u
 (
__X32_SYSCALL_BIT
 + 309)

	)

274 
	#__NR_kcmp
 (
__X32_SYSCALL_BIT
 + 312)

	)

275 
	#__NR_föô_moduÀ
 (
__X32_SYSCALL_BIT
 + 313)

	)

276 
	#__NR_ª«mót2
 (
__X32_SYSCALL_BIT
 + 316)

	)

277 
	#__NR_kexec_fûe_lﬂd
 (
__X32_SYSCALL_BIT
 + 320)

	)

278 
	#__NR_π_siga˘i⁄
 (
__X32_SYSCALL_BIT
 + 512)

	)

279 
	#__NR_π_sigªtu∫
 (
__X32_SYSCALL_BIT
 + 513)

	)

280 
	#__NR_io˘l
 (
__X32_SYSCALL_BIT
 + 514)

	)

281 
	#__NR_ªadv
 (
__X32_SYSCALL_BIT
 + 515)

	)

282 
	#__NR_wrôev
 (
__X32_SYSCALL_BIT
 + 516)

	)

283 
	#__NR_ªcv‰om
 (
__X32_SYSCALL_BIT
 + 517)

	)

284 
	#__NR_£ndmsg
 (
__X32_SYSCALL_BIT
 + 518)

	)

285 
	#__NR_ªcvmsg
 (
__X32_SYSCALL_BIT
 + 519)

	)

286 
	#__NR_execve
 (
__X32_SYSCALL_BIT
 + 520)

	)

287 
	#__NR_±ø˚
 (
__X32_SYSCALL_BIT
 + 521)

	)

288 
	#__NR_π_sig≥ndög
 (
__X32_SYSCALL_BIT
 + 522)

	)

289 
	#__NR_π_sigtimedwaô
 (
__X32_SYSCALL_BIT
 + 523)

	)

290 
	#__NR_π_sigqueueöfo
 (
__X32_SYSCALL_BIT
 + 524)

	)

291 
	#__NR_sigÆt°ack
 (
__X32_SYSCALL_BIT
 + 525)

	)

292 
	#__NR_timî_¸óã
 (
__X32_SYSCALL_BIT
 + 526)

	)

293 
	#__NR_mq_nŸify
 (
__X32_SYSCALL_BIT
 + 527)

	)

294 
	#__NR_kexec_lﬂd
 (
__X32_SYSCALL_BIT
 + 528)

	)

295 
	#__NR_waôid
 (
__X32_SYSCALL_BIT
 + 529)

	)

296 
	#__NR_£t_robu°_li°
 (
__X32_SYSCALL_BIT
 + 530)

	)

297 
	#__NR_gë_robu°_li°
 (
__X32_SYSCALL_BIT
 + 531)

	)

298 
	#__NR_vm•li˚
 (
__X32_SYSCALL_BIT
 + 532)

	)

299 
	#__NR_move_∑ges
 (
__X32_SYSCALL_BIT
 + 533)

	)

300 
	#__NR_¥ódv
 (
__X32_SYSCALL_BIT
 + 534)

	)

301 
	#__NR_pwrôev
 (
__X32_SYSCALL_BIT
 + 535)

	)

302 
	#__NR_π_tgsigqueueöfo
 (
__X32_SYSCALL_BIT
 + 536)

	)

303 
	#__NR_ªcvmmsg
 (
__X32_SYSCALL_BIT
 + 537)

	)

304 
	#__NR_£ndmmsg
 (
__X32_SYSCALL_BIT
 + 538)

	)

305 
	#__NR_¥o˚ss_vm_ªadv
 (
__X32_SYSCALL_BIT
 + 539)

	)

306 
	#__NR_¥o˚ss_vm_wrôev
 (
__X32_SYSCALL_BIT
 + 540)

	)

307 
	#__NR_£tsock›t
 (
__X32_SYSCALL_BIT
 + 541)

	)

308 
	#__NR_gësock›t
 (
__X32_SYSCALL_BIT
 + 542)

	)

	@/usr/include/bits/errno.h

19 #ifde‡
_ERRNO_H


21 #unde‡
EDOM


22 #unde‡
EILSEQ


23 #unde‡
ERANGE


24 
	~<löux/î∫o.h
>

27 
	#ENOTSUP
 
EOPNOTSUPP


	)

30 #i‚de‡
ECANCELED


31 
	#ECANCELED
 125

	)

35 #i‚de‡
EOWNERDEAD


36 
	#EOWNERDEAD
 130

	)

37 
	#ENOTRECOVERABLE
 131

	)

40 #i‚de‡
ERFKILL


41 
	#ERFKILL
 132

	)

44 #i‚de‡
EHWPOISON


45 
	#EHWPOISON
 133

	)

48 #i‚de‡
__ASSEMBLER__


50 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

52 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


54 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

59 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


63 
	#EDOM
 33

	)

64 
	#EILSEQ
 84

	)

65 
	#ERANGE
 34

	)

	@/usr/include/bits/libio-ldbl.h

19 #i‚de‡
_IO_STDIO_H


23 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

24 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/pthreadtypes.h

18 #i‚de‡
_BITS_PTHREADTYPES_H


19 
	#_BITS_PTHREADTYPES_H
 1

	)

21 
	~<bôs/w‹dsize.h
>

23 #ifde‡
__x86_64__


24 #i‡
__WORDSIZE
 == 64

25 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

26 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

27 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

28 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

29 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

30 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

31 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

32 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

33 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

35 
	#__SIZEOF_PTHREAD_ATTR_T
 32

	)

36 
	#__SIZEOF_PTHREAD_MUTEX_T
 32

	)

37 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

38 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

39 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

40 
	#__SIZEOF_PTHREAD_RWLOCK_T
 44

	)

41 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

42 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

43 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

46 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

47 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

48 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

49 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

50 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

51 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

52 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

53 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

54 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

60 
	t±hªad_t
;

63 
	u±hªad_©å_t


65 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

66 
	m__Æign
;

68 #i‚de‡
__have_±hªad_©å_t


69 
±hªad_©å_t
 
	t±hªad_©å_t
;

70 
	#__have_±hªad_©å_t
 1

	)

74 #ifde‡
__x86_64__


75 
	s__±hªad_öã∫Æ_li°


77 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

78 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

79 } 
	t__±hªad_li°_t
;

81 
	s__±hªad_öã∫Æ_¶i°


83 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

84 } 
	t__±hªad_¶i°_t
;

92 
	s__±hªad_muãx_s


94 
	m__lock
;

95 
	m__cou¡
;

96 
	m__ow√r
;

97 #ifde‡
__x86_64__


98 
	m__nu£rs
;

102 
	m__köd
;

103 #ifde‡
__x86_64__


104 
	m__•ös
;

105 
__±hªad_li°_t
 
	m__li°
;

106 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

108 
	m__nu£rs
;

109 
__exãnsi⁄__
 union

111 
	m__•ös
;

112 
__±hªad_¶i°_t
 
	m__li°
;

115 } 
	m__d©a
;

116 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

117 
	m__Æign
;

118 } 
	t±hªad_muãx_t
;

122 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

123 
	m__Æign
;

124 } 
	t±hªad_muãx©å_t
;

133 
	m__lock
;

134 
	m__fuãx
;

135 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

136 
__exãnsi⁄__
 
	m__wakeup_£q
;

137 
__exãnsi⁄__
 
	m__wokí_£q
;

138 *
	m__muãx
;

139 
	m__nwaôîs
;

140 
	m__brﬂdˇ°_£q
;

141 } 
	m__d©a
;

142 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

143 
__exãnsi⁄__
 
	m__Æign
;

144 } 
	t±hªad_c⁄d_t
;

148 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

149 
	m__Æign
;

150 } 
	t±hªad_c⁄d©å_t
;

154 
	t±hªad_key_t
;

158 
	t±hªad_⁄˚_t
;

161 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


166 #ifde‡
__x86_64__


169 
	m__lock
;

170 
	m__ƒ_ªadîs
;

171 
	m__ªadîs_wakeup
;

172 
	m__wrôî_wakeup
;

173 
	m__ƒ_ªadîs_queued
;

174 
	m__ƒ_wrôîs_queued
;

175 
	m__wrôî
;

176 
	m__sh¨ed
;

177 
	m__∑d1
;

178 
	m__∑d2
;

181 
	m__Êags
;

182 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

183 } 
	m__d©a
;

187 
	m__lock
;

188 
	m__ƒ_ªadîs
;

189 
	m__ªadîs_wakeup
;

190 
	m__wrôî_wakeup
;

191 
	m__ƒ_ªadîs_queued
;

192 
	m__ƒ_wrôîs_queued
;

195 
	m__Êags
;

196 
	m__sh¨ed
;

197 
	m__∑d1
;

198 
	m__∑d2
;

199 
	m__wrôî
;

200 } 
	m__d©a
;

202 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

203 
	m__Æign
;

204 } 
	t±hªad_rwlock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

209 
	m__Æign
;

210 } 
	t±hªad_rwlock©å_t
;

214 #ifde‡
__USE_XOPEN2K


216 vﬁ©ûê
	t±hªad_•ölock_t
;

223 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

224 
	m__Æign
;

225 } 
	t±hªad_b¨rõr_t
;

229 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

230 
	m__Æign
;

231 } 
	t±hªad_b¨rõøâr_t
;

235 #i‚de‡
__x86_64__


237 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/stdio-lock.h

19 #i‚de‡
_BITS_STDIO_LOCK_H


20 
	#_BITS_STDIO_LOCK_H
 1

	)

22 
	~<bôs/libc-lock.h
>

24 
	$__libc_lock_deföe_ªcursive
 (, 
_IO_lock_t
)

27 #ifde‡
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


28 
	t_IO_lock_öôülizî
 
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


	)

29 #ñi‡
	t_IO_MTSAFE_IO


30 #îr‹ 
	tlibio
 
	t√eds
 
	tªcursive
 
	tmuãxes
 
	t_IO_MTSAFE_IO


33 
	t_IO_lock_öô
(
	t_«me
Ë
	t__libc_lock_öô_ªcursive
 (_«me)

	)

34 
	t_IO_lock_föi
(
	t_«me
Ë
	t__libc_lock_föi_ªcursive
 (_«me)

	)

35 
	t_IO_lock_lock
(
	t_«me
Ë
	t__libc_lock_lock_ªcursive
 (_«me)

	)

36 
	t_IO_lock_åylock
(
	t_«me
Ë
	t__libc_lock_åylock_ªcursive
 (_«me)

	)

37 
	t_IO_lock_u∆ock
(
	t_«me
Ë
	t__libc_lock_u∆ock_ªcursive
 (_«me)

	)

40 
	t_IO_˛ónup_ªgi⁄_°¨t
(
	t_f˘
, 
	t_Â
) \

41 
	t__libc_˛ónup_ªgi⁄_°¨t
 (((
	t_Â
)->
	t_Êags
 & 
	t_IO_USER_LOCK
Ë=0, 
	t_f˘
, _Â)

	)

42 
	t_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
	t_f˘
) \

43 
	t__libc_˛ónup_ªgi⁄_°¨t
 (1, 
	t_f˘
, 
	tNULL
)

	)

44 
	t_IO_˛ónup_ªgi⁄_íd
(
	t_doô
) \

45 
	t__libc_˛ónup_ªgi⁄_íd
 (
	t_doô
)

	)

47 #i‡
	tdeföed
 
	t_LIBC
 && !deföed 
	tNOT_IN_libc


48 
	t_IO_acquúe_lock
(
	t_Â
) \

49 
	t_IO_˛ónup_ªgi⁄_°¨t
 (((*Ë(*)Ë
	t_IO_fu∆ockfûe
, (
	t_Â
)); \

50 
	`_IO_Êockfûe
 (
_Â
)

	)

52 
	#_IO_ªÀa£_lock
(
_Â
) \

53 
	`_IO_fu∆ockfûe
 (
_Â
); \

54 
	`_IO_˛ónup_ªgi⁄_íd
 (0)

	)

	@/usr/include/bits/typesizes.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TYPESIZES_H


24 
	#_BITS_TYPESIZES_H
 1

	)

30 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


31 
	#__SYSCALL_SLONG_TYPE
 
__SQUAD_TYPE


	)

32 
	#__SYSCALL_ULONG_TYPE
 
__UQUAD_TYPE


	)

34 
	#__SYSCALL_SLONG_TYPE
 
__SLONGWORD_TYPE


	)

35 
	#__SYSCALL_ULONG_TYPE
 
__ULONGWORD_TYPE


	)

38 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

39 
	#__UID_T_TYPE
 
__U32_TYPE


	)

40 
	#__GID_T_TYPE
 
__U32_TYPE


	)

41 
	#__INO_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

42 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

43 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

44 #ifde‡
__x86_64__


45 
	#__NLINK_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

46 
	#__FSWORD_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

48 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

49 
	#__FSWORD_T_TYPE
 
__SWORD_TYPE


	)

51 
	#__OFF_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

52 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

53 
	#__PID_T_TYPE
 
__S32_TYPE


	)

54 
	#__RLIM_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

55 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

56 
	#__BLKCNT_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

57 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

58 
	#__FSBLKCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

59 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

60 
	#__FSFILCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

61 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

62 
	#__ID_T_TYPE
 
__U32_TYPE


	)

63 
	#__CLOCK_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

64 
	#__TIME_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

65 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

66 
	#__SUSECONDS_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

67 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

68 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

69 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

70 
	#__TIMER_T_TYPE
 *

	)

71 
	#__BLKSIZE_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

72 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

73 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

75 #ifde‡
__x86_64__


79 
	#__OFF_T_MATCHES_OFF64_T
 1

	)

82 
	#__INO_T_MATCHES_INO64_T
 1

	)

86 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__
 && !deföed 
__ILP32__


4 
	#__WORDSIZE
 64

	)

6 
	#__WORDSIZE
 32

	)

9 #ifde‡
__x86_64__


10 
	#__WORDSIZE_TIME64_COMPAT32
 1

	)

12 
	#__SYSCALL_WORDSIZE
 64

	)

	@/usr/include/ctype.h

23 #i‚def 
_CTYPE_H


24 
	#_CTYPE_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 
	g__BEGIN_DECLS


31 #i‚de‡
_ISbô


40 
	~<ídün.h
>

41 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


42 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

44 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

49 
	m_ISuµî
 = 
_ISbô
 (0),

50 
	m_ISlowî
 = 
_ISbô
 (1),

51 
	m_ISÆpha
 = 
_ISbô
 (2),

52 
	m_ISdigô
 = 
_ISbô
 (3),

53 
	m_ISxdigô
 = 
_ISbô
 (4),

54 
	m_IS•a˚
 = 
_ISbô
 (5),

55 
	m_IS¥öt
 = 
_ISbô
 (6),

56 
	m_ISgøph
 = 
_ISbô
 (7),

57 
	m_ISbœnk
 = 
_ISbô
 (8),

58 
	m_IS˙ål
 = 
_ISbô
 (9),

59 
	m_ISpun˘
 = 
_ISbô
 (10),

60 
	m_ISÆnum
 = 
_ISbô
 (11)

80 c⁄° **
	$__˘y≥_b_loc
 ()

81 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

82 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

83 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

84 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

85 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

88 #i‚de‡
__˝lu•lus


89 
	#__is˘y≥
(
c
, 
ty≥
) \

90 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 #ñi‡
deföed
 
__USE_EXTERN_INLINES


92 
	#__is˘y≥_f
(
ty≥
) \

93 
__exã∫_ölöe
 \

94 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

96  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

97 
	}

	)
}

100 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

101 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

103 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

105 
__BEGIN_NAMESPACE_STD


111 
__ex˘y≥
 (
iß um
);

112 
__ex˘y≥
 (
ißÕha
);

113 
__ex˘y≥
 (
is˙ål
);

114 
__ex˘y≥
 (
isdigô
);

115 
__ex˘y≥
 (
i¶owî
);

116 
__ex˘y≥
 (
isgøph
);

117 
__ex˘y≥
 (
i•röt
);

118 
__ex˘y≥
 (
i•un˘
);

119 
__ex˘y≥
 (
is•a˚
);

120 
__ex˘y≥
 (
isuµî
);

121 
__ex˘y≥
 (
isxdigô
);

125 
	$tﬁowî
 (
__c
Ë
__THROW
;

128 
	$touµî
 (
__c
Ë
__THROW
;

130 
__END_NAMESPACE_STD


134 #ifdef 
__USE_ISOC99


135 
__BEGIN_NAMESPACE_C99


137 
	`__ex˘y≥
 (
isbœnk
);

139 
__END_NAMESPACE_C99


142 #ifde‡
__USE_GNU


144 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

147 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


151 
	$ißscii
 (
__c
Ë
__THROW
;

155 
	$tﬂscii
 (
__c
Ë
__THROW
;

159 
	`__ex˘y≥
 (
_touµî
);

160 
	`__ex˘y≥
 (
_tﬁowî
);

164 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

165 (
__exãnsi⁄__
 \

166 ({ 
__ªs
; \

167 i‡( (
c
) > 1) \

169 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

171 
__c
 = (
c
); \

172 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

175 
__ªs
 = 
f
 
¨gs
; \

178 
__ªs
 = (
a
)[(Ë(
c
)]; \

179 
__ªs
; 
	}
}))

	)

181 #i‡!
deföed
 
__NO_CTYPE


182 #ifde‡
__is˘y≥_f


183 
	$__is˘y≥_f
 (
Ænum
)

184 
	$__is˘y≥_f
 (
Æpha
)

185 
	$__is˘y≥_f
 (
˙ål
)

186 
	$__is˘y≥_f
 (
digô
)

187 
	$__is˘y≥_f
 (
lowî
)

188 
	$__is˘y≥_f
 (
gøph
)

189 
	$__is˘y≥_f
 (
¥öt
)

190 
	$__is˘y≥_f
 (
pun˘
)

191 
	$__is˘y≥_f
 (
•a˚
)

192 
	$__is˘y≥_f
 (
uµî
)

193 
	$__is˘y≥_f
 (
xdigô
)

194 #ifde‡
__USE_ISOC99


195 
	$__is˘y≥_f
 (
bœnk
)

197 #ñi‡
deföed
 
__is˘y≥


198 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

199 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

200 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

201 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

202 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

203 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

204 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

205 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

206 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

207 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

208 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

209 #ifde‡
__USE_ISOC99


210 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

214 #ifde‡
__USE_EXTERN_INLINES


215 
__exã∫_ölöe
 

216 
	`__NTH
 (
	$tﬁowî
 (
__c
))

218  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

219 
	}
}

221 
__exã∫_ölöe
 

222 
__NTH
 (
	$touµî
 (
__c
))

224  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

225 
	}
}

228 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


229 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

230 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

233 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


234 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

235 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

237 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

238 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

244 #ifde‡
__USE_XOPEN2K8


258 
	~<xloˇÀ.h
>

262 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

263 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

265 
	#__ex˘y≥_l
(
«me
) \

266 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

272 
__ex˘y≥_l
 (
iß um_l
);

273 
__ex˘y≥_l
 (
ißÕha_l
);

274 
__ex˘y≥_l
 (
is˙ål_l
);

275 
__ex˘y≥_l
 (
isdigô_l
);

276 
__ex˘y≥_l
 (
i¶owî_l
);

277 
__ex˘y≥_l
 (
isgøph_l
);

278 
__ex˘y≥_l
 (
i•röt_l
);

279 
__ex˘y≥_l
 (
i•un˘_l
);

280 
__ex˘y≥_l
 (
is•a˚_l
);

281 
__ex˘y≥_l
 (
isuµî_l
);

282 
__ex˘y≥_l
 (
isxdigô_l
);

284 
__ex˘y≥_l
 (
isbœnk_l
);

288 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

289 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

293 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

295 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


296 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

297 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

298 
	#__touµî_l
(
c
, 
loˇÀ
) \

299 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

300 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

301 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

305 #i‚de‡
__NO_CTYPE


306 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

307 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

308 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

309 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

310 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

311 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

312 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

313 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

314 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

315 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

316 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

318 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

320 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


321 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

322 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

325 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

326 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

327 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

328 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

329 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

330 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

331 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

332 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

333 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

334 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

335 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

337 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

339 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


340 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

341 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

348 
__END_DECLS


	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_BSD


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_BSD
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 #i‡
__GLIBC_HAVE_LONG_LONG


74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

81 
	#htobe16
(
x
Ë(x)

	)

82 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

83 
	#be16toh
(
x
Ë(x)

	)

84 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

86 
	#htobe32
(
x
Ë(x)

	)

87 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

88 
	#be32toh
(
x
Ë(x)

	)

89 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

91 #i‡
__GLIBC_HAVE_LONG_LONG


92 
	#htobe64
(
x
Ë(x)

	)

93 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

94 
	#be64toh
(
x
Ë(x)

	)

95 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/gnu/stubs.h

6 #i‡!
deföed
 
__x86_64__


7 
	~<gnu/°ubs-32.h
>

9 #i‡
deföed
 
__x86_64__
 && deföed 
__LP64__


10 
	~<gnu/°ubs-64.h
>

12 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


13 
	~<gnu/°ubs-x32.h
>

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

30 
	#__STDC_IEC_559__
 1

	)

31 
	#__STDC_IEC_559_COMPLEX__
 1

	)

35 
	#__STDC_ISO_10646__
 201103L

	)

38 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/sys/cdefs.h

19 #i‚def 
_SYS_CDEFS_H


20 
	#_SYS_CDEFS_H
 1

	)

23 #i‚de‡
_FEATURES_H


24 
	~<„©uªs.h
>

30 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


35 #unde‡
__P


36 #unde‡
__PMT


38 #ifde‡
__GNUC__


42 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


43 
	#__LEAF
 , 
__Àaf__


	)

44 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

46 
	#__LEAF


	)

47 
	#__LEAF_ATTR


	)

55 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

56 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

57 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

58 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

60 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

61 
	#__THROW
 
	`throw
 ()

	)

62 
	#__THROWNL
 
	`throw
 ()

	)

63 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
	`throw
 ()

	)

65 
	#__THROW


	)

66 
	#__THROWNL


	)

67 
	#__NTH
(
f˘
Ë
	)
fct

73 
	#__ölöe


	)

75 
	#__THROW


	)

76 
	#__THROWNL


	)

77 
	#__NTH
(
f˘
Ë
	)
fct

83 
	#__P
(
¨gs
Ë
	)
args

84 
	#__PMT
(
¨gs
Ë
	)
args

89 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

90 
	#__STRING
(
x
Ë#x

	)

93 
	#__±r_t
 *

	)

94 
	#__l⁄g_doubÀ_t
 

	)

98 #ifdef 
__˝lu•lus


99 
	#__BEGIN_DECLS
 "C" {

	)

100 
	#__END_DECLS
 }

	)

102 
	#__BEGIN_DECLS


	)

103 
	#__END_DECLS


	)

112 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


113 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

114 
	#__END_NAMESPACE_STD
 }

	)

115 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

116 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

117 
	#__END_NAMESPACE_C99
 }

	)

118 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

123 
	#__BEGIN_NAMESPACE_STD


	)

124 
	#__END_NAMESPACE_STD


	)

125 
	#__USING_NAMESPACE_STD
(
«me
)

	)

126 
	#__BEGIN_NAMESPACE_C99


	)

127 
	#__END_NAMESPACE_C99


	)

128 
	#__USING_NAMESPACE_C99
(
«me
)

	)

133 #i‚de‡
__BOUNDED_POINTERS__


134 
	#__bounded


	)

135 
	#__unbounded


	)

136 
	#__±rvÆue


	)

141 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

142 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

144 #i‡
__GNUC_PREREQ
 (4,3)

145 
	#__w¨nde˛
(
«me
, 
msg
) \

146 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

147 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

148 
	#__îr‹de˛
(
«me
, 
msg
) \

149 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

151 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

152 
	#__w¨«âr
(
msg
)

	)

153 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

157 #i‡
__GNUC_PREREQ
 (2,97)

159 
	#__Êex¨r
 []

	)

161 #ifde‡
__GNUC__


162 
	#__Êex¨r
 [0]

	)

164 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

165 
	#__Êex¨r
 []

	)

168 
	#__Êex¨r
 [1]

	)

184 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

186 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

187 #ifde‡
__˝lu•lus


188 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

189 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

190 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

191 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

193 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

194 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

195 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

196 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

198 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

199 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

212 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

213 
	#__©åibuã__
(
xyz
Ë

	)

219 #i‡
__GNUC_PREREQ
 (2,96)

220 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

222 
	#__©åibuã_mÆloc__


	)

228 #i‡
__GNUC_PREREQ
 (2,96)

229 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

231 
	#__©åibuã_puª__


	)

235 #i‡
__GNUC_PREREQ
 (2,5)

236 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

238 
	#__©åibuã_c⁄°__


	)

244 #i‡
__GNUC_PREREQ
 (3,1)

245 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

246 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

248 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

249 
	#__©åibuã_noölöe__


	)

253 #i‡
__GNUC_PREREQ
 (3,2)

254 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

256 
	#__©åibuã_dïªˇãd__


	)

265 #i‡
__GNUC_PREREQ
 (2,8)

266 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

268 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

275 #i‡
__GNUC_PREREQ
 (2,97)

276 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

277 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

279 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

284 #i‡
__GNUC_PREREQ
 (3,3)

285 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

287 
	#__n⁄nuŒ
(
∑øms
)

	)

292 #i‡
__GNUC_PREREQ
 (3,4)

293 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

294 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

295 #i‡
__USE_FORTIFY_LEVEL
 > 0

296 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

299 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

301 #i‚de‡
__wur


302 
	#__wur


	)

306 #i‡
__GNUC_PREREQ
 (3,2)

307 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

309 
	#__Æways_ölöe
 
__ölöe


	)

314 #i‡
__GNUC_PREREQ
 (4,3)

315 
	#__©åibuã_¨tificül__
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

317 
	#__©åibuã_¨tificül__


	)

329 #i‡(!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3) \

330 || (
deföed
 
__˛™g__
 && (deföed 
__GNUC_STDC_INLINE__
 \

331 || 
deföed
 
__GNUC_GNU_INLINE__
)))

332 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


333 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

334 
	#__exã∫_Æways_ölöe
 \

335 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

337 
	#__exã∫_ölöe
 
__ölöe


	)

338 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

342 #ifde‡
__exã∫_Æways_ölöe


343 
	#__f‹tify_fun˘i⁄
 
__exã∫_Æways_ölöe
 
__©åibuã_¨tificül__


	)

348 #i‡
__GNUC_PREREQ
 (4,3)

349 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

350 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

357 #i‡!
__GNUC_PREREQ
 (2,8)

358 
	#__exãnsi⁄__


	)

362 #i‡!
__GNUC_PREREQ
 (2,92)

363 
	#__ª°ri˘


	)

369 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


370 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

372 #ifde‡
__GNUC__


373 
	#__ª°ri˘_¨r


	)

375 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

376 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

379 
	#__ª°ri˘_¨r


	)

384 #i‡
__GNUC__
 >= 3

385 
	#__glibc_u∆ikñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
((c⁄d), 0)

	)

386 
	#__glibc_likñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
((c⁄d), 1)

	)

388 
	#__glibc_u∆ikñy
(
c⁄d
Ë(c⁄d)

	)

389 
	#__glibc_likñy
(
c⁄d
Ë(c⁄d)

	)

392 
	~<bôs/w‹dsize.h
>

394 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


395 
	#__LDBL_COMPAT
 1

	)

396 #ifde‡
__REDIRECT


397 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

398 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

399 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

400 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

401 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

402 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

403 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

404 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

405 
	#__LDBL_REDIR_DECL
(
«me
) \

406 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

407 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

408 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

409 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

410 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

413 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


414 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

415 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

416 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

417 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

418 
	#__LDBL_REDIR_DECL
(
«me
)

	)

419 #ifde‡
__REDIRECT


420 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

421 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

422 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/sys/select.h

21 #i‚de‡
_SYS_SELECT_H


22 
	#_SYS_SELECT_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	~<bôs/£À˘.h
>

33 
	~<bôs/sig£t.h
>

35 #i‚de‡
__sig£t_t_deföed


36 
	#__sig£t_t_deföed


	)

37 
__sig£t_t
 
	tsig£t_t
;

41 
	#__√ed_time_t


	)

42 
	#__√ed_time•ec


	)

43 
	~<time.h
>

44 
	#__√ed_timevÆ


	)

45 
	~<bôs/time.h
>

47 #i‚de‡
__su£c⁄ds_t_deföed


48 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

49 
	#__su£c⁄ds_t_deföed


	)

54 
	t__fd_mask
;

57 #unde‡
__NFDBITS


59 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

60 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

61 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

68 #ifde‡
__USE_XOPEN


69 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

70 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

72 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

75 } 
	tfd_£t
;

78 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

80 #ifde‡
__USE_MISC


82 
__fd_mask
 
	tfd_mask
;

85 
	#NFDBITS
 
__NFDBITS


	)

90 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

91 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

92 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

93 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

96 
__BEGIN_DECLS


106 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

107 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

108 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

109 
timevÆ
 *
__ª°ri˘
 
__timeout
);

111 #ifde‡
__USE_XOPEN2K


118 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

119 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

120 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

121 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

122 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

127 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


128 
	~<bôs/£À˘2.h
>

131 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

20 #i‚de‡
_SYS_SYSMACROS_H


21 
	#_SYS_SYSMACROS_H
 1

	)

23 
	~<„©uªs.h
>

28 #ifde‡
__GLIBC_HAVE_LONG_LONG


29 
__BEGIN_DECLS


31 
__exãnsi⁄__


32 
	$gnu_dev_maj‹
 (
__dev
)

33 
__THROW
 
__©åibuã_c⁄°__
;

34 
__exãnsi⁄__


35 
	$gnu_dev_mö‹
 (
__dev
)

36 
__THROW
 
__©åibuã_c⁄°__
;

37 
__exãnsi⁄__


38 
	$gnu_dev_makedev
 (
__maj‹
,

39 
__mö‹
)

40 
__THROW
 
__©åibuã_c⁄°__
;

42 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


43 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

44 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

46  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

47 
	}
}

49 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

50 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

52  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

53 
	}
}

55 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

56 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

58  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

59 | (((Ë(
__mö‹
 & ~0xff)) << 12)

60 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

61 
	}
}

63 
	g__END_DECLS


66 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

67 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

68 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_SVID


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/bits/byteswap.h

19 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_BYTESWAP_H


24 
	#_BITS_BYTESWAP_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

35 
	~<bôs/byãsw≠-16.h
>

38 
	#__bsw≠_c⁄°™t_32
(
x
) \

39 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

40 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

42 #ifde‡
__GNUC__


43 #i‡
__GNUC_PREREQ
 (4, 3)

44 
__ölöe
 

45 
	$__bsw≠_32
 (
__bsx
)

47  
	`__buûtö_bsw≠32
 (
__bsx
);

48 
	}
}

49 #ñi‡
__GNUC__
 >= 2

50 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

51 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

52 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

53 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

54 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

55 || 
deföed
 
	g__amdÁm10__
)

58 
	#__bsw≠_32
(
x
) \

59 (
__exãnsi⁄__
 \

60 ({ 
__v
, 
__x
 = (
x
); \

61 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

62 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

64 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

65 
__v
; }))

	)

67 
	#__bsw≠_32
(
x
) \

68 (
__exãnsi⁄__
 \

69 ({ 
__v
, 
__x
 = (
x
); \

70 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

71 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

73 
	`__asm__
 ("rorw $8, %w0;" \

76 : "Ù" (
__v
) \

77 : "0" (
__x
) \

79 
__v
; }))

	)

82 
	#__bsw≠_32
(
x
) \

83 (
__exãnsi⁄__
 \

84 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

87 
__ölöe
 

88 
	$__bsw≠_32
 (
__bsx
)

90  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

91 
	}
}

95 #i‡
__GNUC_PREREQ
 (2, 0)

97 
	#__bsw≠_c⁄°™t_64
(
x
) \

98 (
	`__exãnsi⁄__
 ((((
x
) & 0xff00000000000000ull) >> 56) \

99 | (((
x
) & 0x00ff000000000000ull) >> 40) \

100 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

101 | (((
x
) & 0x000000ff00000000ull) >> 8) \

102 | (((
x
) & 0x00000000ff000000ull) << 8) \

103 | (((
x
) & 0x0000000000ff0000ull) << 24) \

104 | (((
x
) & 0x000000000000ff00ull) << 40) \

105 | (((
x
Ë& 0x00000000000000ffuŒË<< 56)))

	)

107 #i‡
__GNUC_PREREQ
 (4, 3)

108 
__ölöe
 
__uöt64_t


109 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

111  
	`__buûtö_bsw≠64
 (
__bsx
);

112 
	}
}

113 #ñi‡
__WORDSIZE
 == 64

114 
	#__bsw≠_64
(
x
) \

115 (
__exãnsi⁄__
 \

116 ({ 
__uöt64_t
 
__v
, 
__x
 = (
x
); \

117 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

118 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

120 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

121 
__v
; }))

	)

123 
	#__bsw≠_64
(
x
) \

124 (
__exãnsi⁄__
 \

125 ({ uni⁄ { 
__exãnsi⁄__
 
__uöt64_t
 
__Œ
; \

126 
__l
[2]; } 
__w
, 
__r
; \

127 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

128 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

131 
__w
.
__Œ
 = (
x
); \

132 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

133 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

135 
__r
.
__Œ
; }))

	)

137 #ñi‡
__GLIBC_HAVE_LONG_LONG


138 
	#__bsw≠_c⁄°™t_64
(
x
) \

139 ((((
x
) & 0xff00000000000000ull) >> 56) \

140 | (((
x
) & 0x00ff000000000000ull) >> 40) \

141 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

142 | (((
x
) & 0x000000ff00000000ull) >> 8) \

143 | (((
x
) & 0x00000000ff000000ull) << 8) \

144 | (((
x
) & 0x0000000000ff0000ull) << 24) \

145 | (((
x
) & 0x000000000000ff00ull) << 40) \

146 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

148 
__ölöe
 
__uöt64_t


149 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

151  
	`__bsw≠_c⁄°™t_64
 (
__bsx
);

152 
	}
}

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libc-lock.h

21 #i‚de‡
_BITS_LIBC_LOCK_H


22 
	#_BITS_LIBC_LOCK_H
 1

	)

24 
	~<±hªad.h
>

27 #ifde‡
_IO_MTSAFE_IO


28 
±hªad_muãx_t
 
	t__libc_lock_t
;

29 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

30 #ifde‡
__USE_UNIX98


31 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

33 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

35 
__libc_lock_ªcursive_t
 
	t__πld_lock_ªcursive_t
;

37 
__libc_lock_›aque__
 
	t__libc_lock_t
;

38 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

39 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

43 
±hªad_key_t
 
	t__libc_key_t
;

52 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

53 
CLASS
 
__libc_lock_t
 
NAME
;

	)

54 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

55 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

56 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

57 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

58 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

59 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

70 #i‡
__LT_SPINLOCK_INIT
 == 0

71 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

72 
CLASS
 
__libc_lock_t
 
NAME
;

	)

74 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

75 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

78 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

79 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

83 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

84 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

85 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

86 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

88 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

89 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

90 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

91 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

93 #i‡
deföed
 
__PIC__


94 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

95 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

96 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

98 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

99 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

101 
	#__libc_maybe_ˇŒ2
(
FUNC
, 
ARGS
, 
ELSE
Ë
	`__libc_maybe_ˇŒ
 (
__
##FUNC, ARGS, ELSE)

	)

105 
	#__libc_lock_öô
(
NAME
) \

106 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0))

	)

107 
	#__libc_rwlock_öô
(
NAME
) \

108 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0));

	)

111 
	#__libc_lock_öô_ªcursive
(
NAME
) \

113 i‡(
__±hªad_muãx_öô
 !
NULL
) \

115 
±hªad_muãx©å_t
 
__©å
; \

116 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

117 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

118 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

119 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

121 } 0);

	)

122 
	#__πld_lock_öô_ªcursive
(
NAME
) \

123 
	`__libc_lock_öô_ªcursive
 (
NAME
)

	)

128 
	#__libc_lock_föi
(
NAME
) \

129 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_de°roy
, (&(
NAME
)), 0));

	)

130 
	#__libc_rwlock_föi
(
NAME
) \

131 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0));

	)

134 
	#__libc_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi
 ((NAME).
muãx
)

	)

135 
	#__πld_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi_ªcursive
 (NAME)

	)

138 
	#__libc_lock_lock
(
NAME
) \

139 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_lock
, (&(
NAME
)), 0));

	)

140 
	#__libc_rwlock_rdlock
(
NAME
) \

141 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0));

	)

142 
	#__libc_rwlock_wæock
(
NAME
) \

143 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0));

	)

146 
	#__libc_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock
 ((NAME).
muãx
)

	)

149 
	#__libc_lock_åylock
(
NAME
) \

150 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_åylock
, (&(
NAME
)), 0))

	)

151 
	#__libc_rwlock_åyrdlock
(
NAME
) \

152 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0))

	)

153 
	#__libc_rwlock_åywæock
(
NAME
) \

154 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0))

	)

157 
	#__libc_lock_åylock_ªcursive
(
NAME
Ë
	`__libc_lock_åylock
 ((NAME).
muãx
)

	)

158 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

159 
	`__libc_lock_åylock_ªcursive
 (
NAME
)

	)

162 
	#__libc_lock_u∆ock
(
NAME
) \

163 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_u∆ock
, (&(
NAME
)), 0));

	)

164 
	#__libc_rwlock_u∆ock
(
NAME
) \

165 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0));

	)

168 
	#__libc_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock
 ((NAME).
muãx
)

	)

170 
	#__πld_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock_ªcursive
 (NAME)

	)

171 
	#__πld_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock_ªcursive
 (NAME)

	)

174 #i‡
PTHREAD_ONCE_INIT
 == 0

177 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

178 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

180 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

181 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

185 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

187 i‡(
__±hªad_⁄˚
 !
NULL
) \

188 
	`__±hªad_⁄˚
 (&(
ONCE_CONTROL
), (
INIT_FUNCTION
)); \

189 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

190 
	`INIT_FUNCTION
 (); \

191 (
ONCE_CONTROL
) = 2; \

193 } 0)

	)

197 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

198 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

199 
_avaû
 = (
DOIT
Ë&& 
_±hªad_˛ónup_push_de„r
 !
NULL
; \

200 i‡(
_avaû
) { \

201 
	`_±hªad_˛ónup_push_de„r
 (&
_buf„r
, (
FCT
), (
ARG
)); \

202 }

	)

205 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

206 i‡(
_avaû
) { \

207 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

209 }

	)

212 
	#__libc_˛ónup_íd
(
DOIT
) \

213 i‡(
_avaû
) { \

214 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

215 }

	)

217 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

218 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

219 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_push
, (&
_buf„r
, (
f˘
), (
¨g
)), 0)

	)

221 
	#__libc_˛ónup_p›
(
execuã
) \

222 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_p›
, (&
_buf„r
, 
execuã
), 0); \

223 }

	)

226 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

227 (
	`__libc_maybe_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1))

	)

230 
	#__libc_gë•ecific
(
KEY
) \

231 (
	`__libc_maybe_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
))

	)

234 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

235 (
	`__libc_maybe_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0))

	)

239 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

240 (
	`__libc_maybe_ˇŒ
 (
__±hªad_©f‹k
, (
PREPARE
, 
PARENT
, 
CHILD
), 0))

	)

242 
__BEGIN_DECLS


244 
_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

245 (*
__routöe
) (*),

246 *
__¨g
Ë
__THROW
;

248 
	$_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

249 
__execuã
Ë
__THROW
;

255 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

256 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

258 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

260 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

262 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

264 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

266 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

268 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

270 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

271 
__köd
);

273 #ifde‡
__USE_UNIX98


274 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

275 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

277 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

279 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

281 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

283 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

285 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

287 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

290 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

291 (*
__de°r_fun˘i⁄
) (*));

293 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

294 
__c⁄°
 *
__poöãr
);

296 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

298 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

299 (*
__öô_routöe
) ());

301 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

302 (*
__∑ª¡
) (),

303 (*
__chûd
) ());

305 
__END_DECLS


309 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


310 #¥agm®
wók
 
__±hªad_muãx_öô


311 #¥agm®
wók
 
__±hªad_muãx_de°roy


312 #¥agm®
wók
 
__±hªad_muãx_lock


313 #¥agm®
wók
 
__±hªad_muãx_åylock


314 #¥agm®
wók
 
__±hªad_muãx_u∆ock


315 #¥agm®
wók
 
__±hªad_muãx©å_öô


316 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


317 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


318 #¥agm®
wók
 
__±hªad_rwlock_de°roy


319 #¥agm®
wók
 
__±hªad_rwlock_rdlock


320 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


321 #¥agm®
wók
 
__±hªad_rwlock_wæock


322 #¥agm®
wók
 
__±hªad_rwlock_åywæock


323 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


324 #¥agm®
wók
 
__±hªad_key_¸óã


325 #¥agm®
wók
 
__±hªad_£t•ecific


326 #¥agm®
wók
 
__±hªad_gë•ecific


327 #¥agm®
wók
 
__±hªad_⁄˚


328 #¥agm®
wók
 
__±hªad_öôülize


329 #¥agm®
wók
 
__±hªad_©f‹k


330 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


331 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


332 #¥agm®
wók
 
_±hªad_˛ónup_push


333 #¥agm®
wók
 
_±hªad_˛ónup_p›


338 
	#__libc_muãx_u∆ock
 
__±hªad_muãx_u∆ock


	)

	@/usr/include/bits/select.h

18 #i‚de‡
_SYS_SELECT_H


22 
	~<bôs/w‹dsize.h
>

25 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

27 #i‡
__WORDSIZE
 == 64

28 
	#__FD_ZERO_STOS
 "°osq"

	)

30 
	#__FD_ZERO_STOS
 "°o¶"

	)

33 
	#__FD_ZERO
(
fd•
) \

35 
__d0
, 
__d1
; \

36 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

37 : "=c" (
__d0
), "=D" (
__d1
) \

38 : "a" (0), "0" ( (
fd_£t
) \

39 /  (
__fd_mask
)), \

40 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

42 } 0)

	)

48 
	#__FD_ZERO
(
£t
) \

50 
__i
; \

51 
fd_£t
 *
__¨r
 = (
£t
); \

52 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

53 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

54 } 0)

	)

58 
	#__FD_SET
(
d
, 
£t
) \

59 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] |
	`__FD_MASK
 (d)))

	)

60 
	#__FD_CLR
(
d
, 
£t
) \

61 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] &~
	`__FD_MASK
 (d)))

	)

62 
	#__FD_ISSET
(
d
, 
£t
) \

63 ((
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

19 #i‚de‡
_SYS_SELECT_H


24 
__fdñt_chk
 (
__d
);

25 
	$__fdñt_w¨n
 (
__d
)

26 
	`__w¨«âr
 ("bit outside of fd_set selected");

27 #unde‡
__FD_ELT


28 
	#__FD_ELT
(
d
) \

29 
__exãnsi⁄__
 \

30 ({ 
__d
 = (
d
); \

31 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

32 ? (0 <
__d
 && __d < 
__FD_SETSIZE
 \

33 ? (
__d
 / 
__NFDBITS
) \

34 : 
	`__fdñt_w¨n
 (
__d
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/sigset.h

20 #i‚def 
_SIGSET_H_ty≥s


21 
	#_SIGSET_H_ty≥s
 1

	)

23 
	t__sig_©omic_t
;

27 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

30 
	m__vÆ
[
_SIGSET_NWORDS
];

31 } 
	t__sig£t_t
;

42 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


43 
	#_SIGSET_H_‚s
 1

	)

45 #i‚de‡
_EXTERN_INLINE


46 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

50 
	#__sigmask
(
sig
) \

51 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

54 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

56 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

57 
	#__sigem±y£t
(
£t
) \

58 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

59 
sig£t_t
 *
__£t
 = (
£t
); \

60 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

61 0; }))

	)

62 
	#__sigfûl£t
(
£t
) \

63 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

64 
sig£t_t
 *
__£t
 = (
£t
); \

65 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

66 0; }))

	)

68 #ifde‡
__USE_GNU


72 
	#__sigi£m±y£t
(
£t
) \

73 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

74 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

75 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

76 !
__ªt
 && --
__˙t
 >= 0) \

77 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

78 
__ªt
 =0; }))

	)

79 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

80 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

81 
sig£t_t
 *
__de°
 = (
de°
); \

82 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

83 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

84 --
__˙t
 >= 0) \

85 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

86 & 
__right
->
__vÆ
[
__˙t
]); \

87 0; }))

	)

88 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

89 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

90 
sig£t_t
 *
__de°
 = (
de°
); \

91 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

92 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

93 --
__˙t
 >= 0) \

94 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

95 | 
__right
->
__vÆ
[
__˙t
]); \

96 0; }))

	)

103 
__sigismembî
 (c⁄° 
__sig£t_t
 *, );

104 
__sigadd£t
 (
__sig£t_t
 *, );

105 
__sigdñ£t
 (
__sig£t_t
 *, );

107 #ifde‡
__USE_EXTERN_INLINES


108 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

109 
_EXTERN_INLINE
 \

110 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

112 
__mask
 = 
	`__sigmask
 (
__sig
); \

113 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

114  
BODY
; \

115 }

	)

117 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
) ? 1 : 0, const)

118 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

119 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

121 #unde‡
__SIGSETFN


	@/usr/include/bits/time.h

23 #i‡
deföed
 
__√ed_timevÆ
 || deföed 
__USE_GNU


24 #i‚de‡
_STRUCT_TIMEVAL


25 
	#_STRUCT_TIMEVAL
 1

	)

26 
	~<bôs/ty≥s.h
>

30 
	stimevÆ


32 
__time_t
 
	mtv_£c
;

33 
__su£c⁄ds_t
 
	mtv_u£c
;

38 #i‚de‡
__√ed_timevÆ


39 #i‚de‡
_BITS_TIME_H


40 
	#_BITS_TIME_H
 1

	)

48 
	#CLOCKS_PER_SEC
 1000000l

	)

50 #i‡(!
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_POSIX
) \

51 && !
deföed
 
	g__USE_XOPEN2K


54 
	~<bôs/ty≥s.h
>

55 
__sysc⁄f
 ();

56 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

59 #ifde‡
__USE_POSIX199309


61 
	#CLOCK_REALTIME
 0

	)

63 
	#CLOCK_MONOTONIC
 1

	)

65 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

67 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

69 
	#CLOCK_MONOTONIC_RAW
 4

	)

71 
	#CLOCK_REALTIME_COARSE
 5

	)

73 
	#CLOCK_MONOTONIC_COARSE
 6

	)

75 
	#CLOCK_BOOTTIME
 7

	)

77 
	#CLOCK_REALTIME_ALARM
 8

	)

79 
	#CLOCK_BOOTTIME_ALARM
 9

	)

82 
	#TIMER_ABSTIME
 1

	)

85 #ifde‡
__USE_GNU


86 
	~<bôs/timex.h
>

88 
__BEGIN_DECLS


91 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
;

93 
__END_DECLS


99 #unde‡
__√ed_timevÆ


	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
) (*, const *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
) (const *, const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 c⁄° *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/linux/errno.h

1 
	~<asm/î∫o.h
>

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

158 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

159 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

160 
__THROW
;

163 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

164 
__THROW
 
__©åibuã_puª__
;

166 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

167 
__THROW
 
__©åibuã_puª__
;

168 
__END_NAMESPACE_STD


170 #ifde‡
__USE_XOPEN2K8


172 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

175 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

176 
size_t
 
__n
Ë
__THROW
;

180 
	~<xloˇÀ.h
>

182 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

183 
__loˇÀ_t
 
__loc
Ë
__THROW
;

185 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


192 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

196 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

197 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

198 
__END_NAMESPACE_STD


200 #ifde‡
__USE_XOPEN2K8


206 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

207 
__loˇÀ_t
 
__loc
Ë
__THROW
;

212 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

213 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

216 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

219 
__BEGIN_NAMESPACE_STD


221 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


222 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

223 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
__©åibuã_puª__
;

231 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


232 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

233 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
__©åibuã_puª__
;

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_GNU


245 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

246 
__THROW
 
__©åibuã_puª__
;

249 
__BEGIN_NAMESPACE_STD


252 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

253 
__THROW
 
__©åibuã_puª__
;

256 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

257 
__THROW
 
__©åibuã_puª__
;

259 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


260 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

262 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

263 c⁄° 
wch¨_t
 *
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

266 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

267 
__THROW
 
__©åibuã_puª__
;

270 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


271 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

273 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

274 c⁄° 
wch¨_t
 *
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

277 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

278 
__THROW
 
__©åibuã_puª__
;

282 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

283 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

284 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

287 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

288 
__END_NAMESPACE_STD


290 #ifde‡
__USE_XOPEN


292 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


293 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

295 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

296 c⁄° 
wch¨_t
 *
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

299 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

300 
__THROW
 
__©åibuã_puª__
;

304 #ifde‡
__USE_XOPEN2K8


306 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

307 
__THROW
 
__©åibuã_puª__
;

311 
__BEGIN_NAMESPACE_STD


313 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


314 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

316 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

317 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

320 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

321 
__THROW
 
__©åibuã_puª__
;

325 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

326 
__THROW
 
__©åibuã_puª__
;

329 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

330 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

334 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

335 
__THROW
;

338 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifde‡
__USE_GNU


344 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

345 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

346 
__THROW
;

350 
__BEGIN_NAMESPACE_STD


353 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

357 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

361 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

365 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

366 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

367 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

370 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

371 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #ifde‡
__USE_EXTERN_INLINES


386 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

387 
__exã∫_ölöe
 
wöt_t


388 
	`__NTH
 (
	$btowc
 (
__c
))

389 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

390 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

392 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

393 
__exã∫_ölöe
 

394 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

395 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

396 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

398 
__exã∫_ölöe
 
size_t


399 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

400 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

401 {  (
__ps
 !
NULL


402 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

405 
__BEGIN_NAMESPACE_STD


408 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

409 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

410 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

415 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

416 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
__END_NAMESPACE_STD


420 #ifdef 
__USE_XOPEN2K8


423 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

424 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

425 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

429 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

430 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

431 
size_t
 
__nwc
, size_à
__Àn
,

432 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

437 #ifde‡
__USE_XOPEN


439 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

443 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

447 
__BEGIN_NAMESPACE_STD


450 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

451 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

452 
__END_NAMESPACE_STD


454 #ifde‡
__USE_ISOC99


455 
__BEGIN_NAMESPACE_C99


457 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

460 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

461 
__END_NAMESPACE_C99


465 
__BEGIN_NAMESPACE_STD


468 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

469 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

473 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

474 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

475 
__THROW
;

476 
__END_NAMESPACE_STD


478 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

479 
__BEGIN_NAMESPACE_C99


482 
__exãnsi⁄__


483 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

484 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

485 
__THROW
;

489 
__exãnsi⁄__


490 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

491 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

492 
__ba£
Ë
__THROW
;

493 
__END_NAMESPACE_C99


496 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


499 
__exãnsi⁄__


500 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

502 
__THROW
;

506 
__exãnsi⁄__


507 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

508 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

509 
__ba£
Ë
__THROW
;

512 #ifde‡
__USE_GNU


526 
	~<xloˇÀ.h
>

530 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

531 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

532 
__loˇÀ_t
 
__loc
Ë
__THROW
;

534 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

535 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

536 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

538 
__exãnsi⁄__


539 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

540 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

541 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

543 
__exãnsi⁄__


544 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

545 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

546 
__ba£
, 
__loˇÀ_t
 
__loc
)

547 
__THROW
;

549 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

550 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
;

553 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

554 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

555 
__THROW
;

557 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

558 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

559 
__loˇÀ_t
 
__loc
Ë
__THROW
;

563 #ifde‡
__USE_XOPEN2K8


566 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

567 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

571 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

572 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

573 
__THROW
;

580 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

583 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


584 
__BEGIN_NAMESPACE_STD


587 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

594 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

595 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

605 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

606 
__THROW
 ;

612 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

613 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

614 
__gnuc_va_li°
 
__¨g
)

620 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

621 
__gnuc_va_li°
 
__¨g
)

625 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

626 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

627 
__gnuc_va_li°
 
__¨g
)

628 
__THROW
 ;

635 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

636 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

646 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

647 
__THROW
 ;

649 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

650 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

651 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

652 #ifde‡
__REDIRECT


656 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

657 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_fwsˇnf
)

660 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_wsˇnf
)

663 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

664 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

665 ...), 
__isoc99_swsˇnf
)

668 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

669 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

670 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

671 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

673 
__THROW
;

674 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

675 
	#wsˇnf
 
__isoc99_wsˇnf


	)

676 
	#swsˇnf
 
__isoc99_swsˇnf


	)

680 
__END_NAMESPACE_STD


683 #ifde‡
__USE_ISOC99


684 
__BEGIN_NAMESPACE_C99


689 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

690 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

691 
__gnuc_va_li°
 
__¨g
)

697 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

698 
__gnuc_va_li°
 
__¨g
)

701 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

702 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

703 
__gnuc_va_li°
 
__¨g
)

704 
__THROW
 ;

706 #i‡!
deföed
 
__USE_GNU
 \

707 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

708 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

709 #ifde‡
__REDIRECT


710 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

711 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

714 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

717 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

718 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

719 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

722 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

723 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
);

727 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

728 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

730 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

731 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

732 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

736 
__END_NAMESPACE_C99


740 
__BEGIN_NAMESPACE_STD


745 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

746 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

752 
wöt_t
 
	`gëwch¨
 ();

759 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

760 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

766 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

774 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

775 
__FILE
 *
__ª°ri˘
 
__°ªam
);

781 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

782 
__FILE
 *
__ª°ri˘
 
__°ªam
);

789 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

790 
__END_NAMESPACE_STD


793 #ifde‡
__USE_GNU


801 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

802 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

810 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

818 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

827 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

828 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

837 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

838 
__FILE
 *
__ª°ri˘
 
__°ªam
);

846 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

847 
__FILE
 *
__ª°ri˘
 
__°ªam
);

851 
__BEGIN_NAMESPACE_C99


855 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

856 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

857 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

858 
__END_NAMESPACE_C99


860 #ifde‡
__USE_GNU


861 
	~<xloˇÀ.h
>

865 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

866 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

867 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

868 
__loˇÀ_t
 
__loc
Ë
__THROW
;

877 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


878 
	#__√ed_iswxxx


	)

879 
	~<w˘y≥.h
>

883 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


884 
	~<bôs/wch¨2.h
>

887 #ifde‡
__LDBL_COMPAT


888 
	~<bôs/wch¨-ldbl.h
>

891 
__END_DECLS


899 #unde‡
__√ed_mb°©e_t


900 #unde‡
__√ed_wöt_t


	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/bits/byteswap-16.h

19 #i‚de‡
_BITS_BYTESWAP_H


23 #ifde‡
__GNUC__


24 #i‡
__GNUC__
 >= 2

25 
	#__bsw≠_16
(
x
) \

26 (
__exãnsi⁄__
 \

27 ({ 
__v
, 
__x
 = (Ë(
x
); \

28 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

29 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

31 
	`__asm__
 ("rorw $8, %w0" \

32 : "Ù" (
__v
) \

33 : "0" (
__x
) \

35 
__v
; }))

	)

38 
	#__bsw≠_16
(
x
) \

39 (
__exãnsi⁄__
 \

40 ({ 
__x
 = (Ë(
x
); \

41 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

44 
__ölöe
 

45 
	$__bsw≠_16
 (
__bsx
)

47  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

48 
	}
}

	@/usr/include/bits/timex.h

18 #i‚def 
_BITS_TIMEX_H


19 
	#_BITS_TIMEX_H
 1

	)

21 
	~<bôs/ty≥s.h
>

25 
	stimex


27 
	mmodes
;

28 
__sysˇŒ_¶⁄g_t
 
	moff£t
;

29 
__sysˇŒ_¶⁄g_t
 
	m‰eq
;

30 
__sysˇŒ_¶⁄g_t
 
	mmaxîr‹
;

31 
__sysˇŒ_¶⁄g_t
 
	me°îr‹
;

32 
	m°©us
;

33 
__sysˇŒ_¶⁄g_t
 
	mc⁄°™t
;

34 
__sysˇŒ_¶⁄g_t
 
	m¥ecisi⁄
;

35 
__sysˇŒ_¶⁄g_t
 
	mtﬁî™˚
;

36 
timevÆ
 
	mtime
;

37 
__sysˇŒ_¶⁄g_t
 
	mtick
;

38 
__sysˇŒ_¶⁄g_t
 
	mµs‰eq
;

39 
__sysˇŒ_¶⁄g_t
 
	mjôãr
;

40 
	mshi·
;

41 
__sysˇŒ_¶⁄g_t
 
	m°abû
;

42 
__sysˇŒ_¶⁄g_t
 
	mjô˙t
;

43 
__sysˇŒ_¶⁄g_t
 
	mˇl˙t
;

44 
__sysˇŒ_¶⁄g_t
 
	mîr˙t
;

45 
__sysˇŒ_¶⁄g_t
 
	m°b˙t
;

47 
	mèi
;

56 
	#ADJ_OFFSET
 0x0001

	)

57 
	#ADJ_FREQUENCY
 0x0002

	)

58 
	#ADJ_MAXERROR
 0x0004

	)

59 
	#ADJ_ESTERROR
 0x0008

	)

60 
	#ADJ_STATUS
 0x0010

	)

61 
	#ADJ_TIMECONST
 0x0020

	)

62 
	#ADJ_TAI
 0x0080

	)

63 
	#ADJ_MICRO
 0x1000

	)

64 
	#ADJ_NANO
 0x2000

	)

65 
	#ADJ_TICK
 0x4000

	)

66 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

67 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

70 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

71 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

72 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

73 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

74 
	#MOD_STATUS
 
ADJ_STATUS


	)

75 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

76 
	#MOD_CLKB
 
ADJ_TICK


	)

77 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

78 
	#MOD_TAI
 
ADJ_TAI


	)

79 
	#MOD_MICRO
 
ADJ_MICRO


	)

80 
	#MOD_NANO
 
ADJ_NANO


	)

84 
	#STA_PLL
 0x0001

	)

85 
	#STA_PPSFREQ
 0x0002

	)

86 
	#STA_PPSTIME
 0x0004

	)

87 
	#STA_FLL
 0x0008

	)

89 
	#STA_INS
 0x0010

	)

90 
	#STA_DEL
 0x0020

	)

91 
	#STA_UNSYNC
 0x0040

	)

92 
	#STA_FREQHOLD
 0x0080

	)

94 
	#STA_PPSSIGNAL
 0x0100

	)

95 
	#STA_PPSJITTER
 0x0200

	)

96 
	#STA_PPSWANDER
 0x0400

	)

97 
	#STA_PPSERROR
 0x0800

	)

99 
	#STA_CLOCKERR
 0x1000

	)

100 
	#STA_NANO
 0x2000

	)

101 
	#STA_MODE
 0x4000

	)

102 
	#STA_CLK
 0x8000

	)

105 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 | \

106 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@/usr/include/bits/wchar-ldbl.h

19 #i‚de‡
_WCHAR_H


23 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


24 
__BEGIN_NAMESPACE_C99


25 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

26 
__LDBL_REDIR_DECL
 (
w¥ötf
);

27 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

28 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
	g__REDIRECT
 \

33 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

38 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

39 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

42 
__END_NAMESPACE_C99


45 #ifde‡
__USE_ISOC99


46 
__BEGIN_NAMESPACE_C99


47 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

48 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

49 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

50 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

51 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

54 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

55 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

58 
__END_NAMESPACE_C99


61 #ifde‡
__USE_GNU


62 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

65 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


66 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

67 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

68 #i‡
__USE_FORTIFY_LEVEL
 > 1

69 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

70 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar.h

19 #i‚de‡
_BITS_WCHAR_H


20 
	#_BITS_WCHAR_H
 1

	)

22 
	~<bôs/w‹dsize.h
>

24 #i‡
__WORDSIZE
 == 64

25 
	#__WCHAR_MIN
 (-2147483647 - 1)

	)

26 
	#__WCHAR_MAX
 (2147483647)

	)

28 
	#__WCHAR_MIN
 (-2147483647»- 1l)

	)

29 
	#__WCHAR_MAX
 (2147483647l)

	)

	@/usr/include/bits/wchar2.h

19 #i‚de‡
_WCHAR_H


24 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

25 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

26 
size_t
 
__ns1
Ë
__THROW
;

27 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

28 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

29 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

30 
wmem˝y
);

31 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

32 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

33 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

34 
size_t
 
__ns1
), 
__wmem˝y_chk
)

35 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

38 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

39 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

40 
size_t
 
__n
))

42 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

44 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

45  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

46 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

48 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

49  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

50 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

52  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

53 
	}
}

56 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

57 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

58 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

59 c⁄° 
wch¨_t
 *
__s2
,

60 
size_t
 
__n
), 
wmemmove
);

61 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

62 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

63 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

64 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

67 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

68 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
))

70 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

72 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

73  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

74 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

76 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

77  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

78 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

80  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

81 
	}
}

84 #ifde‡
__USE_GNU


85 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

86 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

87 
size_t
 
__ns1
Ë
__THROW
;

88 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

89 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

90 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
,

91 
size_t
 
__n
), 
wmemp˝y
);

92 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

93 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

94 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

95 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

96 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

99 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

100 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

101 
size_t
 
__n
))

103 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

105 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

106  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

107 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

109 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

110  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

111 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

113  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

114 
	}
}

118 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

119 
size_t
 
__ns
Ë
__THROW
;

120 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

121 
size_t
 
__n
), 
wmem£t
);

122 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

123 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

124 
size_t
 
__ns
), 
__wmem£t_chk
)

125 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

128 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

129 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

131 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

133 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

134  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

136 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

137  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

138 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

140  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

141 
	}
}

144 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

146 
size_t
 
__n
Ë
__THROW
;

147 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

148 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

149 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

151 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

152 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

154 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

155  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

156  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

157 
	}
}

160 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

161 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

162 
size_t
 
__de°Àn
Ë
__THROW
;

163 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

164 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

165 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

167 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

168 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

170 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

171  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

172  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

173 
	}
}

176 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

177 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

178 
size_t
 
__de°Àn
Ë
__THROW
;

179 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

180 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

181 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

182 
size_t
 
__n
), 
wc¢˝y
);

183 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

184 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

185 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

186 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

187 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

190 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

191 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

192 
size_t
 
__n
))

194 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

196 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

197  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

198 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

199 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

200  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

201 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

203  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

204 
	}
}

207 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

208 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

209 
size_t
 
__de°Àn
Ë
__THROW
;

210 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

211 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

212 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

213 
size_t
 
__n
), 
w˝n˝y
);

214 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

215 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

216 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

217 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

218 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

221 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

222 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

223 
size_t
 
__n
))

225 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

227 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

228  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

229 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

230 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

231  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

232 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

234  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

235 
	}
}

238 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

239 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

240 
size_t
 
__de°Àn
Ë
__THROW
;

241 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

242 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

243 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

245 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

246 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

248 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

249  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

250  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

251 
	}
}

254 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

255 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

256 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

257 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

258 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

259 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

260 
size_t
 
__n
), 
wc¢ˇt
);

262 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

263 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

264 
size_t
 
__n
))

266 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

267  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

268 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

269  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

270 
	}
}

273 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

274 
__Êag
, 
size_t
 
__s_Àn
,

275 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

276 
__THROW
 ;

278 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

279 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

280 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

281 
sw¥ötf
);

283 #ifde‡
__va_¨g_∑ck


284 
__f‹tify_fun˘i⁄
 

285 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

286 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

288 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

289  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

290 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

291 
__fmt
, 
	`__va_¨g_∑ck
 ());

292  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

293 
	}
}

294 #ñi‡!
deföed
 
__˝lu•lus


296 
	#sw¥ötf
(
s
, 
n
, ...) \

297 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

298 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

299 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

300 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

303 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

304 
__Êag
, 
size_t
 
__s_Àn
,

305 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

306 
__gnuc_va_li°
 
__¨g
)

307 
__THROW
 ;

309 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

310 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

311 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

312 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

314 
__f‹tify_fun˘i⁄
 

315 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

316 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

318 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

319  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

320 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

321  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

322 
	}
}

325 #i‡
__USE_FORTIFY_LEVEL
 > 1

327 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

328 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

329 
__w¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

331 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

332 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

333 
__gnuc_va_li°
 
__≠
);

334 
__vw¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

335 
__gnuc_va_li°
 
__≠
);

337 #ifde‡
__va_¨g_∑ck


338 
__f‹tify_fun˘i⁄
 

339 
	$w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

341  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

342 
	}
}

344 
__f‹tify_fun˘i⁄
 

345 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

347  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

348 
	`__va_¨g_∑ck
 ());

349 
	}
}

350 #ñi‡!
deföed
 
__˝lu•lus


351 
	#w¥ötf
(...) \

352 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

353 
	#fw¥ötf
(
°ªam
, ...) \

354 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

357 
__f‹tify_fun˘i⁄
 

358 
	$vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

360  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

361 
	}
}

363 
__f‹tify_fun˘i⁄
 

364 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

365 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

367  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

368 
	}
}

372 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

373 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

374 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

375 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

376 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

377 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

378 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

379 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

380 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

383 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

384 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

386 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

388 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

389  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

390 
__n
, 
__°ªam
);

392 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

393  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

394 
__n
, 
__°ªam
);

396  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

397 
	}
}

399 #ifde‡
__USE_GNU


400 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

401 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

402 
__wur
;

403 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

404 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

405 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

406 
__wur
;

407 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

408 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

409 
__FILE
 *
__ª°ri˘
 
__°ªam
),

410 
__fgëws_u∆ocked_chk
)

411 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

414 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

415 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

417 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

419 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

420  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

421 
__n
, 
__°ªam
);

423 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

424  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

425 
__n
, 
__°ªam
);

427  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

428 
	}
}

432 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

433 
mb°©e_t
 *
__ª°ri˘
 
__p
,

434 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

435 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

436 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

437 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

439 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


440 
	`__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

441 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

446 
	#__WCHAR_MB_LEN_MAX
 16

	)

447 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


450 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

451  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

452  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

453 
	}
}

456 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

457 c⁄° **
__ª°ri˘
 
__§c
,

458 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

459 
size_t
 
__d°Àn
Ë
__THROW
;

460 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

461 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

462 c⁄° **
__ª°ri˘
 
__§c
,

463 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

464 
mb§towcs
);

465 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

466 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

467 c⁄° **
__ª°ri˘
 
__§c
,

468 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

469 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

470 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

473 
__f‹tify_fun˘i⁄
 
size_t


474 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

475 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

477 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

479 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

480  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

481 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

483 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

484  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

485 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

487  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

488 
	}
}

491 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

492 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

493 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

494 
size_t
 
__d°Àn
Ë
__THROW
;

495 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

496 (*
__ª°ri˘
 
__d°
,

497 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

498 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

499 
wc§tombs
);

500 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

501 (*
__ª°ri˘
 
__d°
,

502 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

503 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

504 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

505 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

507 
__f‹tify_fun˘i⁄
 
size_t


508 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

509 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

511 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

513 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

514  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

516 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

517  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

519  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

520 
	}
}

523 #ifde‡
__USE_GNU


524 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

525 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

526 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

527 
size_t
 
__d°Àn
Ë
__THROW
;

528 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

529 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

530 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

531 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

532 
mb¢πowcs
);

533 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

534 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

535 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

536 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

537 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

538 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

541 
__f‹tify_fun˘i⁄
 
size_t


542 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

543 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

545 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

547 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

548  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

549 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

551 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

552  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

553 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

555  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

556 
	}
}

559 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

560 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

561 
size_t
 
__nwc
, size_à
__Àn
,

562 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

563 
__THROW
;

564 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

565 (*
__ª°ri˘
 
__d°
,

566 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

567 
size_t
 
__nwc
, size_à
__Àn
,

568 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

569 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

570 (*
__ª°ri˘
 
__d°
,

571 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

572 
size_t
 
__nwc
, size_à
__Àn
,

573 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

574 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

575 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

577 
__f‹tify_fun˘i⁄
 
size_t


578 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

579 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

581 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

583 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

584  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

585 
	`__bos
 (
__d°
));

587 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

588  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

589 
	`__bos
 (
__d°
));

591  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

592 
	}
}

	@/usr/include/pthread.h

18 #i‚de‡
_PTHREAD_H


19 
	#_PTHREAD_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<ídün.h
>

23 
	~<sched.h
>

24 
	~<time.h
>

26 
	~<bôs/±hªadty≥s.h
>

27 
	~<bôs/£tjmp.h
>

28 
	~<bôs/w‹dsize.h
>

34 
	mPTHREAD_CREATE_JOINABLE
,

35 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

36 
	mPTHREAD_CREATE_DETACHED


37 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

44 
	mPTHREAD_MUTEX_TIMED_NP
,

45 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

46 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

47 
	mPTHREAD_MUTEX_ADAPTIVE_NP


48 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


50 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

51 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

52 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

53 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


55 #ifde‡
__USE_GNU


57 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


62 #ifde‡
__USE_XOPEN2K


66 
	mPTHREAD_MUTEX_STALLED
,

67 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

68 
	mPTHREAD_MUTEX_ROBUST
,

69 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


74 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


78 
	mPTHREAD_PRIO_NONE
,

79 
	mPTHREAD_PRIO_INHERIT
,

80 
	mPTHREAD_PRIO_PROTECT


86 #ifde‡
__PTHREAD_MUTEX_HAVE_PREV


87 
	#PTHREAD_MUTEX_INITIALIZER
 \

88 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

89 #ifde‡
__USE_GNU


90 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

91 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

92 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

98 
	#PTHREAD_MUTEX_INITIALIZER
 \

99 { { 0, 0, 0, 0, 0, { 0 } } }

	)

100 #ifde‡
__USE_GNU


101 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

102 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

103 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

112 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


115 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

116 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

117 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

118 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


124 #i‚de‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


125 #i‡
__WORDSIZE
 == 64

126 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

131 
	#PTHREAD_RWLOCK_INITIALIZER
 \

132 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

133 #ifde‡
__USE_GNU


134 #ifde‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


135 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

137 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

139 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


140 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

141 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

142 0, 0, 0, 0 } }

	)

144 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

145 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

146 0 } }

	)

156 
	mPTHREAD_INHERIT_SCHED
,

157 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

158 
	mPTHREAD_EXPLICIT_SCHED


159 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

166 
	mPTHREAD_SCOPE_SYSTEM
,

167 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

168 
	mPTHREAD_SCOPE_PROCESS


169 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

176 
	mPTHREAD_PROCESS_PRIVATE
,

177 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

178 
	mPTHREAD_PROCESS_SHARED


179 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

185 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

189 
	s_±hªad_˛ónup_buf„r


191 (*
	m__routöe
) (*);

192 *
	m__¨g
;

193 
	m__ˇn˚…y≥
;

194 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

200 
	mPTHREAD_CANCEL_ENABLE
,

201 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

202 
	mPTHREAD_CANCEL_DISABLE


203 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

207 
	mPTHREAD_CANCEL_DEFERRED
,

208 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

209 
	mPTHREAD_CANCEL_ASYNCHRONOUS


210 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

212 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

216 
	#PTHREAD_ONCE_INIT
 0

	)

219 #ifde‡
__USE_XOPEN2K


223 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

227 
__BEGIN_DECLS


232 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

233 c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

234 *(*
__°¨t_routöe
) (*),

235 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
__n⁄nuŒ
 ((1, 3));

241 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

249 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

251 #ifde‡
__USE_GNU


254 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

262 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

263 c⁄° 
time•ec
 *
__ab°ime
);

270 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

274 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

277 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
)

278 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

286 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

290 
__THROW
 
	`__n⁄nuŒ
 ((1));

293 
	$±hªad_©å_gëdëach°©e
 (c⁄° 
±hªad_©å_t
 *
__©å
,

294 *
__dëach°©e
)

295 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

298 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

299 
__dëach°©e
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1));

304 
	$±hªad_©å_gëgu¨dsize
 (c⁄° 
±hªad_©å_t
 *
__©å
,

305 
size_t
 *
__gu¨dsize
)

306 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

309 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

310 
size_t
 
__gu¨dsize
)

311 
__THROW
 
	`__n⁄nuŒ
 ((1));

315 
	$±hªad_©å_gësched∑øm
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

316 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

317 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

320 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

321 c⁄° 
sched_∑øm
 *
__ª°ri˘


322 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

325 
	$±hªad_©å_gëschedpﬁicy
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


326 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

327 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

330 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

331 
__THROW
 
	`__n⁄nuŒ
 ((1));

334 
	$±hªad_©å_gëöhîôsched
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


335 
__©å
, *
__ª°ri˘
 
__öhîô
)

336 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

339 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

340 
__öhîô
)

341 
__THROW
 
	`__n⁄nuŒ
 ((1));

345 
	$±hªad_©å_gësc›e
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

346 *
__ª°ri˘
 
__sc›e
)

347 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

350 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

351 
__THROW
 
	`__n⁄nuŒ
 ((1));

354 
	$±hªad_©å_gë°ackaddr
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


355 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

356 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

362 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

363 *
__°ackaddr
)

364 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

367 
	$±hªad_©å_gë°acksize
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


368 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

374 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

375 
size_t
 
__°acksize
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1));

378 #ifde‡
__USE_XOPEN2K


380 
	$±hªad_©å_gë°ack
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

381 **
__ª°ri˘
 
__°ackaddr
,

382 
size_t
 *
__ª°ri˘
 
__°acksize
)

383 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

388 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

389 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

392 #ifde‡
__USE_GNU


395 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

396 
size_t
 
__˝u£tsize
,

397 c⁄° 
˝u_£t_t
 *
__˝u£t
)

398 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

402 
	$±hªad_©å_gëafföôy_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
,

403 
size_t
 
__˝u£tsize
,

404 
˝u_£t_t
 *
__˝u£t
)

405 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

411 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

412 
__THROW
 
	`__n⁄nuŒ
 ((2));

420 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

421 c⁄° 
sched_∑øm
 *
__∑øm
)

422 
__THROW
 
	`__n⁄nuŒ
 ((3));

425 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

426 *
__ª°ri˘
 
__pﬁicy
,

427 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

428 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

431 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

432 
__THROW
;

435 #ifde‡
__USE_GNU


437 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

438 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

442 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, c⁄° *
__«me
)

443 
__THROW
 
	`__n⁄nuŒ
 ((2));

447 #ifde‡
__USE_UNIX98


449 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

452 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

455 #ifde‡
__USE_GNU


460 
	$±hªad_yõld
 (Ë
__THROW
;

465 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

466 c⁄° 
˝u_£t_t
 *
__˝u£t
)

467 
__THROW
 
	`__n⁄nuŒ
 ((3));

470 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

471 
˝u_£t_t
 *
__˝u£t
)

472 
__THROW
 
	`__n⁄nuŒ
 ((3));

485 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

486 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

497 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

501 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

504 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

509 
	`±hªad_ã°ˇn˚l
 ();

518 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

519 
__mask_was_ßved
;

520 } 
__ˇn˚l_jmp_buf
[1];

521 *
__∑d
[4];

522 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

525 #i‚de‡
__˛ónup_f˘_©åibuã


526 
	#__˛ónup_f˘_©åibuã


	)

531 
	s__±hªad_˛ónup_‰ame


533 (*
__ˇn˚l_routöe
) (*);

534 *
__ˇn˚l_¨g
;

535 
__do_ô
;

536 
__ˇn˚l_ty≥
;

539 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


540 #ifde‡
__˝lu•lus


542 ˛as†
	c__±hªad_˛ónup_˛ass


544 (*
__ˇn˚l_routöe
) (*);

545 *
__ˇn˚l_¨g
;

546 
__do_ô
;

547 
__ˇn˚l_ty≥
;

549 
public
:

550 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

551 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

552 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

553 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

554 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

555 &
__ˇn˚l_ty≥
); 
	}
}

556 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

566 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

568 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

572 
	#±hªad_˛ónup_p›
(
execuã
) \

573 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

574 } 0)

	)

576 #ifde‡
__USE_GNU


580 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

582 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

583 
__˛‰ame
.
	`__de„r
 ()

	)

588 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

589 
__˛‰ame
.
	`__ª°‹e
 (); \

590 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

591 } 0)

	)

598 
__exã∫_ölöe
 

599 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

601 i‡(
__‰ame
->
__do_ô
)

602 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

603 
	}
}

612 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

614 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

615 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

616 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

617 .
__do_ô
 = 1 };

	)

621 
	#±hªad_˛ónup_p›
(
execuã
) \

622 
__˛‰ame
.
__do_ô
 = (
execuã
); \

623 } 0)

	)

625 #ifde‡
__USE_GNU


629 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

631 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

632 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

633 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

634 .
__do_ô
 = 1 }; \

635 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

636 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

641 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

642 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

643 
__˛‰ame
.
__do_ô
 = (
execuã
); \

644 } 0)

	)

655 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

657 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

658 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

659 *
__ˇn˚l_¨g
 = (
¨g
); \

660 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

661 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

662 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

664 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

665 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

669 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

670 dÿ{

	)

671 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

672 
__˛ónup_f˘_©åibuã
;

676 
	#±hªad_˛ónup_p›
(
execuã
) \

679 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

680 i‡(
execuã
) \

681 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

682 } 0)

	)

683 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

684 
__˛ónup_f˘_©åibuã
;

686 #ifde‡
__USE_GNU


690 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

692 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

693 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

694 *
__ˇn˚l_¨g
 = (
¨g
); \

695 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

696 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

697 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

699 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

700 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

704 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

705 dÿ{

	)

706 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

707 
__˛ónup_f˘_©åibuã
;

712 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

715 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

716 i‡(
execuã
) \

717 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

718 
	}
} 0)

	)

719 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

720 
__˛ónup_f˘_©åibuã
;

724 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

725 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

726 #i‚de‡
SHARED


727 
	`__©åibuã__
 ((
__wók__
))

733 
__jmp_buf_èg
;

734 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROWNL
;

740 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

741 c⁄° 
±hªad_muãx©å_t
 *
__muãx©å
)

742 
__THROW
 
	`__n⁄nuŒ
 ((1));

745 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

746 
__THROW
 
	`__n⁄nuŒ
 ((1));

749 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

750 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

753 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

754 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

756 #ifde‡
__USE_XOPEN2K


758 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

759 c⁄° 
time•ec
 *
__ª°ri˘


760 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

764 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

765 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

769 
	$±hªad_muãx_gë¥io˚ûög
 (c⁄° 
±hªad_muãx_t
 *

770 
__ª°ri˘
 
__muãx
,

771 *
__ª°ri˘
 
__¥io˚ûög
)

772 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

776 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

777 
__¥io˚ûög
,

778 *
__ª°ri˘
 
__ﬁd_˚ûög
)

779 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

782 #ifde‡
__USE_XOPEN2K8


784 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

785 
__THROW
 
	`__n⁄nuŒ
 ((1));

786 #ifde‡
__USE_GNU


787 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

788 
__THROW
 
	`__n⁄nuŒ
 ((1));

797 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

798 
__THROW
 
	`__n⁄nuŒ
 ((1));

801 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

802 
__THROW
 
	`__n⁄nuŒ
 ((1));

805 
	$±hªad_muãx©å_gëpsh¨ed
 (c⁄° 
±hªad_muãx©å_t
 *

806 
__ª°ri˘
 
__©å
,

807 *
__ª°ri˘
 
__psh¨ed
)

808 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

811 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

812 
__psh¨ed
)

813 
__THROW
 
	`__n⁄nuŒ
 ((1));

815 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


817 
	$±hªad_muãx©å_gëty≥
 (c⁄° 
±hªad_muãx©å_t
 *
__ª°ri˘


818 
__©å
, *
__ª°ri˘
 
__köd
)

819 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

824 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

825 
__THROW
 
	`__n⁄nuŒ
 ((1));

829 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (c⁄° 
±hªad_muãx©å_t
 *

830 
__ª°ri˘
 
__©å
,

831 *
__ª°ri˘
 
__¥Ÿocﬁ
)

832 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

836 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

837 
__¥Ÿocﬁ
)

838 
__THROW
 
	`__n⁄nuŒ
 ((1));

841 
	$±hªad_muãx©å_gë¥io˚ûög
 (c⁄° 
±hªad_muãx©å_t
 *

842 
__ª°ri˘
 
__©å
,

843 *
__ª°ri˘
 
__¥io˚ûög
)

844 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

847 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

848 
__¥io˚ûög
)

849 
__THROW
 
	`__n⁄nuŒ
 ((1));

851 #ifde‡
__USE_XOPEN2K


853 
	$±hªad_muãx©å_gërobu°
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

854 *
__robu°√ss
)

855 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 #ifde‡
__USE_GNU


857 
	$±hªad_muãx©å_gërobu°_≈
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

858 *
__robu°√ss
)

859 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

863 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

864 
__robu°√ss
)

865 
__THROW
 
	`__n⁄nuŒ
 ((1));

866 #ifde‡
__USE_GNU


867 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

868 
__robu°√ss
)

869 
__THROW
 
	`__n⁄nuŒ
 ((1));

874 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


879 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

880 c⁄° 
±hªad_rwlock©å_t
 *
__ª°ri˘


881 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

884 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

885 
__THROW
 
	`__n⁄nuŒ
 ((1));

888 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

889 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

892 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

893 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

895 #ifde‡
__USE_XOPEN2K


897 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

898 c⁄° 
time•ec
 *
__ª°ri˘


899 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

903 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

904 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

907 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

908 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

910 #ifde‡
__USE_XOPEN2K


912 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

913 c⁄° 
time•ec
 *
__ª°ri˘


914 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

918 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

919 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

925 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

926 
__THROW
 
	`__n⁄nuŒ
 ((1));

929 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

930 
__THROW
 
	`__n⁄nuŒ
 ((1));

933 
	$±hªad_rwlock©å_gëpsh¨ed
 (c⁄° 
±hªad_rwlock©å_t
 *

934 
__ª°ri˘
 
__©å
,

935 *
__ª°ri˘
 
__psh¨ed
)

936 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

939 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

940 
__psh¨ed
)

941 
__THROW
 
	`__n⁄nuŒ
 ((1));

944 
	$±hªad_rwlock©å_gëköd_≈
 (c⁄° 
±hªad_rwlock©å_t
 *

945 
__ª°ri˘
 
__©å
,

946 *
__ª°ri˘
 
__¥ef
)

947 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

950 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

951 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

959 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

960 c⁄° 
±hªad_c⁄d©å_t
 *
__ª°ri˘
 
__c⁄d_©å
)

961 
__THROW
 
	`__n⁄nuŒ
 ((1));

964 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

965 
__THROW
 
	`__n⁄nuŒ
 ((1));

968 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

969 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

972 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

973 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

980 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

981 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

982 
	`__n⁄nuŒ
 ((1, 2));

991 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

992 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

993 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

994 
	`__n⁄nuŒ
 ((1, 2, 3));

999 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

1000 
__THROW
 
	`__n⁄nuŒ
 ((1));

1003 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

1004 
__THROW
 
	`__n⁄nuŒ
 ((1));

1007 
	$±hªad_c⁄d©å_gëpsh¨ed
 (c⁄° 
±hªad_c⁄d©å_t
 *

1008 
__ª°ri˘
 
__©å
,

1009 *
__ª°ri˘
 
__psh¨ed
)

1010 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1013 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1014 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1016 #ifde‡
__USE_XOPEN2K


1018 
	$±hªad_c⁄d©å_gë˛ock
 (c⁄° 
±hªad_c⁄d©å_t
 *

1019 
__ª°ri˘
 
__©å
,

1020 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1021 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1024 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1025 
__˛ockid_t
 
__˛ock_id
)

1026 
__THROW
 
	`__n⁄nuŒ
 ((1));

1030 #ifde‡
__USE_XOPEN2K


1035 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1036 
__THROW
 
	`__n⁄nuŒ
 ((1));

1039 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1040 
__THROW
 
	`__n⁄nuŒ
 ((1));

1043 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1044 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1047 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1048 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1051 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1052 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1059 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1060 c⁄° 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1061 
__©å
, 
__cou¡
)

1062 
__THROW
 
	`__n⁄nuŒ
 ((1));

1065 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1066 
__THROW
 
	`__n⁄nuŒ
 ((1));

1069 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1070 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1074 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1075 
__THROW
 
	`__n⁄nuŒ
 ((1));

1078 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1079 
__THROW
 
	`__n⁄nuŒ
 ((1));

1082 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (c⁄° 
±hªad_b¨rõøâr_t
 *

1083 
__ª°ri˘
 
__©å
,

1084 *
__ª°ri˘
 
__psh¨ed
)

1085 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1088 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1089 
__psh¨ed
)

1090 
__THROW
 
	`__n⁄nuŒ
 ((1));

1102 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1103 (*
__de°r_fun˘i⁄
) (*))

1104 
__THROW
 
	`__n⁄nuŒ
 ((1));

1107 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1110 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1113 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1114 c⁄° *
__poöãr
Ë
__THROW
 ;

1117 #ifde‡
__USE_XOPEN2K


1119 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1120 
__˛ockid_t
 *
__˛ock_id
)

1121 
__THROW
 
	`__n⁄nuŒ
 ((2));

1136 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1137 (*
__∑ª¡
) (),

1138 (*
__chûd
Ë()Ë
__THROW
;

1141 #ifde‡
__USE_EXTERN_INLINES


1143 
__exã∫_ölöe
 

1144 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1146  
__thªad1
 =
__thªad2
;

1147 
	}
}

1150 
	g__END_DECLS


	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

111 
	#EHWPOISON
 133

	)

	@/usr/include/bits/setjmp.h

19 #i‚de‡
_BITS_SETJMP_H


20 
	#_BITS_SETJMP_H
 1

	)

22 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


26 
	~<bôs/w‹dsize.h
>

28 #i‚de‡
_ASM


30 #i‡
__WORDSIZE
 == 64

31 
	t__jmp_buf
[8];

32 #ñi‡
deföed
 
__x86_64__


33 
	t__jmp_buf
[8];

35 
	t__jmp_buf
[6];

	@/usr/include/sched.h

20 #i‚def 
_SCHED_H


21 
	#_SCHED_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
	#__√ed_time_t


	)

32 
	#__√ed_time•ec


	)

33 
	~<time.h
>

35 #i‚de‡
__pid_t_deföed


36 
__pid_t
 
	tpid_t
;

37 
	#__pid_t_deföed


	)

42 
	~<bôs/sched.h
>

44 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

47 
__BEGIN_DECLS


50 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, c⁄° 
sched_∑øm
 *
__∑øm
)

51 
__THROW
;

54 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

57 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

58 c⁄° 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

61 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

64 
	$sched_yõld
 (Ë
__THROW
;

67 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

70 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

73 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

76 #ifde‡
__USE_GNU


78 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

79 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

80 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

82 
˝u£ç
)

	)

83 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

84 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

86 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

87 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

89 
˝u£ç
)

	)

90 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

91 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

93 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

94 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

95 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

96 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

98 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

99 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

100 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

101 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

102 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

103 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

104 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

105 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

106 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

107 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

108 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

109 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

111 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

112 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

113 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

117 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

118 c⁄° 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

121 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

122 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

125 
__END_DECLS


	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/bits/sched.h

21 #i‚de‡
__√ed_sched∑øm


23 #i‚de‡
_SCHED_H


29 
	#SCHED_OTHER
 0

	)

30 
	#SCHED_FIFO
 1

	)

31 
	#SCHED_RR
 2

	)

32 #ifde‡
__USE_GNU


33 
	#SCHED_BATCH
 3

	)

34 
	#SCHED_IDLE
 5

	)

36 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

39 #ifde‡
__USE_GNU


41 
	#CSIGNAL
 0x000000f‡

	)

42 
	#CLONE_VM
 0x00000100

	)

43 
	#CLONE_FS
 0x00000200

	)

44 
	#CLONE_FILES
 0x00000400

	)

45 
	#CLONE_SIGHAND
 0x00000800

	)

46 
	#CLONE_PTRACE
 0x00002000

	)

47 
	#CLONE_VFORK
 0x00004000

	)

49 
	#CLONE_PARENT
 0x00008000

	)

51 
	#CLONE_THREAD
 0x00010000

	)

52 
	#CLONE_NEWNS
 0x00020000

	)

53 
	#CLONE_SYSVSEM
 0x00040000

	)

54 
	#CLONE_SETTLS
 0x00080000

	)

55 
	#CLONE_PARENT_SETTID
 0x00100000

	)

57 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

59 
	#CLONE_DETACHED
 0x00400000

	)

60 
	#CLONE_UNTRACED
 0x00800000

	)

62 
	#CLONE_CHILD_SETTID
 0x01000000

	)

64 
	#CLONE_NEWUTS
 0x04000000

	)

65 
	#CLONE_NEWIPC
 0x08000000

	)

66 
	#CLONE_NEWUSER
 0x10000000

	)

67 
	#CLONE_NEWPID
 0x20000000

	)

68 
	#CLONE_NEWNET
 0x40000000

	)

69 
	#CLONE_IO
 0x80000000

	)

73 
	ssched_∑øm


75 
	m__sched_¥i‹ôy
;

78 
	g__BEGIN_DECLS


80 #ifde‡
__USE_GNU


82 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

83 
__Êags
, *
__¨g
, ...Ë
__THROW
;

86 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

89 
	$sched_gë˝u
 (Ë
__THROW
;

92 
	$£äs
 (
__fd
, 
__n°y≥
Ë
__THROW
;

96 
__END_DECLS


100 #i‡!
deföed
 
__deföed_sched∑øm
 \

101 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

102 
	#__deföed_sched∑øm
 1

	)

104 
	s__sched_∑øm


106 
__sched_¥i‹ôy
;

108 #unde‡
__√ed_sched∑øm


112 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


113 
	#__˝u_£t_t_deföed


	)

115 
	#__CPU_SETSIZE
 1024

	)

116 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

119 
	t__˝u_mask
;

122 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

123 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

128 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

129 } 
	t˝u_£t_t
;

132 #i‡
	`__GNUC_PREREQ
 (2, 91)

133 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

134 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

136 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

138 
size_t
 
__i
; \

139 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

140 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

141 
__i
 = 0; __ò< 
__imax
; ++__i) \

142 
__bôs
[
__i
] = 0; \

143 
	}
} 0)

	)

145 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

146 (
__exãnsi⁄__
 \

147 ({ 
size_t
 
__˝u
 = (
˝u
); \

148 
__˝u
 < 8 * (
£tsize
) \

149 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

150 |
	`__CPUMASK
 (
__˝u
)) \

151 : 0; }))

	)

152 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

153 (
__exãnsi⁄__
 \

154 ({ 
size_t
 
__˝u
 = (
˝u
); \

155 
__˝u
 < 8 * (
£tsize
) \

156 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

157 &~
	`__CPUMASK
 (
__˝u
)) \

158 : 0; }))

	)

159 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

160 (
__exãnsi⁄__
 \

161 ({ 
size_t
 
__˝u
 = (
˝u
); \

162 
__˝u
 < 8 * (
£tsize
) \

163 ? ((((c⁄° 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

164 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

165 : 0; }))

	)

167 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

168 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

170 #i‡
__GNUC_PREREQ
 (2, 91)

171 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

172 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

174 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

175 (
__exãnsi⁄__
 \

176 ({ c⁄° 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

177 c⁄° 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

178 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

179 
size_t
 
__i
; \

180 
__i
 = 0; __ò< 
__imax
; ++__i) \

181 i‡(
__¨r1
[
__i
] !
__¨r2
[__i]) \

183 
__i
 =
__imax
; }))

	)

186 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

187 (
__exãnsi⁄__
 \

188 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

189 c⁄° 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

190 c⁄° 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

191 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

192 
size_t
 
__i
; \

193 
__i
 = 0; __ò< 
__imax
; ++__i) \

194 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

195 
__de°
; }))

	)

197 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

198 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

199 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

200 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

202 
__BEGIN_DECLS


204 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

205 
__THROW
;

206 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

207 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

209 
__END_DECLS


	@
1
.
1
/usr/include
122
2723
crt/crt1.c
include/common.h
include/defs.h
include/libc/dir.h
include/libc/malloc.h
include/shell.h
include/stdarg.h
include/stdio.h
include/stdlib.h
include/sys/dirent.h
include/sys/errno.h
include/sys/execve.h
include/sys/gdt.h
include/sys/idt.h
include/sys/irq.h
include/sys/isr.h
include/sys/kern_page_table.h
include/sys/pmem_manager.h
include/sys/process_que.h
include/sys/string.h
include/sys/syscall.h
include/sys/tarfs.h
include/sys/task_management.h
include/sys/task_switch.h
include/sys/util.h
include/sys/v_mem_manager.h
include/syscall.h
ld/ld.c
libc/dir.c
libc/execve.c
libc/lib.c
libc/malloc.c
libc/printf.c
libc/putint.c
libc/u_scanf.c
libc/yield.c
sys/dir.c
sys/execve.c
sys/gdt.c
sys/idt.c
sys/irq.c
sys/isr.c
sys/kern_page_table.c
sys/main.c
sys/pmem_manager.c
sys/printf.c
sys/process_que.c
sys/scanf.c
sys/string.c
sys/syscall.c
sys/tarfs.c
sys/task_management.c
sys/task_switch.c
sys/util.c
sys/v_mem_manager.c
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/sys/errno.h
/usr/include/sys/syscall.h
/usr/include/syscall.h
/usr/include/alloca.h
/usr/include/asm/unistd.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-float.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/syscall.h
/usr/include/bits/types.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/errno.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/sys/types.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/asm/unistd_32.h
/usr/include/asm/unistd_64.h
/usr/include/asm/unistd_x32.h
/usr/include/bits/errno.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/typesizes.h
/usr/include/bits/wordsize.h
/usr/include/ctype.h
/usr/include/endian.h
/usr/include/gnu/stubs.h
/usr/include/stdc-predef.h
/usr/include/sys/cdefs.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/time.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/libc-lock.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/sigset.h
/usr/include/bits/time.h
/usr/include/gconv.h
/usr/include/gnu/stubs-64.h
/usr/include/linux/errno.h
/usr/include/wchar.h
/usr/include/asm/errno.h
/usr/include/bits/byteswap-16.h
/usr/include/bits/timex.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar.h
/usr/include/bits/wchar2.h
/usr/include/pthread.h
/usr/include/wctype.h
/usr/include/asm-generic/errno.h
/usr/include/bits/setjmp.h
/usr/include/sched.h
/usr/include/asm-generic/errno-base.h
/usr/include/bits/sched.h
